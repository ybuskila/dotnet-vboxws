//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.1433
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace VBoxWebService
{
    // 
    // Este código fuente fue generado automáticamente por wsdl, Versión=2.0.50727.42.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "vboxBinding", Namespace = "http://www.virtualbox.org/")]
    public partial class VBoxService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback IVirtualBox_getVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getRevisionOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getPackageTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getHomeFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getSettingsFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getSettingsFileVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getSettingsFormatVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getHostOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getSystemPropertiesOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getMachinesOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getMachines2OperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getHardDisksOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getDVDImagesOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getFloppyImagesOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getProgressOperationsOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getGuestOSTypesOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getSharedFoldersOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getPerformanceCollectorOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_createMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_createLegacyMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_registerMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_findMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_unregisterMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_createHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openVirtualDiskImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_registerHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_findHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_findVirtualDiskImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_unregisterHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openDVDImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_registerDVDImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getDVDImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_findDVDImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getDVDImageUsageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_unregisterDVDImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openFloppyImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_registerFloppyImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getFloppyImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_findFloppyImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getFloppyImageUsageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_unregisterFloppyImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getGuestOSTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_createSharedFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_removeSharedFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getNextExtraDataKeyOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_getExtraDataOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_setExtraDataOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openSessionOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openRemoteSessionOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_openExistingSessionOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_waitForPropertyChangeOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_saveSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualBox_saveSettingsWithBackupOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getLogoFadeInOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setLogoFadeInOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getLogoFadeOutOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setLogoFadeOutOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getLogoDisplayTimeOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setLogoDisplayTimeOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getLogoImagePathOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setLogoImagePathOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getBootMenuModeOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setBootMenuModeOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getACPIEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setACPIEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getIOAPICEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setIOAPICEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getTimeOffsetOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setTimeOffsetOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getPXEDebugEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setPXEDebugEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_getIDEControllerTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IBIOSSettings_setIDEControllerTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getParentOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getAccessibleOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getNameOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setNameOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getOSTypeIdOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setOSTypeIdOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getMemorySizeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setMemorySizeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getMemoryBalloonSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setMemoryBalloonSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getStatisticsUpdateIntervalOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setStatisticsUpdateIntervalOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getVRAMSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setVRAMSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getMonitorCountOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setMonitorCountOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getBIOSSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getHWVirtExEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setHWVirtExEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getHWVirtExNestedPagingEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setHWVirtExNestedPagingEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getPAEEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setPAEEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSnapshotFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setSnapshotFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getVRDPServerOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getHardDiskAttachmentsOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getDVDDriveOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getFloppyDriveOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getUSBControllerOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getAudioAdapterOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSATAControllerOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSettingsFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSettingsFileVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSettingsModifiedOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSessionStateOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSessionTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSessionPidOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getStateOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getLastStateChangeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getStateFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getLogFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getCurrentSnapshotOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSnapshotCountOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getCurrentStateModifiedOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSharedFoldersOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getClipboardModeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setClipboardModeOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setBootOrderOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getBootOrderOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_attachHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_detachHardDiskOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getNetworkAdapterOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSerialPortOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getParallelPortOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getNextExtraDataKeyOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getExtraDataOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setExtraDataOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_saveSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_saveSettingsWithBackupOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_discardSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_deleteSettingsOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getSnapshotOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_findSnapshotOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setCurrentSnapshotOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_createSharedFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_removeSharedFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_canShowConsoleWindowOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_showConsoleWindowOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getGuestPropertyOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getGuestPropertyValueOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_getGuestPropertyTimestampOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setGuestPropertyOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_setGuestPropertyValueOperationCompleted;

        private System.Threading.SendOrPostCallback IMachine_enumerateGuestPropertiesOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getMachineOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getStateOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getKeyboardOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getMouseOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getUSBDevicesOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getRemoteUSBDevicesOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getSharedFoldersOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getRemoteDisplayInfoOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_powerUpOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_powerDownOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_resetOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_pauseOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_resumeOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_powerButtonOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_sleepButtonOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getPowerButtonHandledOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_saveStateOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_adoptSavedStateOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_discardSavedStateOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_getDeviceActivityOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_attachUSBDeviceOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_detachUSBDeviceOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_createSharedFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_removeSharedFolderOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_takeSnapshotOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_discardSnapshotOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_discardCurrentStateOperationCompleted;

        private System.Threading.SendOrPostCallback IConsole_discardCurrentSnapshotAndStateOperationCompleted;

        private System.Threading.SendOrPostCallback IHostDVDDrive_getNameOperationCompleted;

        private System.Threading.SendOrPostCallback IHostDVDDrive_getDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IHostDVDDrive_getUdiOperationCompleted;

        private System.Threading.SendOrPostCallback IHostFloppyDrive_getNameOperationCompleted;

        private System.Threading.SendOrPostCallback IHostFloppyDrive_getDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IHostFloppyDrive_getUdiOperationCompleted;

        private System.Threading.SendOrPostCallback IHostNetworkInterface_getNameOperationCompleted;

        private System.Threading.SendOrPostCallback IHostNetworkInterface_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getDVDDrivesOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getFloppyDrivesOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getUSBDevicesOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getUSBDeviceFiltersOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getNetworkInterfacesOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getProcessorCountOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getProcessorOnlineCountOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getMemorySizeOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getMemoryAvailableOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getOperatingSystemOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getOSVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getUTCTimeOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getProcessorSpeedOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_getProcessorDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_createUSBDeviceFilterOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_insertUSBDeviceFilterOperationCompleted;

        private System.Threading.SendOrPostCallback IHost_removeUSBDeviceFilterOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getMinGuestRAMOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getMaxGuestRAMOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getMinGuestVRAMOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getMaxGuestVRAMOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getMaxVDISizeOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getNetworkAdapterCountOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getSerialPortCountOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getParallelPortCountOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getMaxBootPositionOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getDefaultVDIFolderOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_setDefaultVDIFolderOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getDefaultMachineFolderOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_setDefaultMachineFolderOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getRemoteDisplayAuthLibraryOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_setRemoteDisplayAuthLibraryOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getWebServiceAuthLibraryOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_setWebServiceAuthLibraryOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getHWVirtExEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_setHWVirtExEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_getLogHistoryCountOperationCompleted;

        private System.Threading.SendOrPostCallback ISystemProperties_setLogHistoryCountOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getCancelableOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getPercentOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getCompletedOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getCanceledOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getResultCodeOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getOperationCountOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getOperationOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getOperationDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_getOperationPercentOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_waitForCompletionOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_waitForOperationCompletionOperationCompleted;

        private System.Threading.SendOrPostCallback IProgress_cancelOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getNameOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_setNameOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_setDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getTimeStampOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getOnlineOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getMachineOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getParentOperationCompleted;

        private System.Threading.SendOrPostCallback ISnapshot_getChildrenOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_setDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getStorageTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getLocationOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_setTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getParentOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getChildrenOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getRootOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getAccessibleOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getAllAccessibleOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getLastAccessErrorOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getActualSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getMachineIdOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_getSnapshotIdOperationCompleted;

        private System.Threading.SendOrPostCallback IHardDisk_cloneToImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualDiskImage_getFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualDiskImage_setFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualDiskImage_getCreatedOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualDiskImage_createDynamicImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualDiskImage_createFixedImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVirtualDiskImage_deleteImageOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_getServerOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_setServerOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_getPortOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_setPortOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_getTargetOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_setTargetOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_getLunOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_setLunOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_getUserNameOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_setUserNameOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_getPasswordOperationCompleted;

        private System.Threading.SendOrPostCallback IISCSIHardDisk_setPasswordOperationCompleted;

        private System.Threading.SendOrPostCallback IVMDKImage_getFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IVMDKImage_setFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IVMDKImage_getCreatedOperationCompleted;

        private System.Threading.SendOrPostCallback IVMDKImage_createDynamicImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVMDKImage_createFixedImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVMDKImage_deleteImageOperationCompleted;

        private System.Threading.SendOrPostCallback ICustomHardDisk_getLocationOperationCompleted;

        private System.Threading.SendOrPostCallback ICustomHardDisk_setLocationOperationCompleted;

        private System.Threading.SendOrPostCallback ICustomHardDisk_getFormatOperationCompleted;

        private System.Threading.SendOrPostCallback ICustomHardDisk_getCreatedOperationCompleted;

        private System.Threading.SendOrPostCallback ICustomHardDisk_createDynamicImageOperationCompleted;

        private System.Threading.SendOrPostCallback ICustomHardDisk_createFixedImageOperationCompleted;

        private System.Threading.SendOrPostCallback ICustomHardDisk_deleteImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVHDImage_getFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IVHDImage_setFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IVHDImage_getCreatedOperationCompleted;

        private System.Threading.SendOrPostCallback IVHDImage_createDynamicImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVHDImage_createFixedImageOperationCompleted;

        private System.Threading.SendOrPostCallback IVHDImage_deleteImageOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDImage_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDImage_getFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDImage_getAccessibleOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDImage_getSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_getStateOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_getPassthroughOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_setPassthroughOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_mountImageOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_captureHostDriveOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_unmountOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_getImageOperationCompleted;

        private System.Threading.SendOrPostCallback IDVDDrive_getHostDriveOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyImage_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyImage_getFilePathOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyImage_getAccessibleOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyImage_getSizeOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_getStateOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_mountImageOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_captureHostDriveOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_unmountOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_getImageOperationCompleted;

        private System.Threading.SendOrPostCallback IFloppyDrive_getHostDriveOperationCompleted;

        private System.Threading.SendOrPostCallback IKeyboard_putScancodeOperationCompleted;

        private System.Threading.SendOrPostCallback IKeyboard_putScancodesOperationCompleted;

        private System.Threading.SendOrPostCallback IKeyboard_putCADOperationCompleted;

        private System.Threading.SendOrPostCallback IMouse_getAbsoluteSupportedOperationCompleted;

        private System.Threading.SendOrPostCallback IMouse_putMouseEventOperationCompleted;

        private System.Threading.SendOrPostCallback IMouse_putMouseEventAbsoluteOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getAdapterTypeOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setAdapterTypeOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getSlotOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getMACAddressOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setMACAddressOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getAttachmentTypeOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getHostInterfaceOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setHostInterfaceOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getInternalNetworkOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setInternalNetworkOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getNATNetworkOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setNATNetworkOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getCableConnectedOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setCableConnectedOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getLineSpeedOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setLineSpeedOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getTraceEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setTraceEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_getTraceFileOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_setTraceFileOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_attachToNATOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_attachToHostInterfaceOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_attachToInternalNetworkOperationCompleted;

        private System.Threading.SendOrPostCallback INetworkAdapter_detachOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_getSlotOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_getIOBaseOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_setIOBaseOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_getIRQOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_setIRQOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_getHostModeOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_setHostModeOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_getServerOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_setServerOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_getPathOperationCompleted;

        private System.Threading.SendOrPostCallback ISerialPort_setPathOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_getSlotOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_getIOBaseOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_setIOBaseOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_getIRQOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_setIRQOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_getPathOperationCompleted;

        private System.Threading.SendOrPostCallback IParallelPort_setPathOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_getEnabledEhciOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_setEnabledEhciOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_getUSBStandardOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_getDeviceFiltersOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_createDeviceFilterOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_insertDeviceFilterOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBController_removeDeviceFilterOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getIdOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getVendorIdOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getProductIdOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getRevisionOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getManufacturerOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getProductOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getSerialNumberOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getAddressOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getPortOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getPortVersionOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDevice_getRemoteOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getNameOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setNameOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getActiveOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setActiveOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getVendorIdOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setVendorIdOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getProductIdOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setProductIdOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getRevisionOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setRevisionOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getManufacturerOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setManufacturerOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getProductOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setProductOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getSerialNumberOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setSerialNumberOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getPortOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setPortOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getRemoteOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setRemoteOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_getMaskedInterfacesOperationCompleted;

        private System.Threading.SendOrPostCallback IUSBDeviceFilter_setMaskedInterfacesOperationCompleted;

        private System.Threading.SendOrPostCallback IHostUSBDevice_getStateOperationCompleted;

        private System.Threading.SendOrPostCallback IHostUSBDeviceFilter_getActionOperationCompleted;

        private System.Threading.SendOrPostCallback IHostUSBDeviceFilter_setActionOperationCompleted;

        private System.Threading.SendOrPostCallback IAudioAdapter_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IAudioAdapter_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IAudioAdapter_getAudioControllerOperationCompleted;

        private System.Threading.SendOrPostCallback IAudioAdapter_setAudioControllerOperationCompleted;

        private System.Threading.SendOrPostCallback IAudioAdapter_getAudioDriverOperationCompleted;

        private System.Threading.SendOrPostCallback IAudioAdapter_setAudioDriverOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_getPortOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_setPortOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_getNetAddressOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_setNetAddressOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_getAuthTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_setAuthTypeOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_getAuthTimeoutOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_setAuthTimeoutOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_getAllowMultiConnectionOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_setAllowMultiConnectionOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_getReuseSingleConnectionOperationCompleted;

        private System.Threading.SendOrPostCallback IVRDPServer_setReuseSingleConnectionOperationCompleted;

        private System.Threading.SendOrPostCallback ISession_getStateOperationCompleted;

        private System.Threading.SendOrPostCallback ISession_getTypeOperationCompleted;

        private System.Threading.SendOrPostCallback ISession_getMachineOperationCompleted;

        private System.Threading.SendOrPostCallback ISession_getConsoleOperationCompleted;

        private System.Threading.SendOrPostCallback ISession_closeOperationCompleted;

        private System.Threading.SendOrPostCallback ISATAController_getEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback ISATAController_setEnabledOperationCompleted;

        private System.Threading.SendOrPostCallback ISATAController_getPortCountOperationCompleted;

        private System.Threading.SendOrPostCallback ISATAController_setPortCountOperationCompleted;

        private System.Threading.SendOrPostCallback ISATAController_GetIDEEmulationPortOperationCompleted;

        private System.Threading.SendOrPostCallback ISATAController_SetIDEEmulationPortOperationCompleted;

        private System.Threading.SendOrPostCallback IManagedObjectRef_getInterfaceNameOperationCompleted;

        private System.Threading.SendOrPostCallback IManagedObjectRef_releaseOperationCompleted;

        private System.Threading.SendOrPostCallback IWebsessionManager_logonOperationCompleted;

        private System.Threading.SendOrPostCallback IWebsessionManager_getSessionObjectOperationCompleted;

        private System.Threading.SendOrPostCallback IWebsessionManager_logoffOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceMetric_getMetricNameOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceMetric_getDescriptionOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceMetric_getPeriodOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceMetric_getCountOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceMetric_getUnitOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceMetric_getMinimumValueOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceMetric_getMaximumValueOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceCollector_getMetricNamesOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceCollector_getMetricsOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceCollector_setupMetricsOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceCollector_enableMetricsOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceCollector_disableMetricsOperationCompleted;

        private System.Threading.SendOrPostCallback IPerformanceCollector_queryMetricsDataOperationCompleted;

        /// <remarks/>
        public VBoxService(Uri url)
        {
            this.Url = url.ToString();
        }

        /// <remarks/>
        public event IVirtualBox_getVersionCompletedEventHandler IVirtualBox_getVersionCompleted;

        /// <remarks/>
        public event IVirtualBox_getRevisionCompletedEventHandler IVirtualBox_getRevisionCompleted;

        /// <remarks/>
        public event IVirtualBox_getPackageTypeCompletedEventHandler IVirtualBox_getPackageTypeCompleted;

        /// <remarks/>
        public event IVirtualBox_getHomeFolderCompletedEventHandler IVirtualBox_getHomeFolderCompleted;

        /// <remarks/>
        public event IVirtualBox_getSettingsFilePathCompletedEventHandler IVirtualBox_getSettingsFilePathCompleted;

        /// <remarks/>
        public event IVirtualBox_getSettingsFileVersionCompletedEventHandler IVirtualBox_getSettingsFileVersionCompleted;

        /// <remarks/>
        public event IVirtualBox_getSettingsFormatVersionCompletedEventHandler IVirtualBox_getSettingsFormatVersionCompleted;

        /// <remarks/>
        public event IVirtualBox_getHostCompletedEventHandler IVirtualBox_getHostCompleted;

        /// <remarks/>
        public event IVirtualBox_getSystemPropertiesCompletedEventHandler IVirtualBox_getSystemPropertiesCompleted;

        /// <remarks/>
        public event IVirtualBox_getMachinesCompletedEventHandler IVirtualBox_getMachinesCompleted;

        /// <remarks/>
        public event IVirtualBox_getMachines2CompletedEventHandler IVirtualBox_getMachines2Completed;

        /// <remarks/>
        public event IVirtualBox_getHardDisksCompletedEventHandler IVirtualBox_getHardDisksCompleted;

        /// <remarks/>
        public event IVirtualBox_getDVDImagesCompletedEventHandler IVirtualBox_getDVDImagesCompleted;

        /// <remarks/>
        public event IVirtualBox_getFloppyImagesCompletedEventHandler IVirtualBox_getFloppyImagesCompleted;

        /// <remarks/>
        public event IVirtualBox_getProgressOperationsCompletedEventHandler IVirtualBox_getProgressOperationsCompleted;

        /// <remarks/>
        public event IVirtualBox_getGuestOSTypesCompletedEventHandler IVirtualBox_getGuestOSTypesCompleted;

        /// <remarks/>
        public event IVirtualBox_getSharedFoldersCompletedEventHandler IVirtualBox_getSharedFoldersCompleted;

        /// <remarks/>
        public event IVirtualBox_getPerformanceCollectorCompletedEventHandler IVirtualBox_getPerformanceCollectorCompleted;

        /// <remarks/>
        public event IVirtualBox_createMachineCompletedEventHandler IVirtualBox_createMachineCompleted;

        /// <remarks/>
        public event IVirtualBox_createLegacyMachineCompletedEventHandler IVirtualBox_createLegacyMachineCompleted;

        /// <remarks/>
        public event IVirtualBox_openMachineCompletedEventHandler IVirtualBox_openMachineCompleted;

        /// <remarks/>
        public event IVirtualBox_registerMachineCompletedEventHandler IVirtualBox_registerMachineCompleted;

        /// <remarks/>
        public event IVirtualBox_getMachineCompletedEventHandler IVirtualBox_getMachineCompleted;

        /// <remarks/>
        public event IVirtualBox_findMachineCompletedEventHandler IVirtualBox_findMachineCompleted;

        /// <remarks/>
        public event IVirtualBox_unregisterMachineCompletedEventHandler IVirtualBox_unregisterMachineCompleted;

        /// <remarks/>
        public event IVirtualBox_createHardDiskCompletedEventHandler IVirtualBox_createHardDiskCompleted;

        /// <remarks/>
        public event IVirtualBox_openHardDiskCompletedEventHandler IVirtualBox_openHardDiskCompleted;

        /// <remarks/>
        public event IVirtualBox_openVirtualDiskImageCompletedEventHandler IVirtualBox_openVirtualDiskImageCompleted;

        /// <remarks/>
        public event IVirtualBox_registerHardDiskCompletedEventHandler IVirtualBox_registerHardDiskCompleted;

        /// <remarks/>
        public event IVirtualBox_getHardDiskCompletedEventHandler IVirtualBox_getHardDiskCompleted;

        /// <remarks/>
        public event IVirtualBox_findHardDiskCompletedEventHandler IVirtualBox_findHardDiskCompleted;

        /// <remarks/>
        public event IVirtualBox_findVirtualDiskImageCompletedEventHandler IVirtualBox_findVirtualDiskImageCompleted;

        /// <remarks/>
        public event IVirtualBox_unregisterHardDiskCompletedEventHandler IVirtualBox_unregisterHardDiskCompleted;

        /// <remarks/>
        public event IVirtualBox_openDVDImageCompletedEventHandler IVirtualBox_openDVDImageCompleted;

        /// <remarks/>
        public event IVirtualBox_registerDVDImageCompletedEventHandler IVirtualBox_registerDVDImageCompleted;

        /// <remarks/>
        public event IVirtualBox_getDVDImageCompletedEventHandler IVirtualBox_getDVDImageCompleted;

        /// <remarks/>
        public event IVirtualBox_findDVDImageCompletedEventHandler IVirtualBox_findDVDImageCompleted;

        /// <remarks/>
        public event IVirtualBox_getDVDImageUsageCompletedEventHandler IVirtualBox_getDVDImageUsageCompleted;

        /// <remarks/>
        public event IVirtualBox_unregisterDVDImageCompletedEventHandler IVirtualBox_unregisterDVDImageCompleted;

        /// <remarks/>
        public event IVirtualBox_openFloppyImageCompletedEventHandler IVirtualBox_openFloppyImageCompleted;

        /// <remarks/>
        public event IVirtualBox_registerFloppyImageCompletedEventHandler IVirtualBox_registerFloppyImageCompleted;

        /// <remarks/>
        public event IVirtualBox_getFloppyImageCompletedEventHandler IVirtualBox_getFloppyImageCompleted;

        /// <remarks/>
        public event IVirtualBox_findFloppyImageCompletedEventHandler IVirtualBox_findFloppyImageCompleted;

        /// <remarks/>
        public event IVirtualBox_getFloppyImageUsageCompletedEventHandler IVirtualBox_getFloppyImageUsageCompleted;

        /// <remarks/>
        public event IVirtualBox_unregisterFloppyImageCompletedEventHandler IVirtualBox_unregisterFloppyImageCompleted;

        /// <remarks/>
        public event IVirtualBox_getGuestOSTypeCompletedEventHandler IVirtualBox_getGuestOSTypeCompleted;

        /// <remarks/>
        public event IVirtualBox_createSharedFolderCompletedEventHandler IVirtualBox_createSharedFolderCompleted;

        /// <remarks/>
        public event IVirtualBox_removeSharedFolderCompletedEventHandler IVirtualBox_removeSharedFolderCompleted;

        /// <remarks/>
        public event IVirtualBox_getNextExtraDataKeyCompletedEventHandler IVirtualBox_getNextExtraDataKeyCompleted;

        /// <remarks/>
        public event IVirtualBox_getExtraDataCompletedEventHandler IVirtualBox_getExtraDataCompleted;

        /// <remarks/>
        public event IVirtualBox_setExtraDataCompletedEventHandler IVirtualBox_setExtraDataCompleted;

        /// <remarks/>
        public event IVirtualBox_openSessionCompletedEventHandler IVirtualBox_openSessionCompleted;

        /// <remarks/>
        public event IVirtualBox_openRemoteSessionCompletedEventHandler IVirtualBox_openRemoteSessionCompleted;

        /// <remarks/>
        public event IVirtualBox_openExistingSessionCompletedEventHandler IVirtualBox_openExistingSessionCompleted;

        /// <remarks/>
        public event IVirtualBox_waitForPropertyChangeCompletedEventHandler IVirtualBox_waitForPropertyChangeCompleted;

        /// <remarks/>
        public event IVirtualBox_saveSettingsCompletedEventHandler IVirtualBox_saveSettingsCompleted;

        /// <remarks/>
        public event IVirtualBox_saveSettingsWithBackupCompletedEventHandler IVirtualBox_saveSettingsWithBackupCompleted;

        /// <remarks/>
        public event IBIOSSettings_getLogoFadeInCompletedEventHandler IBIOSSettings_getLogoFadeInCompleted;

        /// <remarks/>
        public event IBIOSSettings_setLogoFadeInCompletedEventHandler IBIOSSettings_setLogoFadeInCompleted;

        /// <remarks/>
        public event IBIOSSettings_getLogoFadeOutCompletedEventHandler IBIOSSettings_getLogoFadeOutCompleted;

        /// <remarks/>
        public event IBIOSSettings_setLogoFadeOutCompletedEventHandler IBIOSSettings_setLogoFadeOutCompleted;

        /// <remarks/>
        public event IBIOSSettings_getLogoDisplayTimeCompletedEventHandler IBIOSSettings_getLogoDisplayTimeCompleted;

        /// <remarks/>
        public event IBIOSSettings_setLogoDisplayTimeCompletedEventHandler IBIOSSettings_setLogoDisplayTimeCompleted;

        /// <remarks/>
        public event IBIOSSettings_getLogoImagePathCompletedEventHandler IBIOSSettings_getLogoImagePathCompleted;

        /// <remarks/>
        public event IBIOSSettings_setLogoImagePathCompletedEventHandler IBIOSSettings_setLogoImagePathCompleted;

        /// <remarks/>
        public event IBIOSSettings_getBootMenuModeCompletedEventHandler IBIOSSettings_getBootMenuModeCompleted;

        /// <remarks/>
        public event IBIOSSettings_setBootMenuModeCompletedEventHandler IBIOSSettings_setBootMenuModeCompleted;

        /// <remarks/>
        public event IBIOSSettings_getACPIEnabledCompletedEventHandler IBIOSSettings_getACPIEnabledCompleted;

        /// <remarks/>
        public event IBIOSSettings_setACPIEnabledCompletedEventHandler IBIOSSettings_setACPIEnabledCompleted;

        /// <remarks/>
        public event IBIOSSettings_getIOAPICEnabledCompletedEventHandler IBIOSSettings_getIOAPICEnabledCompleted;

        /// <remarks/>
        public event IBIOSSettings_setIOAPICEnabledCompletedEventHandler IBIOSSettings_setIOAPICEnabledCompleted;

        /// <remarks/>
        public event IBIOSSettings_getTimeOffsetCompletedEventHandler IBIOSSettings_getTimeOffsetCompleted;

        /// <remarks/>
        public event IBIOSSettings_setTimeOffsetCompletedEventHandler IBIOSSettings_setTimeOffsetCompleted;

        /// <remarks/>
        public event IBIOSSettings_getPXEDebugEnabledCompletedEventHandler IBIOSSettings_getPXEDebugEnabledCompleted;

        /// <remarks/>
        public event IBIOSSettings_setPXEDebugEnabledCompletedEventHandler IBIOSSettings_setPXEDebugEnabledCompleted;

        /// <remarks/>
        public event IBIOSSettings_getIDEControllerTypeCompletedEventHandler IBIOSSettings_getIDEControllerTypeCompleted;

        /// <remarks/>
        public event IBIOSSettings_setIDEControllerTypeCompletedEventHandler IBIOSSettings_setIDEControllerTypeCompleted;

        /// <remarks/>
        public event IMachine_getParentCompletedEventHandler IMachine_getParentCompleted;

        /// <remarks/>
        public event IMachine_getAccessibleCompletedEventHandler IMachine_getAccessibleCompleted;

        /// <remarks/>
        public event IMachine_getNameCompletedEventHandler IMachine_getNameCompleted;

        /// <remarks/>
        public event IMachine_setNameCompletedEventHandler IMachine_setNameCompleted;

        /// <remarks/>
        public event IMachine_getDescriptionCompletedEventHandler IMachine_getDescriptionCompleted;

        /// <remarks/>
        public event IMachine_setDescriptionCompletedEventHandler IMachine_setDescriptionCompleted;

        /// <remarks/>
        public event IMachine_getIdCompletedEventHandler IMachine_getIdCompleted;

        /// <remarks/>
        public event IMachine_getOSTypeIdCompletedEventHandler IMachine_getOSTypeIdCompleted;

        /// <remarks/>
        public event IMachine_setOSTypeIdCompletedEventHandler IMachine_setOSTypeIdCompleted;

        /// <remarks/>
        public event IMachine_getMemorySizeCompletedEventHandler IMachine_getMemorySizeCompleted;

        /// <remarks/>
        public event IMachine_setMemorySizeCompletedEventHandler IMachine_setMemorySizeCompleted;

        /// <remarks/>
        public event IMachine_getMemoryBalloonSizeCompletedEventHandler IMachine_getMemoryBalloonSizeCompleted;

        /// <remarks/>
        public event IMachine_setMemoryBalloonSizeCompletedEventHandler IMachine_setMemoryBalloonSizeCompleted;

        /// <remarks/>
        public event IMachine_getStatisticsUpdateIntervalCompletedEventHandler IMachine_getStatisticsUpdateIntervalCompleted;

        /// <remarks/>
        public event IMachine_setStatisticsUpdateIntervalCompletedEventHandler IMachine_setStatisticsUpdateIntervalCompleted;

        /// <remarks/>
        public event IMachine_getVRAMSizeCompletedEventHandler IMachine_getVRAMSizeCompleted;

        /// <remarks/>
        public event IMachine_setVRAMSizeCompletedEventHandler IMachine_setVRAMSizeCompleted;

        /// <remarks/>
        public event IMachine_getMonitorCountCompletedEventHandler IMachine_getMonitorCountCompleted;

        /// <remarks/>
        public event IMachine_setMonitorCountCompletedEventHandler IMachine_setMonitorCountCompleted;

        /// <remarks/>
        public event IMachine_getBIOSSettingsCompletedEventHandler IMachine_getBIOSSettingsCompleted;

        /// <remarks/>
        public event IMachine_getHWVirtExEnabledCompletedEventHandler IMachine_getHWVirtExEnabledCompleted;

        /// <remarks/>
        public event IMachine_setHWVirtExEnabledCompletedEventHandler IMachine_setHWVirtExEnabledCompleted;

        /// <remarks/>
        public event IMachine_getHWVirtExNestedPagingEnabledCompletedEventHandler IMachine_getHWVirtExNestedPagingEnabledCompleted;

        /// <remarks/>
        public event IMachine_setHWVirtExNestedPagingEnabledCompletedEventHandler IMachine_setHWVirtExNestedPagingEnabledCompleted;

        /// <remarks/>
        public event IMachine_getPAEEnabledCompletedEventHandler IMachine_getPAEEnabledCompleted;

        /// <remarks/>
        public event IMachine_setPAEEnabledCompletedEventHandler IMachine_setPAEEnabledCompleted;

        /// <remarks/>
        public event IMachine_getSnapshotFolderCompletedEventHandler IMachine_getSnapshotFolderCompleted;

        /// <remarks/>
        public event IMachine_setSnapshotFolderCompletedEventHandler IMachine_setSnapshotFolderCompleted;

        /// <remarks/>
        public event IMachine_getVRDPServerCompletedEventHandler IMachine_getVRDPServerCompleted;

        /// <remarks/>
        public event IMachine_getHardDiskAttachmentsCompletedEventHandler IMachine_getHardDiskAttachmentsCompleted;

        /// <remarks/>
        public event IMachine_getDVDDriveCompletedEventHandler IMachine_getDVDDriveCompleted;

        /// <remarks/>
        public event IMachine_getFloppyDriveCompletedEventHandler IMachine_getFloppyDriveCompleted;

        /// <remarks/>
        public event IMachine_getUSBControllerCompletedEventHandler IMachine_getUSBControllerCompleted;

        /// <remarks/>
        public event IMachine_getAudioAdapterCompletedEventHandler IMachine_getAudioAdapterCompleted;

        /// <remarks/>
        public event IMachine_getSATAControllerCompletedEventHandler IMachine_getSATAControllerCompleted;

        /// <remarks/>
        public event IMachine_getSettingsFilePathCompletedEventHandler IMachine_getSettingsFilePathCompleted;

        /// <remarks/>
        public event IMachine_getSettingsFileVersionCompletedEventHandler IMachine_getSettingsFileVersionCompleted;

        /// <remarks/>
        public event IMachine_getSettingsModifiedCompletedEventHandler IMachine_getSettingsModifiedCompleted;

        /// <remarks/>
        public event IMachine_getSessionStateCompletedEventHandler IMachine_getSessionStateCompleted;

        /// <remarks/>
        public event IMachine_getSessionTypeCompletedEventHandler IMachine_getSessionTypeCompleted;

        /// <remarks/>
        public event IMachine_getSessionPidCompletedEventHandler IMachine_getSessionPidCompleted;

        /// <remarks/>
        public event IMachine_getStateCompletedEventHandler IMachine_getStateCompleted;

        /// <remarks/>
        public event IMachine_getLastStateChangeCompletedEventHandler IMachine_getLastStateChangeCompleted;

        /// <remarks/>
        public event IMachine_getStateFilePathCompletedEventHandler IMachine_getStateFilePathCompleted;

        /// <remarks/>
        public event IMachine_getLogFolderCompletedEventHandler IMachine_getLogFolderCompleted;

        /// <remarks/>
        public event IMachine_getCurrentSnapshotCompletedEventHandler IMachine_getCurrentSnapshotCompleted;

        /// <remarks/>
        public event IMachine_getSnapshotCountCompletedEventHandler IMachine_getSnapshotCountCompleted;

        /// <remarks/>
        public event IMachine_getCurrentStateModifiedCompletedEventHandler IMachine_getCurrentStateModifiedCompleted;

        /// <remarks/>
        public event IMachine_getSharedFoldersCompletedEventHandler IMachine_getSharedFoldersCompleted;

        /// <remarks/>
        public event IMachine_getClipboardModeCompletedEventHandler IMachine_getClipboardModeCompleted;

        /// <remarks/>
        public event IMachine_setClipboardModeCompletedEventHandler IMachine_setClipboardModeCompleted;

        /// <remarks/>
        public event IMachine_setBootOrderCompletedEventHandler IMachine_setBootOrderCompleted;

        /// <remarks/>
        public event IMachine_getBootOrderCompletedEventHandler IMachine_getBootOrderCompleted;

        /// <remarks/>
        public event IMachine_attachHardDiskCompletedEventHandler IMachine_attachHardDiskCompleted;

        /// <remarks/>
        public event IMachine_getHardDiskCompletedEventHandler IMachine_getHardDiskCompleted;

        /// <remarks/>
        public event IMachine_detachHardDiskCompletedEventHandler IMachine_detachHardDiskCompleted;

        /// <remarks/>
        public event IMachine_getNetworkAdapterCompletedEventHandler IMachine_getNetworkAdapterCompleted;

        /// <remarks/>
        public event IMachine_getSerialPortCompletedEventHandler IMachine_getSerialPortCompleted;

        /// <remarks/>
        public event IMachine_getParallelPortCompletedEventHandler IMachine_getParallelPortCompleted;

        /// <remarks/>
        public event IMachine_getNextExtraDataKeyCompletedEventHandler IMachine_getNextExtraDataKeyCompleted;

        /// <remarks/>
        public event IMachine_getExtraDataCompletedEventHandler IMachine_getExtraDataCompleted;

        /// <remarks/>
        public event IMachine_setExtraDataCompletedEventHandler IMachine_setExtraDataCompleted;

        /// <remarks/>
        public event IMachine_saveSettingsCompletedEventHandler IMachine_saveSettingsCompleted;

        /// <remarks/>
        public event IMachine_saveSettingsWithBackupCompletedEventHandler IMachine_saveSettingsWithBackupCompleted;

        /// <remarks/>
        public event IMachine_discardSettingsCompletedEventHandler IMachine_discardSettingsCompleted;

        /// <remarks/>
        public event IMachine_deleteSettingsCompletedEventHandler IMachine_deleteSettingsCompleted;

        /// <remarks/>
        public event IMachine_getSnapshotCompletedEventHandler IMachine_getSnapshotCompleted;

        /// <remarks/>
        public event IMachine_findSnapshotCompletedEventHandler IMachine_findSnapshotCompleted;

        /// <remarks/>
        public event IMachine_setCurrentSnapshotCompletedEventHandler IMachine_setCurrentSnapshotCompleted;

        /// <remarks/>
        public event IMachine_createSharedFolderCompletedEventHandler IMachine_createSharedFolderCompleted;

        /// <remarks/>
        public event IMachine_removeSharedFolderCompletedEventHandler IMachine_removeSharedFolderCompleted;

        /// <remarks/>
        public event IMachine_canShowConsoleWindowCompletedEventHandler IMachine_canShowConsoleWindowCompleted;

        /// <remarks/>
        public event IMachine_showConsoleWindowCompletedEventHandler IMachine_showConsoleWindowCompleted;

        /// <remarks/>
        public event IMachine_getGuestPropertyCompletedEventHandler IMachine_getGuestPropertyCompleted;

        /// <remarks/>
        public event IMachine_getGuestPropertyValueCompletedEventHandler IMachine_getGuestPropertyValueCompleted;

        /// <remarks/>
        public event IMachine_getGuestPropertyTimestampCompletedEventHandler IMachine_getGuestPropertyTimestampCompleted;

        /// <remarks/>
        public event IMachine_setGuestPropertyCompletedEventHandler IMachine_setGuestPropertyCompleted;

        /// <remarks/>
        public event IMachine_setGuestPropertyValueCompletedEventHandler IMachine_setGuestPropertyValueCompleted;

        /// <remarks/>
        public event IMachine_enumerateGuestPropertiesCompletedEventHandler IMachine_enumerateGuestPropertiesCompleted;

        /// <remarks/>
        public event IConsole_getMachineCompletedEventHandler IConsole_getMachineCompleted;

        /// <remarks/>
        public event IConsole_getStateCompletedEventHandler IConsole_getStateCompleted;

        /// <remarks/>
        public event IConsole_getKeyboardCompletedEventHandler IConsole_getKeyboardCompleted;

        /// <remarks/>
        public event IConsole_getMouseCompletedEventHandler IConsole_getMouseCompleted;

        /// <remarks/>
        public event IConsole_getUSBDevicesCompletedEventHandler IConsole_getUSBDevicesCompleted;

        /// <remarks/>
        public event IConsole_getRemoteUSBDevicesCompletedEventHandler IConsole_getRemoteUSBDevicesCompleted;

        /// <remarks/>
        public event IConsole_getSharedFoldersCompletedEventHandler IConsole_getSharedFoldersCompleted;

        /// <remarks/>
        public event IConsole_getRemoteDisplayInfoCompletedEventHandler IConsole_getRemoteDisplayInfoCompleted;

        /// <remarks/>
        public event IConsole_powerUpCompletedEventHandler IConsole_powerUpCompleted;

        /// <remarks/>
        public event IConsole_powerDownCompletedEventHandler IConsole_powerDownCompleted;

        /// <remarks/>
        public event IConsole_resetCompletedEventHandler IConsole_resetCompleted;

        /// <remarks/>
        public event IConsole_pauseCompletedEventHandler IConsole_pauseCompleted;

        /// <remarks/>
        public event IConsole_resumeCompletedEventHandler IConsole_resumeCompleted;

        /// <remarks/>
        public event IConsole_powerButtonCompletedEventHandler IConsole_powerButtonCompleted;

        /// <remarks/>
        public event IConsole_sleepButtonCompletedEventHandler IConsole_sleepButtonCompleted;

        /// <remarks/>
        public event IConsole_getPowerButtonHandledCompletedEventHandler IConsole_getPowerButtonHandledCompleted;

        /// <remarks/>
        public event IConsole_saveStateCompletedEventHandler IConsole_saveStateCompleted;

        /// <remarks/>
        public event IConsole_adoptSavedStateCompletedEventHandler IConsole_adoptSavedStateCompleted;

        /// <remarks/>
        public event IConsole_discardSavedStateCompletedEventHandler IConsole_discardSavedStateCompleted;

        /// <remarks/>
        public event IConsole_getDeviceActivityCompletedEventHandler IConsole_getDeviceActivityCompleted;

        /// <remarks/>
        public event IConsole_attachUSBDeviceCompletedEventHandler IConsole_attachUSBDeviceCompleted;

        /// <remarks/>
        public event IConsole_detachUSBDeviceCompletedEventHandler IConsole_detachUSBDeviceCompleted;

        /// <remarks/>
        public event IConsole_createSharedFolderCompletedEventHandler IConsole_createSharedFolderCompleted;

        /// <remarks/>
        public event IConsole_removeSharedFolderCompletedEventHandler IConsole_removeSharedFolderCompleted;

        /// <remarks/>
        public event IConsole_takeSnapshotCompletedEventHandler IConsole_takeSnapshotCompleted;

        /// <remarks/>
        public event IConsole_discardSnapshotCompletedEventHandler IConsole_discardSnapshotCompleted;

        /// <remarks/>
        public event IConsole_discardCurrentStateCompletedEventHandler IConsole_discardCurrentStateCompleted;

        /// <remarks/>
        public event IConsole_discardCurrentSnapshotAndStateCompletedEventHandler IConsole_discardCurrentSnapshotAndStateCompleted;

        /// <remarks/>
        public event IHostDVDDrive_getNameCompletedEventHandler IHostDVDDrive_getNameCompleted;

        /// <remarks/>
        public event IHostDVDDrive_getDescriptionCompletedEventHandler IHostDVDDrive_getDescriptionCompleted;

        /// <remarks/>
        public event IHostDVDDrive_getUdiCompletedEventHandler IHostDVDDrive_getUdiCompleted;

        /// <remarks/>
        public event IHostFloppyDrive_getNameCompletedEventHandler IHostFloppyDrive_getNameCompleted;

        /// <remarks/>
        public event IHostFloppyDrive_getDescriptionCompletedEventHandler IHostFloppyDrive_getDescriptionCompleted;

        /// <remarks/>
        public event IHostFloppyDrive_getUdiCompletedEventHandler IHostFloppyDrive_getUdiCompleted;

        /// <remarks/>
        public event IHostNetworkInterface_getNameCompletedEventHandler IHostNetworkInterface_getNameCompleted;

        /// <remarks/>
        public event IHostNetworkInterface_getIdCompletedEventHandler IHostNetworkInterface_getIdCompleted;

        /// <remarks/>
        public event IHost_getDVDDrivesCompletedEventHandler IHost_getDVDDrivesCompleted;

        /// <remarks/>
        public event IHost_getFloppyDrivesCompletedEventHandler IHost_getFloppyDrivesCompleted;

        /// <remarks/>
        public event IHost_getUSBDevicesCompletedEventHandler IHost_getUSBDevicesCompleted;

        /// <remarks/>
        public event IHost_getUSBDeviceFiltersCompletedEventHandler IHost_getUSBDeviceFiltersCompleted;

        /// <remarks/>
        public event IHost_getNetworkInterfacesCompletedEventHandler IHost_getNetworkInterfacesCompleted;

        /// <remarks/>
        public event IHost_getProcessorCountCompletedEventHandler IHost_getProcessorCountCompleted;

        /// <remarks/>
        public event IHost_getProcessorOnlineCountCompletedEventHandler IHost_getProcessorOnlineCountCompleted;

        /// <remarks/>
        public event IHost_getMemorySizeCompletedEventHandler IHost_getMemorySizeCompleted;

        /// <remarks/>
        public event IHost_getMemoryAvailableCompletedEventHandler IHost_getMemoryAvailableCompleted;

        /// <remarks/>
        public event IHost_getOperatingSystemCompletedEventHandler IHost_getOperatingSystemCompleted;

        /// <remarks/>
        public event IHost_getOSVersionCompletedEventHandler IHost_getOSVersionCompleted;

        /// <remarks/>
        public event IHost_getUTCTimeCompletedEventHandler IHost_getUTCTimeCompleted;

        /// <remarks/>
        public event IHost_getProcessorSpeedCompletedEventHandler IHost_getProcessorSpeedCompleted;

        /// <remarks/>
        public event IHost_getProcessorDescriptionCompletedEventHandler IHost_getProcessorDescriptionCompleted;

        /// <remarks/>
        public event IHost_createUSBDeviceFilterCompletedEventHandler IHost_createUSBDeviceFilterCompleted;

        /// <remarks/>
        public event IHost_insertUSBDeviceFilterCompletedEventHandler IHost_insertUSBDeviceFilterCompleted;

        /// <remarks/>
        public event IHost_removeUSBDeviceFilterCompletedEventHandler IHost_removeUSBDeviceFilterCompleted;

        /// <remarks/>
        public event ISystemProperties_getMinGuestRAMCompletedEventHandler ISystemProperties_getMinGuestRAMCompleted;

        /// <remarks/>
        public event ISystemProperties_getMaxGuestRAMCompletedEventHandler ISystemProperties_getMaxGuestRAMCompleted;

        /// <remarks/>
        public event ISystemProperties_getMinGuestVRAMCompletedEventHandler ISystemProperties_getMinGuestVRAMCompleted;

        /// <remarks/>
        public event ISystemProperties_getMaxGuestVRAMCompletedEventHandler ISystemProperties_getMaxGuestVRAMCompleted;

        /// <remarks/>
        public event ISystemProperties_getMaxVDISizeCompletedEventHandler ISystemProperties_getMaxVDISizeCompleted;

        /// <remarks/>
        public event ISystemProperties_getNetworkAdapterCountCompletedEventHandler ISystemProperties_getNetworkAdapterCountCompleted;

        /// <remarks/>
        public event ISystemProperties_getSerialPortCountCompletedEventHandler ISystemProperties_getSerialPortCountCompleted;

        /// <remarks/>
        public event ISystemProperties_getParallelPortCountCompletedEventHandler ISystemProperties_getParallelPortCountCompleted;

        /// <remarks/>
        public event ISystemProperties_getMaxBootPositionCompletedEventHandler ISystemProperties_getMaxBootPositionCompleted;

        /// <remarks/>
        public event ISystemProperties_getDefaultVDIFolderCompletedEventHandler ISystemProperties_getDefaultVDIFolderCompleted;

        /// <remarks/>
        public event ISystemProperties_setDefaultVDIFolderCompletedEventHandler ISystemProperties_setDefaultVDIFolderCompleted;

        /// <remarks/>
        public event ISystemProperties_getDefaultMachineFolderCompletedEventHandler ISystemProperties_getDefaultMachineFolderCompleted;

        /// <remarks/>
        public event ISystemProperties_setDefaultMachineFolderCompletedEventHandler ISystemProperties_setDefaultMachineFolderCompleted;

        /// <remarks/>
        public event ISystemProperties_getRemoteDisplayAuthLibraryCompletedEventHandler ISystemProperties_getRemoteDisplayAuthLibraryCompleted;

        /// <remarks/>
        public event ISystemProperties_setRemoteDisplayAuthLibraryCompletedEventHandler ISystemProperties_setRemoteDisplayAuthLibraryCompleted;

        /// <remarks/>
        public event ISystemProperties_getWebServiceAuthLibraryCompletedEventHandler ISystemProperties_getWebServiceAuthLibraryCompleted;

        /// <remarks/>
        public event ISystemProperties_setWebServiceAuthLibraryCompletedEventHandler ISystemProperties_setWebServiceAuthLibraryCompleted;

        /// <remarks/>
        public event ISystemProperties_getHWVirtExEnabledCompletedEventHandler ISystemProperties_getHWVirtExEnabledCompleted;

        /// <remarks/>
        public event ISystemProperties_setHWVirtExEnabledCompletedEventHandler ISystemProperties_setHWVirtExEnabledCompleted;

        /// <remarks/>
        public event ISystemProperties_getLogHistoryCountCompletedEventHandler ISystemProperties_getLogHistoryCountCompleted;

        /// <remarks/>
        public event ISystemProperties_setLogHistoryCountCompletedEventHandler ISystemProperties_setLogHistoryCountCompleted;

        /// <remarks/>
        public event IProgress_getIdCompletedEventHandler IProgress_getIdCompleted;

        /// <remarks/>
        public event IProgress_getDescriptionCompletedEventHandler IProgress_getDescriptionCompleted;

        /// <remarks/>
        public event IProgress_getCancelableCompletedEventHandler IProgress_getCancelableCompleted;

        /// <remarks/>
        public event IProgress_getPercentCompletedEventHandler IProgress_getPercentCompleted;

        /// <remarks/>
        public event IProgress_getCompletedCompletedEventHandler IProgress_getCompletedCompleted;

        /// <remarks/>
        public event IProgress_getCanceledCompletedEventHandler IProgress_getCanceledCompleted;

        /// <remarks/>
        public event IProgress_getResultCodeCompletedEventHandler IProgress_getResultCodeCompleted;

        /// <remarks/>
        public event IProgress_getOperationCountCompletedEventHandler IProgress_getOperationCountCompleted;

        /// <remarks/>
        public event IProgress_getOperationCompletedEventHandler IProgress_getOperationCompleted;

        /// <remarks/>
        public event IProgress_getOperationDescriptionCompletedEventHandler IProgress_getOperationDescriptionCompleted;

        /// <remarks/>
        public event IProgress_getOperationPercentCompletedEventHandler IProgress_getOperationPercentCompleted;

        /// <remarks/>
        public event IProgress_waitForCompletionCompletedEventHandler IProgress_waitForCompletionCompleted;

        /// <remarks/>
        public event IProgress_waitForOperationCompletionCompletedEventHandler IProgress_waitForOperationCompletionCompleted;

        /// <remarks/>
        public event IProgress_cancelCompletedEventHandler IProgress_cancelCompleted;

        /// <remarks/>
        public event ISnapshot_getIdCompletedEventHandler ISnapshot_getIdCompleted;

        /// <remarks/>
        public event ISnapshot_getNameCompletedEventHandler ISnapshot_getNameCompleted;

        /// <remarks/>
        public event ISnapshot_setNameCompletedEventHandler ISnapshot_setNameCompleted;

        /// <remarks/>
        public event ISnapshot_getDescriptionCompletedEventHandler ISnapshot_getDescriptionCompleted;

        /// <remarks/>
        public event ISnapshot_setDescriptionCompletedEventHandler ISnapshot_setDescriptionCompleted;

        /// <remarks/>
        public event ISnapshot_getTimeStampCompletedEventHandler ISnapshot_getTimeStampCompleted;

        /// <remarks/>
        public event ISnapshot_getOnlineCompletedEventHandler ISnapshot_getOnlineCompleted;

        /// <remarks/>
        public event ISnapshot_getMachineCompletedEventHandler ISnapshot_getMachineCompleted;

        /// <remarks/>
        public event ISnapshot_getParentCompletedEventHandler ISnapshot_getParentCompleted;

        /// <remarks/>
        public event ISnapshot_getChildrenCompletedEventHandler ISnapshot_getChildrenCompleted;

        /// <remarks/>
        public event IHardDisk_getIdCompletedEventHandler IHardDisk_getIdCompleted;

        /// <remarks/>
        public event IHardDisk_getDescriptionCompletedEventHandler IHardDisk_getDescriptionCompleted;

        /// <remarks/>
        public event IHardDisk_setDescriptionCompletedEventHandler IHardDisk_setDescriptionCompleted;

        /// <remarks/>
        public event IHardDisk_getStorageTypeCompletedEventHandler IHardDisk_getStorageTypeCompleted;

        /// <remarks/>
        public event IHardDisk_getLocationCompletedEventHandler IHardDisk_getLocationCompleted;

        /// <remarks/>
        public event IHardDisk_getTypeCompletedEventHandler IHardDisk_getTypeCompleted;

        /// <remarks/>
        public event IHardDisk_setTypeCompletedEventHandler IHardDisk_setTypeCompleted;

        /// <remarks/>
        public event IHardDisk_getParentCompletedEventHandler IHardDisk_getParentCompleted;

        /// <remarks/>
        public event IHardDisk_getChildrenCompletedEventHandler IHardDisk_getChildrenCompleted;

        /// <remarks/>
        public event IHardDisk_getRootCompletedEventHandler IHardDisk_getRootCompleted;

        /// <remarks/>
        public event IHardDisk_getAccessibleCompletedEventHandler IHardDisk_getAccessibleCompleted;

        /// <remarks/>
        public event IHardDisk_getAllAccessibleCompletedEventHandler IHardDisk_getAllAccessibleCompleted;

        /// <remarks/>
        public event IHardDisk_getLastAccessErrorCompletedEventHandler IHardDisk_getLastAccessErrorCompleted;

        /// <remarks/>
        public event IHardDisk_getSizeCompletedEventHandler IHardDisk_getSizeCompleted;

        /// <remarks/>
        public event IHardDisk_getActualSizeCompletedEventHandler IHardDisk_getActualSizeCompleted;

        /// <remarks/>
        public event IHardDisk_getMachineIdCompletedEventHandler IHardDisk_getMachineIdCompleted;

        /// <remarks/>
        public event IHardDisk_getSnapshotIdCompletedEventHandler IHardDisk_getSnapshotIdCompleted;

        /// <remarks/>
        public event IHardDisk_cloneToImageCompletedEventHandler IHardDisk_cloneToImageCompleted;

        /// <remarks/>
        public event IVirtualDiskImage_getFilePathCompletedEventHandler IVirtualDiskImage_getFilePathCompleted;

        /// <remarks/>
        public event IVirtualDiskImage_setFilePathCompletedEventHandler IVirtualDiskImage_setFilePathCompleted;

        /// <remarks/>
        public event IVirtualDiskImage_getCreatedCompletedEventHandler IVirtualDiskImage_getCreatedCompleted;

        /// <remarks/>
        public event IVirtualDiskImage_createDynamicImageCompletedEventHandler IVirtualDiskImage_createDynamicImageCompleted;

        /// <remarks/>
        public event IVirtualDiskImage_createFixedImageCompletedEventHandler IVirtualDiskImage_createFixedImageCompleted;

        /// <remarks/>
        public event IVirtualDiskImage_deleteImageCompletedEventHandler IVirtualDiskImage_deleteImageCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_getServerCompletedEventHandler IISCSIHardDisk_getServerCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_setServerCompletedEventHandler IISCSIHardDisk_setServerCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_getPortCompletedEventHandler IISCSIHardDisk_getPortCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_setPortCompletedEventHandler IISCSIHardDisk_setPortCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_getTargetCompletedEventHandler IISCSIHardDisk_getTargetCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_setTargetCompletedEventHandler IISCSIHardDisk_setTargetCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_getLunCompletedEventHandler IISCSIHardDisk_getLunCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_setLunCompletedEventHandler IISCSIHardDisk_setLunCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_getUserNameCompletedEventHandler IISCSIHardDisk_getUserNameCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_setUserNameCompletedEventHandler IISCSIHardDisk_setUserNameCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_getPasswordCompletedEventHandler IISCSIHardDisk_getPasswordCompleted;

        /// <remarks/>
        public event IISCSIHardDisk_setPasswordCompletedEventHandler IISCSIHardDisk_setPasswordCompleted;

        /// <remarks/>
        public event IVMDKImage_getFilePathCompletedEventHandler IVMDKImage_getFilePathCompleted;

        /// <remarks/>
        public event IVMDKImage_setFilePathCompletedEventHandler IVMDKImage_setFilePathCompleted;

        /// <remarks/>
        public event IVMDKImage_getCreatedCompletedEventHandler IVMDKImage_getCreatedCompleted;

        /// <remarks/>
        public event IVMDKImage_createDynamicImageCompletedEventHandler IVMDKImage_createDynamicImageCompleted;

        /// <remarks/>
        public event IVMDKImage_createFixedImageCompletedEventHandler IVMDKImage_createFixedImageCompleted;

        /// <remarks/>
        public event IVMDKImage_deleteImageCompletedEventHandler IVMDKImage_deleteImageCompleted;

        /// <remarks/>
        public event ICustomHardDisk_getLocationCompletedEventHandler ICustomHardDisk_getLocationCompleted;

        /// <remarks/>
        public event ICustomHardDisk_setLocationCompletedEventHandler ICustomHardDisk_setLocationCompleted;

        /// <remarks/>
        public event ICustomHardDisk_getFormatCompletedEventHandler ICustomHardDisk_getFormatCompleted;

        /// <remarks/>
        public event ICustomHardDisk_getCreatedCompletedEventHandler ICustomHardDisk_getCreatedCompleted;

        /// <remarks/>
        public event ICustomHardDisk_createDynamicImageCompletedEventHandler ICustomHardDisk_createDynamicImageCompleted;

        /// <remarks/>
        public event ICustomHardDisk_createFixedImageCompletedEventHandler ICustomHardDisk_createFixedImageCompleted;

        /// <remarks/>
        public event ICustomHardDisk_deleteImageCompletedEventHandler ICustomHardDisk_deleteImageCompleted;

        /// <remarks/>
        public event IVHDImage_getFilePathCompletedEventHandler IVHDImage_getFilePathCompleted;

        /// <remarks/>
        public event IVHDImage_setFilePathCompletedEventHandler IVHDImage_setFilePathCompleted;

        /// <remarks/>
        public event IVHDImage_getCreatedCompletedEventHandler IVHDImage_getCreatedCompleted;

        /// <remarks/>
        public event IVHDImage_createDynamicImageCompletedEventHandler IVHDImage_createDynamicImageCompleted;

        /// <remarks/>
        public event IVHDImage_createFixedImageCompletedEventHandler IVHDImage_createFixedImageCompleted;

        /// <remarks/>
        public event IVHDImage_deleteImageCompletedEventHandler IVHDImage_deleteImageCompleted;

        /// <remarks/>
        public event IDVDImage_getIdCompletedEventHandler IDVDImage_getIdCompleted;

        /// <remarks/>
        public event IDVDImage_getFilePathCompletedEventHandler IDVDImage_getFilePathCompleted;

        /// <remarks/>
        public event IDVDImage_getAccessibleCompletedEventHandler IDVDImage_getAccessibleCompleted;

        /// <remarks/>
        public event IDVDImage_getSizeCompletedEventHandler IDVDImage_getSizeCompleted;

        /// <remarks/>
        public event IDVDDrive_getStateCompletedEventHandler IDVDDrive_getStateCompleted;

        /// <remarks/>
        public event IDVDDrive_getPassthroughCompletedEventHandler IDVDDrive_getPassthroughCompleted;

        /// <remarks/>
        public event IDVDDrive_setPassthroughCompletedEventHandler IDVDDrive_setPassthroughCompleted;

        /// <remarks/>
        public event IDVDDrive_mountImageCompletedEventHandler IDVDDrive_mountImageCompleted;

        /// <remarks/>
        public event IDVDDrive_captureHostDriveCompletedEventHandler IDVDDrive_captureHostDriveCompleted;

        /// <remarks/>
        public event IDVDDrive_unmountCompletedEventHandler IDVDDrive_unmountCompleted;

        /// <remarks/>
        public event IDVDDrive_getImageCompletedEventHandler IDVDDrive_getImageCompleted;

        /// <remarks/>
        public event IDVDDrive_getHostDriveCompletedEventHandler IDVDDrive_getHostDriveCompleted;

        /// <remarks/>
        public event IFloppyImage_getIdCompletedEventHandler IFloppyImage_getIdCompleted;

        /// <remarks/>
        public event IFloppyImage_getFilePathCompletedEventHandler IFloppyImage_getFilePathCompleted;

        /// <remarks/>
        public event IFloppyImage_getAccessibleCompletedEventHandler IFloppyImage_getAccessibleCompleted;

        /// <remarks/>
        public event IFloppyImage_getSizeCompletedEventHandler IFloppyImage_getSizeCompleted;

        /// <remarks/>
        public event IFloppyDrive_getEnabledCompletedEventHandler IFloppyDrive_getEnabledCompleted;

        /// <remarks/>
        public event IFloppyDrive_setEnabledCompletedEventHandler IFloppyDrive_setEnabledCompleted;

        /// <remarks/>
        public event IFloppyDrive_getStateCompletedEventHandler IFloppyDrive_getStateCompleted;

        /// <remarks/>
        public event IFloppyDrive_mountImageCompletedEventHandler IFloppyDrive_mountImageCompleted;

        /// <remarks/>
        public event IFloppyDrive_captureHostDriveCompletedEventHandler IFloppyDrive_captureHostDriveCompleted;

        /// <remarks/>
        public event IFloppyDrive_unmountCompletedEventHandler IFloppyDrive_unmountCompleted;

        /// <remarks/>
        public event IFloppyDrive_getImageCompletedEventHandler IFloppyDrive_getImageCompleted;

        /// <remarks/>
        public event IFloppyDrive_getHostDriveCompletedEventHandler IFloppyDrive_getHostDriveCompleted;

        /// <remarks/>
        public event IKeyboard_putScancodeCompletedEventHandler IKeyboard_putScancodeCompleted;

        /// <remarks/>
        public event IKeyboard_putScancodesCompletedEventHandler IKeyboard_putScancodesCompleted;

        /// <remarks/>
        public event IKeyboard_putCADCompletedEventHandler IKeyboard_putCADCompleted;

        /// <remarks/>
        public event IMouse_getAbsoluteSupportedCompletedEventHandler IMouse_getAbsoluteSupportedCompleted;

        /// <remarks/>
        public event IMouse_putMouseEventCompletedEventHandler IMouse_putMouseEventCompleted;

        /// <remarks/>
        public event IMouse_putMouseEventAbsoluteCompletedEventHandler IMouse_putMouseEventAbsoluteCompleted;

        /// <remarks/>
        public event INetworkAdapter_getAdapterTypeCompletedEventHandler INetworkAdapter_getAdapterTypeCompleted;

        /// <remarks/>
        public event INetworkAdapter_setAdapterTypeCompletedEventHandler INetworkAdapter_setAdapterTypeCompleted;

        /// <remarks/>
        public event INetworkAdapter_getSlotCompletedEventHandler INetworkAdapter_getSlotCompleted;

        /// <remarks/>
        public event INetworkAdapter_getEnabledCompletedEventHandler INetworkAdapter_getEnabledCompleted;

        /// <remarks/>
        public event INetworkAdapter_setEnabledCompletedEventHandler INetworkAdapter_setEnabledCompleted;

        /// <remarks/>
        public event INetworkAdapter_getMACAddressCompletedEventHandler INetworkAdapter_getMACAddressCompleted;

        /// <remarks/>
        public event INetworkAdapter_setMACAddressCompletedEventHandler INetworkAdapter_setMACAddressCompleted;

        /// <remarks/>
        public event INetworkAdapter_getAttachmentTypeCompletedEventHandler INetworkAdapter_getAttachmentTypeCompleted;

        /// <remarks/>
        public event INetworkAdapter_getHostInterfaceCompletedEventHandler INetworkAdapter_getHostInterfaceCompleted;

        /// <remarks/>
        public event INetworkAdapter_setHostInterfaceCompletedEventHandler INetworkAdapter_setHostInterfaceCompleted;

        /// <remarks/>
        public event INetworkAdapter_getInternalNetworkCompletedEventHandler INetworkAdapter_getInternalNetworkCompleted;

        /// <remarks/>
        public event INetworkAdapter_setInternalNetworkCompletedEventHandler INetworkAdapter_setInternalNetworkCompleted;

        /// <remarks/>
        public event INetworkAdapter_getNATNetworkCompletedEventHandler INetworkAdapter_getNATNetworkCompleted;

        /// <remarks/>
        public event INetworkAdapter_setNATNetworkCompletedEventHandler INetworkAdapter_setNATNetworkCompleted;

        /// <remarks/>
        public event INetworkAdapter_getCableConnectedCompletedEventHandler INetworkAdapter_getCableConnectedCompleted;

        /// <remarks/>
        public event INetworkAdapter_setCableConnectedCompletedEventHandler INetworkAdapter_setCableConnectedCompleted;

        /// <remarks/>
        public event INetworkAdapter_getLineSpeedCompletedEventHandler INetworkAdapter_getLineSpeedCompleted;

        /// <remarks/>
        public event INetworkAdapter_setLineSpeedCompletedEventHandler INetworkAdapter_setLineSpeedCompleted;

        /// <remarks/>
        public event INetworkAdapter_getTraceEnabledCompletedEventHandler INetworkAdapter_getTraceEnabledCompleted;

        /// <remarks/>
        public event INetworkAdapter_setTraceEnabledCompletedEventHandler INetworkAdapter_setTraceEnabledCompleted;

        /// <remarks/>
        public event INetworkAdapter_getTraceFileCompletedEventHandler INetworkAdapter_getTraceFileCompleted;

        /// <remarks/>
        public event INetworkAdapter_setTraceFileCompletedEventHandler INetworkAdapter_setTraceFileCompleted;

        /// <remarks/>
        public event INetworkAdapter_attachToNATCompletedEventHandler INetworkAdapter_attachToNATCompleted;

        /// <remarks/>
        public event INetworkAdapter_attachToHostInterfaceCompletedEventHandler INetworkAdapter_attachToHostInterfaceCompleted;

        /// <remarks/>
        public event INetworkAdapter_attachToInternalNetworkCompletedEventHandler INetworkAdapter_attachToInternalNetworkCompleted;

        /// <remarks/>
        public event INetworkAdapter_detachCompletedEventHandler INetworkAdapter_detachCompleted;

        /// <remarks/>
        public event ISerialPort_getSlotCompletedEventHandler ISerialPort_getSlotCompleted;

        /// <remarks/>
        public event ISerialPort_getEnabledCompletedEventHandler ISerialPort_getEnabledCompleted;

        /// <remarks/>
        public event ISerialPort_setEnabledCompletedEventHandler ISerialPort_setEnabledCompleted;

        /// <remarks/>
        public event ISerialPort_getIOBaseCompletedEventHandler ISerialPort_getIOBaseCompleted;

        /// <remarks/>
        public event ISerialPort_setIOBaseCompletedEventHandler ISerialPort_setIOBaseCompleted;

        /// <remarks/>
        public event ISerialPort_getIRQCompletedEventHandler ISerialPort_getIRQCompleted;

        /// <remarks/>
        public event ISerialPort_setIRQCompletedEventHandler ISerialPort_setIRQCompleted;

        /// <remarks/>
        public event ISerialPort_getHostModeCompletedEventHandler ISerialPort_getHostModeCompleted;

        /// <remarks/>
        public event ISerialPort_setHostModeCompletedEventHandler ISerialPort_setHostModeCompleted;

        /// <remarks/>
        public event ISerialPort_getServerCompletedEventHandler ISerialPort_getServerCompleted;

        /// <remarks/>
        public event ISerialPort_setServerCompletedEventHandler ISerialPort_setServerCompleted;

        /// <remarks/>
        public event ISerialPort_getPathCompletedEventHandler ISerialPort_getPathCompleted;

        /// <remarks/>
        public event ISerialPort_setPathCompletedEventHandler ISerialPort_setPathCompleted;

        /// <remarks/>
        public event IParallelPort_getSlotCompletedEventHandler IParallelPort_getSlotCompleted;

        /// <remarks/>
        public event IParallelPort_getEnabledCompletedEventHandler IParallelPort_getEnabledCompleted;

        /// <remarks/>
        public event IParallelPort_setEnabledCompletedEventHandler IParallelPort_setEnabledCompleted;

        /// <remarks/>
        public event IParallelPort_getIOBaseCompletedEventHandler IParallelPort_getIOBaseCompleted;

        /// <remarks/>
        public event IParallelPort_setIOBaseCompletedEventHandler IParallelPort_setIOBaseCompleted;

        /// <remarks/>
        public event IParallelPort_getIRQCompletedEventHandler IParallelPort_getIRQCompleted;

        /// <remarks/>
        public event IParallelPort_setIRQCompletedEventHandler IParallelPort_setIRQCompleted;

        /// <remarks/>
        public event IParallelPort_getPathCompletedEventHandler IParallelPort_getPathCompleted;

        /// <remarks/>
        public event IParallelPort_setPathCompletedEventHandler IParallelPort_setPathCompleted;

        /// <remarks/>
        public event IUSBController_getEnabledCompletedEventHandler IUSBController_getEnabledCompleted;

        /// <remarks/>
        public event IUSBController_setEnabledCompletedEventHandler IUSBController_setEnabledCompleted;

        /// <remarks/>
        public event IUSBController_getEnabledEhciCompletedEventHandler IUSBController_getEnabledEhciCompleted;

        /// <remarks/>
        public event IUSBController_setEnabledEhciCompletedEventHandler IUSBController_setEnabledEhciCompleted;

        /// <remarks/>
        public event IUSBController_getUSBStandardCompletedEventHandler IUSBController_getUSBStandardCompleted;

        /// <remarks/>
        public event IUSBController_getDeviceFiltersCompletedEventHandler IUSBController_getDeviceFiltersCompleted;

        /// <remarks/>
        public event IUSBController_createDeviceFilterCompletedEventHandler IUSBController_createDeviceFilterCompleted;

        /// <remarks/>
        public event IUSBController_insertDeviceFilterCompletedEventHandler IUSBController_insertDeviceFilterCompleted;

        /// <remarks/>
        public event IUSBController_removeDeviceFilterCompletedEventHandler IUSBController_removeDeviceFilterCompleted;

        /// <remarks/>
        public event IUSBDevice_getIdCompletedEventHandler IUSBDevice_getIdCompleted;

        /// <remarks/>
        public event IUSBDevice_getVendorIdCompletedEventHandler IUSBDevice_getVendorIdCompleted;

        /// <remarks/>
        public event IUSBDevice_getProductIdCompletedEventHandler IUSBDevice_getProductIdCompleted;

        /// <remarks/>
        public event IUSBDevice_getRevisionCompletedEventHandler IUSBDevice_getRevisionCompleted;

        /// <remarks/>
        public event IUSBDevice_getManufacturerCompletedEventHandler IUSBDevice_getManufacturerCompleted;

        /// <remarks/>
        public event IUSBDevice_getProductCompletedEventHandler IUSBDevice_getProductCompleted;

        /// <remarks/>
        public event IUSBDevice_getSerialNumberCompletedEventHandler IUSBDevice_getSerialNumberCompleted;

        /// <remarks/>
        public event IUSBDevice_getAddressCompletedEventHandler IUSBDevice_getAddressCompleted;

        /// <remarks/>
        public event IUSBDevice_getPortCompletedEventHandler IUSBDevice_getPortCompleted;

        /// <remarks/>
        public event IUSBDevice_getVersionCompletedEventHandler IUSBDevice_getVersionCompleted;

        /// <remarks/>
        public event IUSBDevice_getPortVersionCompletedEventHandler IUSBDevice_getPortVersionCompleted;

        /// <remarks/>
        public event IUSBDevice_getRemoteCompletedEventHandler IUSBDevice_getRemoteCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getNameCompletedEventHandler IUSBDeviceFilter_getNameCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setNameCompletedEventHandler IUSBDeviceFilter_setNameCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getActiveCompletedEventHandler IUSBDeviceFilter_getActiveCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setActiveCompletedEventHandler IUSBDeviceFilter_setActiveCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getVendorIdCompletedEventHandler IUSBDeviceFilter_getVendorIdCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setVendorIdCompletedEventHandler IUSBDeviceFilter_setVendorIdCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getProductIdCompletedEventHandler IUSBDeviceFilter_getProductIdCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setProductIdCompletedEventHandler IUSBDeviceFilter_setProductIdCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getRevisionCompletedEventHandler IUSBDeviceFilter_getRevisionCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setRevisionCompletedEventHandler IUSBDeviceFilter_setRevisionCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getManufacturerCompletedEventHandler IUSBDeviceFilter_getManufacturerCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setManufacturerCompletedEventHandler IUSBDeviceFilter_setManufacturerCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getProductCompletedEventHandler IUSBDeviceFilter_getProductCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setProductCompletedEventHandler IUSBDeviceFilter_setProductCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getSerialNumberCompletedEventHandler IUSBDeviceFilter_getSerialNumberCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setSerialNumberCompletedEventHandler IUSBDeviceFilter_setSerialNumberCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getPortCompletedEventHandler IUSBDeviceFilter_getPortCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setPortCompletedEventHandler IUSBDeviceFilter_setPortCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getRemoteCompletedEventHandler IUSBDeviceFilter_getRemoteCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setRemoteCompletedEventHandler IUSBDeviceFilter_setRemoteCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_getMaskedInterfacesCompletedEventHandler IUSBDeviceFilter_getMaskedInterfacesCompleted;

        /// <remarks/>
        public event IUSBDeviceFilter_setMaskedInterfacesCompletedEventHandler IUSBDeviceFilter_setMaskedInterfacesCompleted;

        /// <remarks/>
        public event IHostUSBDevice_getStateCompletedEventHandler IHostUSBDevice_getStateCompleted;

        /// <remarks/>
        public event IHostUSBDeviceFilter_getActionCompletedEventHandler IHostUSBDeviceFilter_getActionCompleted;

        /// <remarks/>
        public event IHostUSBDeviceFilter_setActionCompletedEventHandler IHostUSBDeviceFilter_setActionCompleted;

        /// <remarks/>
        public event IAudioAdapter_getEnabledCompletedEventHandler IAudioAdapter_getEnabledCompleted;

        /// <remarks/>
        public event IAudioAdapter_setEnabledCompletedEventHandler IAudioAdapter_setEnabledCompleted;

        /// <remarks/>
        public event IAudioAdapter_getAudioControllerCompletedEventHandler IAudioAdapter_getAudioControllerCompleted;

        /// <remarks/>
        public event IAudioAdapter_setAudioControllerCompletedEventHandler IAudioAdapter_setAudioControllerCompleted;

        /// <remarks/>
        public event IAudioAdapter_getAudioDriverCompletedEventHandler IAudioAdapter_getAudioDriverCompleted;

        /// <remarks/>
        public event IAudioAdapter_setAudioDriverCompletedEventHandler IAudioAdapter_setAudioDriverCompleted;

        /// <remarks/>
        public event IVRDPServer_getEnabledCompletedEventHandler IVRDPServer_getEnabledCompleted;

        /// <remarks/>
        public event IVRDPServer_setEnabledCompletedEventHandler IVRDPServer_setEnabledCompleted;

        /// <remarks/>
        public event IVRDPServer_getPortCompletedEventHandler IVRDPServer_getPortCompleted;

        /// <remarks/>
        public event IVRDPServer_setPortCompletedEventHandler IVRDPServer_setPortCompleted;

        /// <remarks/>
        public event IVRDPServer_getNetAddressCompletedEventHandler IVRDPServer_getNetAddressCompleted;

        /// <remarks/>
        public event IVRDPServer_setNetAddressCompletedEventHandler IVRDPServer_setNetAddressCompleted;

        /// <remarks/>
        public event IVRDPServer_getAuthTypeCompletedEventHandler IVRDPServer_getAuthTypeCompleted;

        /// <remarks/>
        public event IVRDPServer_setAuthTypeCompletedEventHandler IVRDPServer_setAuthTypeCompleted;

        /// <remarks/>
        public event IVRDPServer_getAuthTimeoutCompletedEventHandler IVRDPServer_getAuthTimeoutCompleted;

        /// <remarks/>
        public event IVRDPServer_setAuthTimeoutCompletedEventHandler IVRDPServer_setAuthTimeoutCompleted;

        /// <remarks/>
        public event IVRDPServer_getAllowMultiConnectionCompletedEventHandler IVRDPServer_getAllowMultiConnectionCompleted;

        /// <remarks/>
        public event IVRDPServer_setAllowMultiConnectionCompletedEventHandler IVRDPServer_setAllowMultiConnectionCompleted;

        /// <remarks/>
        public event IVRDPServer_getReuseSingleConnectionCompletedEventHandler IVRDPServer_getReuseSingleConnectionCompleted;

        /// <remarks/>
        public event IVRDPServer_setReuseSingleConnectionCompletedEventHandler IVRDPServer_setReuseSingleConnectionCompleted;

        /// <remarks/>
        public event ISession_getStateCompletedEventHandler ISession_getStateCompleted;

        /// <remarks/>
        public event ISession_getTypeCompletedEventHandler ISession_getTypeCompleted;

        /// <remarks/>
        public event ISession_getMachineCompletedEventHandler ISession_getMachineCompleted;

        /// <remarks/>
        public event ISession_getConsoleCompletedEventHandler ISession_getConsoleCompleted;

        /// <remarks/>
        public event ISession_closeCompletedEventHandler ISession_closeCompleted;

        /// <remarks/>
        public event ISATAController_getEnabledCompletedEventHandler ISATAController_getEnabledCompleted;

        /// <remarks/>
        public event ISATAController_setEnabledCompletedEventHandler ISATAController_setEnabledCompleted;

        /// <remarks/>
        public event ISATAController_getPortCountCompletedEventHandler ISATAController_getPortCountCompleted;

        /// <remarks/>
        public event ISATAController_setPortCountCompletedEventHandler ISATAController_setPortCountCompleted;

        /// <remarks/>
        public event ISATAController_GetIDEEmulationPortCompletedEventHandler ISATAController_GetIDEEmulationPortCompleted;

        /// <remarks/>
        public event ISATAController_SetIDEEmulationPortCompletedEventHandler ISATAController_SetIDEEmulationPortCompleted;

        /// <remarks/>
        public event IManagedObjectRef_getInterfaceNameCompletedEventHandler IManagedObjectRef_getInterfaceNameCompleted;

        /// <remarks/>
        public event IManagedObjectRef_releaseCompletedEventHandler IManagedObjectRef_releaseCompleted;

        /// <remarks/>
        public event IWebsessionManager_logonCompletedEventHandler IWebsessionManager_logonCompleted;

        /// <remarks/>
        public event IWebsessionManager_getSessionObjectCompletedEventHandler IWebsessionManager_getSessionObjectCompleted;

        /// <remarks/>
        public event IWebsessionManager_logoffCompletedEventHandler IWebsessionManager_logoffCompleted;

        /// <remarks/>
        public event IPerformanceMetric_getMetricNameCompletedEventHandler IPerformanceMetric_getMetricNameCompleted;

        /// <remarks/>
        public event IPerformanceMetric_getDescriptionCompletedEventHandler IPerformanceMetric_getDescriptionCompleted;

        /// <remarks/>
        public event IPerformanceMetric_getPeriodCompletedEventHandler IPerformanceMetric_getPeriodCompleted;

        /// <remarks/>
        public event IPerformanceMetric_getCountCompletedEventHandler IPerformanceMetric_getCountCompleted;

        /// <remarks/>
        public event IPerformanceMetric_getUnitCompletedEventHandler IPerformanceMetric_getUnitCompleted;

        /// <remarks/>
        public event IPerformanceMetric_getMinimumValueCompletedEventHandler IPerformanceMetric_getMinimumValueCompleted;

        /// <remarks/>
        public event IPerformanceMetric_getMaximumValueCompletedEventHandler IPerformanceMetric_getMaximumValueCompleted;

        /// <remarks/>
        public event IPerformanceCollector_getMetricNamesCompletedEventHandler IPerformanceCollector_getMetricNamesCompleted;

        /// <remarks/>
        public event IPerformanceCollector_getMetricsCompletedEventHandler IPerformanceCollector_getMetricsCompleted;

        /// <remarks/>
        public event IPerformanceCollector_setupMetricsCompletedEventHandler IPerformanceCollector_setupMetricsCompleted;

        /// <remarks/>
        public event IPerformanceCollector_enableMetricsCompletedEventHandler IPerformanceCollector_enableMetricsCompleted;

        /// <remarks/>
        public event IPerformanceCollector_disableMetricsCompletedEventHandler IPerformanceCollector_disableMetricsCompleted;

        /// <remarks/>
        public event IPerformanceCollector_queryMetricsDataCompletedEventHandler IPerformanceCollector_queryMetricsDataCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getVersion", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getVersion(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getVersion", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getVersionAsync(string _this)
        {
            this.IVirtualBox_getVersionAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getVersionAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getVersionOperationCompleted == null))
            {
                this.IVirtualBox_getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getVersionOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getVersion", new object[] {
                    _this}, this.IVirtualBox_getVersionOperationCompleted, userState);
        }

        private void OnIVirtualBox_getVersionOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getVersionCompleted(this, new IVirtualBox_getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IVirtualBox_getRevision([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getRevision", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getRevision(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getRevision", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIVirtualBox_getRevision(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getRevisionAsync(string _this)
        {
            this.IVirtualBox_getRevisionAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getRevisionAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getRevisionOperationCompleted == null))
            {
                this.IVirtualBox_getRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getRevisionOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getRevision", new object[] {
                    _this}, this.IVirtualBox_getRevisionOperationCompleted, userState);
        }

        private void OnIVirtualBox_getRevisionOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getRevisionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getRevisionCompleted(this, new IVirtualBox_getRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getPackageType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getPackageType", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getPackageType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getPackageType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getPackageType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getPackageTypeAsync(string _this)
        {
            this.IVirtualBox_getPackageTypeAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getPackageTypeAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getPackageTypeOperationCompleted == null))
            {
                this.IVirtualBox_getPackageTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getPackageTypeOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getPackageType", new object[] {
                    _this}, this.IVirtualBox_getPackageTypeOperationCompleted, userState);
        }

        private void OnIVirtualBox_getPackageTypeOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getPackageTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getPackageTypeCompleted(this, new IVirtualBox_getPackageTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getHomeFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getHomeFolder", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getHomeFolder(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getHomeFolder", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getHomeFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getHomeFolderAsync(string _this)
        {
            this.IVirtualBox_getHomeFolderAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getHomeFolderAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getHomeFolderOperationCompleted == null))
            {
                this.IVirtualBox_getHomeFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getHomeFolderOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getHomeFolder", new object[] {
                    _this}, this.IVirtualBox_getHomeFolderOperationCompleted, userState);
        }

        private void OnIVirtualBox_getHomeFolderOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getHomeFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getHomeFolderCompleted(this, new IVirtualBox_getHomeFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getSettingsFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getSettingsFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getSettingsFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getSettingsFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getSettingsFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getSettingsFilePathAsync(string _this)
        {
            this.IVirtualBox_getSettingsFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getSettingsFilePathAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getSettingsFilePathOperationCompleted == null))
            {
                this.IVirtualBox_getSettingsFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getSettingsFilePathOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getSettingsFilePath", new object[] {
                    _this}, this.IVirtualBox_getSettingsFilePathOperationCompleted, userState);
        }

        private void OnIVirtualBox_getSettingsFilePathOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getSettingsFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getSettingsFilePathCompleted(this, new IVirtualBox_getSettingsFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getSettingsFileVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getSettingsFileVersion", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getSettingsFileVersion(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getSettingsFileVersion", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getSettingsFileVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getSettingsFileVersionAsync(string _this)
        {
            this.IVirtualBox_getSettingsFileVersionAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getSettingsFileVersionAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getSettingsFileVersionOperationCompleted == null))
            {
                this.IVirtualBox_getSettingsFileVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getSettingsFileVersionOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getSettingsFileVersion", new object[] {
                    _this}, this.IVirtualBox_getSettingsFileVersionOperationCompleted, userState);
        }

        private void OnIVirtualBox_getSettingsFileVersionOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getSettingsFileVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getSettingsFileVersionCompleted(this, new IVirtualBox_getSettingsFileVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getSettingsFormatVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getSettingsFormatVersion", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getSettingsFormatVersion(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getSettingsFormatVersion", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getSettingsFormatVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getSettingsFormatVersionAsync(string _this)
        {
            this.IVirtualBox_getSettingsFormatVersionAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getSettingsFormatVersionAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getSettingsFormatVersionOperationCompleted == null))
            {
                this.IVirtualBox_getSettingsFormatVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getSettingsFormatVersionOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getSettingsFormatVersion", new object[] {
                    _this}, this.IVirtualBox_getSettingsFormatVersionOperationCompleted, userState);
        }

        private void OnIVirtualBox_getSettingsFormatVersionOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getSettingsFormatVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getSettingsFormatVersionCompleted(this, new IVirtualBox_getSettingsFormatVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getHost([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getHost", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getHost(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getHost", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getHost(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getHostAsync(string _this)
        {
            this.IVirtualBox_getHostAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getHostAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getHostOperationCompleted == null))
            {
                this.IVirtualBox_getHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getHostOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getHost", new object[] {
                    _this}, this.IVirtualBox_getHostOperationCompleted, userState);
        }

        private void OnIVirtualBox_getHostOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getHostCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getHostCompleted(this, new IVirtualBox_getHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getSystemProperties([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getSystemProperties", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getSystemProperties(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getSystemProperties", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getSystemProperties(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getSystemPropertiesAsync(string _this)
        {
            this.IVirtualBox_getSystemPropertiesAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getSystemPropertiesAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getSystemPropertiesOperationCompleted == null))
            {
                this.IVirtualBox_getSystemPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getSystemPropertiesOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getSystemProperties", new object[] {
                    _this}, this.IVirtualBox_getSystemPropertiesOperationCompleted, userState);
        }

        private void OnIVirtualBox_getSystemPropertiesOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getSystemPropertiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getSystemPropertiesCompleted(this, new IVirtualBox_getSystemPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IVirtualBox_getMachines([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getMachines", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getMachines(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getMachines", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIVirtualBox_getMachines(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getMachinesAsync(string _this)
        {
            this.IVirtualBox_getMachinesAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getMachinesAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getMachinesOperationCompleted == null))
            {
                this.IVirtualBox_getMachinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getMachinesOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getMachines", new object[] {
                    _this}, this.IVirtualBox_getMachinesOperationCompleted, userState);
        }

        private void OnIVirtualBox_getMachinesOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getMachinesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getMachinesCompleted(this, new IVirtualBox_getMachinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] IVirtualBox_getMachines2([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getMachines2", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getMachines2(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getMachines2", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIVirtualBox_getMachines2(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getMachines2Async(string _this)
        {
            this.IVirtualBox_getMachines2Async(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getMachines2Async(string _this, object userState)
        {
            if ((this.IVirtualBox_getMachines2OperationCompleted == null))
            {
                this.IVirtualBox_getMachines2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getMachines2OperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getMachines2", new object[] {
                    _this}, this.IVirtualBox_getMachines2OperationCompleted, userState);
        }

        private void OnIVirtualBox_getMachines2OperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getMachines2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getMachines2Completed(this, new IVirtualBox_getMachines2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IVirtualBox_getHardDisks([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getHardDisks", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getHardDisks(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getHardDisks", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIVirtualBox_getHardDisks(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getHardDisksAsync(string _this)
        {
            this.IVirtualBox_getHardDisksAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getHardDisksAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getHardDisksOperationCompleted == null))
            {
                this.IVirtualBox_getHardDisksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getHardDisksOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getHardDisks", new object[] {
                    _this}, this.IVirtualBox_getHardDisksOperationCompleted, userState);
        }

        private void OnIVirtualBox_getHardDisksOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getHardDisksCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getHardDisksCompleted(this, new IVirtualBox_getHardDisksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IVirtualBox_getDVDImages([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getDVDImages", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getDVDImages(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getDVDImages", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIVirtualBox_getDVDImages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getDVDImagesAsync(string _this)
        {
            this.IVirtualBox_getDVDImagesAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getDVDImagesAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getDVDImagesOperationCompleted == null))
            {
                this.IVirtualBox_getDVDImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getDVDImagesOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getDVDImages", new object[] {
                    _this}, this.IVirtualBox_getDVDImagesOperationCompleted, userState);
        }

        private void OnIVirtualBox_getDVDImagesOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getDVDImagesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getDVDImagesCompleted(this, new IVirtualBox_getDVDImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IVirtualBox_getFloppyImages([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getFloppyImages", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getFloppyImages(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getFloppyImages", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIVirtualBox_getFloppyImages(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getFloppyImagesAsync(string _this)
        {
            this.IVirtualBox_getFloppyImagesAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getFloppyImagesAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getFloppyImagesOperationCompleted == null))
            {
                this.IVirtualBox_getFloppyImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getFloppyImagesOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getFloppyImages", new object[] {
                    _this}, this.IVirtualBox_getFloppyImagesOperationCompleted, userState);
        }

        private void OnIVirtualBox_getFloppyImagesOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getFloppyImagesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getFloppyImagesCompleted(this, new IVirtualBox_getFloppyImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IVirtualBox_getProgressOperations([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getProgressOperations", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getProgressOperations(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getProgressOperations", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIVirtualBox_getProgressOperations(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getProgressOperationsAsync(string _this)
        {
            this.IVirtualBox_getProgressOperationsAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getProgressOperationsAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getProgressOperationsOperationCompleted == null))
            {
                this.IVirtualBox_getProgressOperationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getProgressOperationsOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getProgressOperations", new object[] {
                    _this}, this.IVirtualBox_getProgressOperationsOperationCompleted, userState);
        }

        private void OnIVirtualBox_getProgressOperationsOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getProgressOperationsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getProgressOperationsCompleted(this, new IVirtualBox_getProgressOperationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public IGuestOSType[] IVirtualBox_getGuestOSTypes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getGuestOSTypes", new object[] {
                    _this});
            return ((IGuestOSType[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getGuestOSTypes(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getGuestOSTypes", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public IGuestOSType[] EndIVirtualBox_getGuestOSTypes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IGuestOSType[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getGuestOSTypesAsync(string _this)
        {
            this.IVirtualBox_getGuestOSTypesAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getGuestOSTypesAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getGuestOSTypesOperationCompleted == null))
            {
                this.IVirtualBox_getGuestOSTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getGuestOSTypesOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getGuestOSTypes", new object[] {
                    _this}, this.IVirtualBox_getGuestOSTypesOperationCompleted, userState);
        }

        private void OnIVirtualBox_getGuestOSTypesOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getGuestOSTypesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getGuestOSTypesCompleted(this, new IVirtualBox_getGuestOSTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ISharedFolder[] IVirtualBox_getSharedFolders([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getSharedFolders", new object[] {
                    _this});
            return ((ISharedFolder[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getSharedFolders(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getSharedFolders", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ISharedFolder[] EndIVirtualBox_getSharedFolders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ISharedFolder[])(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getSharedFoldersAsync(string _this)
        {
            this.IVirtualBox_getSharedFoldersAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getSharedFoldersAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getSharedFoldersOperationCompleted == null))
            {
                this.IVirtualBox_getSharedFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getSharedFoldersOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getSharedFolders", new object[] {
                    _this}, this.IVirtualBox_getSharedFoldersOperationCompleted, userState);
        }

        private void OnIVirtualBox_getSharedFoldersOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getSharedFoldersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getSharedFoldersCompleted(this, new IVirtualBox_getSharedFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getPerformanceCollector([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_getPerformanceCollector", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getPerformanceCollector(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getPerformanceCollector", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getPerformanceCollector(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getPerformanceCollectorAsync(string _this)
        {
            this.IVirtualBox_getPerformanceCollectorAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_getPerformanceCollectorAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_getPerformanceCollectorOperationCompleted == null))
            {
                this.IVirtualBox_getPerformanceCollectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getPerformanceCollectorOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getPerformanceCollector", new object[] {
                    _this}, this.IVirtualBox_getPerformanceCollectorOperationCompleted, userState);
        }

        private void OnIVirtualBox_getPerformanceCollectorOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getPerformanceCollectorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getPerformanceCollectorCompleted(this, new IVirtualBox_getPerformanceCollectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_createMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string baseFolder, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_createMachine", new object[] {
                    _this,
                    baseFolder,
                    name,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_createMachine(string _this, string baseFolder, string name, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_createMachine", new object[] {
                    _this,
                    baseFolder,
                    name,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_createMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_createMachineAsync(string _this, string baseFolder, string name, string id)
        {
            this.IVirtualBox_createMachineAsync(_this, baseFolder, name, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_createMachineAsync(string _this, string baseFolder, string name, string id, object userState)
        {
            if ((this.IVirtualBox_createMachineOperationCompleted == null))
            {
                this.IVirtualBox_createMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_createMachineOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_createMachine", new object[] {
                    _this,
                    baseFolder,
                    name,
                    id}, this.IVirtualBox_createMachineOperationCompleted, userState);
        }

        private void OnIVirtualBox_createMachineOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_createMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_createMachineCompleted(this, new IVirtualBox_createMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_createLegacyMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string settingsFile, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_createLegacyMachine", new object[] {
                    _this,
                    settingsFile,
                    name,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_createLegacyMachine(string _this, string settingsFile, string name, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_createLegacyMachine", new object[] {
                    _this,
                    settingsFile,
                    name,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_createLegacyMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_createLegacyMachineAsync(string _this, string settingsFile, string name, string id)
        {
            this.IVirtualBox_createLegacyMachineAsync(_this, settingsFile, name, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_createLegacyMachineAsync(string _this, string settingsFile, string name, string id, object userState)
        {
            if ((this.IVirtualBox_createLegacyMachineOperationCompleted == null))
            {
                this.IVirtualBox_createLegacyMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_createLegacyMachineOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_createLegacyMachine", new object[] {
                    _this,
                    settingsFile,
                    name,
                    id}, this.IVirtualBox_createLegacyMachineOperationCompleted, userState);
        }

        private void OnIVirtualBox_createLegacyMachineOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_createLegacyMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_createLegacyMachineCompleted(this, new IVirtualBox_createLegacyMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_openMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string settingsFile)
        {
            object[] results = this.Invoke("IVirtualBox_openMachine", new object[] {
                    _this,
                    settingsFile});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openMachine(string _this, string settingsFile, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openMachine", new object[] {
                    _this,
                    settingsFile}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_openMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_openMachineAsync(string _this, string settingsFile)
        {
            this.IVirtualBox_openMachineAsync(_this, settingsFile, null);
        }

        /// <remarks/>
        public void IVirtualBox_openMachineAsync(string _this, string settingsFile, object userState)
        {
            if ((this.IVirtualBox_openMachineOperationCompleted == null))
            {
                this.IVirtualBox_openMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openMachineOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openMachine", new object[] {
                    _this,
                    settingsFile}, this.IVirtualBox_openMachineOperationCompleted, userState);
        }

        private void OnIVirtualBox_openMachineOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openMachineCompleted(this, new IVirtualBox_openMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_registerMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string machine)
        {
            this.Invoke("IVirtualBox_registerMachine", new object[] {
                    _this,
                    machine});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_registerMachine(string _this, string machine, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_registerMachine", new object[] {
                    _this,
                    machine}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_registerMachine(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_registerMachineAsync(string _this, string machine)
        {
            this.IVirtualBox_registerMachineAsync(_this, machine, null);
        }

        /// <remarks/>
        public void IVirtualBox_registerMachineAsync(string _this, string machine, object userState)
        {
            if ((this.IVirtualBox_registerMachineOperationCompleted == null))
            {
                this.IVirtualBox_registerMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_registerMachineOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_registerMachine", new object[] {
                    _this,
                    machine}, this.IVirtualBox_registerMachineOperationCompleted, userState);
        }

        private void OnIVirtualBox_registerMachineOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_registerMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_registerMachineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_getMachine", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getMachine(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getMachine", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getMachineAsync(string _this, string id)
        {
            this.IVirtualBox_getMachineAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_getMachineAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_getMachineOperationCompleted == null))
            {
                this.IVirtualBox_getMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getMachineOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getMachine", new object[] {
                    _this,
                    id}, this.IVirtualBox_getMachineOperationCompleted, userState);
        }

        private void OnIVirtualBox_getMachineOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getMachineCompleted(this, new IVirtualBox_getMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_findMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            object[] results = this.Invoke("IVirtualBox_findMachine", new object[] {
                    _this,
                    name});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_findMachine(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_findMachine", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_findMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_findMachineAsync(string _this, string name)
        {
            this.IVirtualBox_findMachineAsync(_this, name, null);
        }

        /// <remarks/>
        public void IVirtualBox_findMachineAsync(string _this, string name, object userState)
        {
            if ((this.IVirtualBox_findMachineOperationCompleted == null))
            {
                this.IVirtualBox_findMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_findMachineOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_findMachine", new object[] {
                    _this,
                    name}, this.IVirtualBox_findMachineOperationCompleted, userState);
        }

        private void OnIVirtualBox_findMachineOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_findMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_findMachineCompleted(this, new IVirtualBox_findMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_unregisterMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_unregisterMachine", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_unregisterMachine(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_unregisterMachine", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_unregisterMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_unregisterMachineAsync(string _this, string id)
        {
            this.IVirtualBox_unregisterMachineAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_unregisterMachineAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_unregisterMachineOperationCompleted == null))
            {
                this.IVirtualBox_unregisterMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_unregisterMachineOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_unregisterMachine", new object[] {
                    _this,
                    id}, this.IVirtualBox_unregisterMachineOperationCompleted, userState);
        }

        private void OnIVirtualBox_unregisterMachineOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_unregisterMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_unregisterMachineCompleted(this, new IVirtualBox_unregisterMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_createHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] HardDiskStorageType storageType)
        {
            object[] results = this.Invoke("IVirtualBox_createHardDisk", new object[] {
                    _this,
                    storageType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_createHardDisk(string _this, HardDiskStorageType storageType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_createHardDisk", new object[] {
                    _this,
                    storageType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_createHardDisk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_createHardDiskAsync(string _this, HardDiskStorageType storageType)
        {
            this.IVirtualBox_createHardDiskAsync(_this, storageType, null);
        }

        /// <remarks/>
        public void IVirtualBox_createHardDiskAsync(string _this, HardDiskStorageType storageType, object userState)
        {
            if ((this.IVirtualBox_createHardDiskOperationCompleted == null))
            {
                this.IVirtualBox_createHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_createHardDiskOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_createHardDisk", new object[] {
                    _this,
                    storageType}, this.IVirtualBox_createHardDiskOperationCompleted, userState);
        }

        private void OnIVirtualBox_createHardDiskOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_createHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_createHardDiskCompleted(this, new IVirtualBox_createHardDiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_openHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string location)
        {
            object[] results = this.Invoke("IVirtualBox_openHardDisk", new object[] {
                    _this,
                    location});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openHardDisk(string _this, string location, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openHardDisk", new object[] {
                    _this,
                    location}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_openHardDisk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_openHardDiskAsync(string _this, string location)
        {
            this.IVirtualBox_openHardDiskAsync(_this, location, null);
        }

        /// <remarks/>
        public void IVirtualBox_openHardDiskAsync(string _this, string location, object userState)
        {
            if ((this.IVirtualBox_openHardDiskOperationCompleted == null))
            {
                this.IVirtualBox_openHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openHardDiskOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openHardDisk", new object[] {
                    _this,
                    location}, this.IVirtualBox_openHardDiskOperationCompleted, userState);
        }

        private void OnIVirtualBox_openHardDiskOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openHardDiskCompleted(this, new IVirtualBox_openHardDiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_openVirtualDiskImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath)
        {
            object[] results = this.Invoke("IVirtualBox_openVirtualDiskImage", new object[] {
                    _this,
                    filePath});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openVirtualDiskImage(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openVirtualDiskImage", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_openVirtualDiskImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_openVirtualDiskImageAsync(string _this, string filePath)
        {
            this.IVirtualBox_openVirtualDiskImageAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IVirtualBox_openVirtualDiskImageAsync(string _this, string filePath, object userState)
        {
            if ((this.IVirtualBox_openVirtualDiskImageOperationCompleted == null))
            {
                this.IVirtualBox_openVirtualDiskImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openVirtualDiskImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openVirtualDiskImage", new object[] {
                    _this,
                    filePath}, this.IVirtualBox_openVirtualDiskImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_openVirtualDiskImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openVirtualDiskImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openVirtualDiskImageCompleted(this, new IVirtualBox_openVirtualDiskImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_registerHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string hardDisk)
        {
            this.Invoke("IVirtualBox_registerHardDisk", new object[] {
                    _this,
                    hardDisk});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_registerHardDisk(string _this, string hardDisk, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_registerHardDisk", new object[] {
                    _this,
                    hardDisk}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_registerHardDisk(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_registerHardDiskAsync(string _this, string hardDisk)
        {
            this.IVirtualBox_registerHardDiskAsync(_this, hardDisk, null);
        }

        /// <remarks/>
        public void IVirtualBox_registerHardDiskAsync(string _this, string hardDisk, object userState)
        {
            if ((this.IVirtualBox_registerHardDiskOperationCompleted == null))
            {
                this.IVirtualBox_registerHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_registerHardDiskOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_registerHardDisk", new object[] {
                    _this,
                    hardDisk}, this.IVirtualBox_registerHardDiskOperationCompleted, userState);
        }

        private void OnIVirtualBox_registerHardDiskOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_registerHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_registerHardDiskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_getHardDisk", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getHardDisk(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getHardDisk", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getHardDisk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getHardDiskAsync(string _this, string id)
        {
            this.IVirtualBox_getHardDiskAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_getHardDiskAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_getHardDiskOperationCompleted == null))
            {
                this.IVirtualBox_getHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getHardDiskOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getHardDisk", new object[] {
                    _this,
                    id}, this.IVirtualBox_getHardDiskOperationCompleted, userState);
        }

        private void OnIVirtualBox_getHardDiskOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getHardDiskCompleted(this, new IVirtualBox_getHardDiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_findHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string location)
        {
            object[] results = this.Invoke("IVirtualBox_findHardDisk", new object[] {
                    _this,
                    location});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_findHardDisk(string _this, string location, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_findHardDisk", new object[] {
                    _this,
                    location}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_findHardDisk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_findHardDiskAsync(string _this, string location)
        {
            this.IVirtualBox_findHardDiskAsync(_this, location, null);
        }

        /// <remarks/>
        public void IVirtualBox_findHardDiskAsync(string _this, string location, object userState)
        {
            if ((this.IVirtualBox_findHardDiskOperationCompleted == null))
            {
                this.IVirtualBox_findHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_findHardDiskOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_findHardDisk", new object[] {
                    _this,
                    location}, this.IVirtualBox_findHardDiskOperationCompleted, userState);
        }

        private void OnIVirtualBox_findHardDiskOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_findHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_findHardDiskCompleted(this, new IVirtualBox_findHardDiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_findVirtualDiskImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath)
        {
            object[] results = this.Invoke("IVirtualBox_findVirtualDiskImage", new object[] {
                    _this,
                    filePath});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_findVirtualDiskImage(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_findVirtualDiskImage", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_findVirtualDiskImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_findVirtualDiskImageAsync(string _this, string filePath)
        {
            this.IVirtualBox_findVirtualDiskImageAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IVirtualBox_findVirtualDiskImageAsync(string _this, string filePath, object userState)
        {
            if ((this.IVirtualBox_findVirtualDiskImageOperationCompleted == null))
            {
                this.IVirtualBox_findVirtualDiskImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_findVirtualDiskImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_findVirtualDiskImage", new object[] {
                    _this,
                    filePath}, this.IVirtualBox_findVirtualDiskImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_findVirtualDiskImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_findVirtualDiskImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_findVirtualDiskImageCompleted(this, new IVirtualBox_findVirtualDiskImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_unregisterHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_unregisterHardDisk", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_unregisterHardDisk(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_unregisterHardDisk", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_unregisterHardDisk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_unregisterHardDiskAsync(string _this, string id)
        {
            this.IVirtualBox_unregisterHardDiskAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_unregisterHardDiskAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_unregisterHardDiskOperationCompleted == null))
            {
                this.IVirtualBox_unregisterHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_unregisterHardDiskOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_unregisterHardDisk", new object[] {
                    _this,
                    id}, this.IVirtualBox_unregisterHardDiskOperationCompleted, userState);
        }

        private void OnIVirtualBox_unregisterHardDiskOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_unregisterHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_unregisterHardDiskCompleted(this, new IVirtualBox_unregisterHardDiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_openDVDImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_openDVDImage", new object[] {
                    _this,
                    filePath,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openDVDImage(string _this, string filePath, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openDVDImage", new object[] {
                    _this,
                    filePath,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_openDVDImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_openDVDImageAsync(string _this, string filePath, string id)
        {
            this.IVirtualBox_openDVDImageAsync(_this, filePath, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_openDVDImageAsync(string _this, string filePath, string id, object userState)
        {
            if ((this.IVirtualBox_openDVDImageOperationCompleted == null))
            {
                this.IVirtualBox_openDVDImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openDVDImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openDVDImage", new object[] {
                    _this,
                    filePath,
                    id}, this.IVirtualBox_openDVDImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_openDVDImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openDVDImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openDVDImageCompleted(this, new IVirtualBox_openDVDImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_registerDVDImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string image)
        {
            this.Invoke("IVirtualBox_registerDVDImage", new object[] {
                    _this,
                    image});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_registerDVDImage(string _this, string image, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_registerDVDImage", new object[] {
                    _this,
                    image}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_registerDVDImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_registerDVDImageAsync(string _this, string image)
        {
            this.IVirtualBox_registerDVDImageAsync(_this, image, null);
        }

        /// <remarks/>
        public void IVirtualBox_registerDVDImageAsync(string _this, string image, object userState)
        {
            if ((this.IVirtualBox_registerDVDImageOperationCompleted == null))
            {
                this.IVirtualBox_registerDVDImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_registerDVDImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_registerDVDImage", new object[] {
                    _this,
                    image}, this.IVirtualBox_registerDVDImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_registerDVDImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_registerDVDImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_registerDVDImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getDVDImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_getDVDImage", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getDVDImage(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getDVDImage", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getDVDImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getDVDImageAsync(string _this, string id)
        {
            this.IVirtualBox_getDVDImageAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_getDVDImageAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_getDVDImageOperationCompleted == null))
            {
                this.IVirtualBox_getDVDImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getDVDImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getDVDImage", new object[] {
                    _this,
                    id}, this.IVirtualBox_getDVDImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_getDVDImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getDVDImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getDVDImageCompleted(this, new IVirtualBox_getDVDImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_findDVDImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath)
        {
            object[] results = this.Invoke("IVirtualBox_findDVDImage", new object[] {
                    _this,
                    filePath});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_findDVDImage(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_findDVDImage", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_findDVDImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_findDVDImageAsync(string _this, string filePath)
        {
            this.IVirtualBox_findDVDImageAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IVirtualBox_findDVDImageAsync(string _this, string filePath, object userState)
        {
            if ((this.IVirtualBox_findDVDImageOperationCompleted == null))
            {
                this.IVirtualBox_findDVDImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_findDVDImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_findDVDImage", new object[] {
                    _this,
                    filePath}, this.IVirtualBox_findDVDImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_findDVDImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_findDVDImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_findDVDImageCompleted(this, new IVirtualBox_findDVDImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getDVDImageUsage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ResourceUsage usage)
        {
            object[] results = this.Invoke("IVirtualBox_getDVDImageUsage", new object[] {
                    _this,
                    id,
                    usage});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getDVDImageUsage(string _this, string id, ResourceUsage usage, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getDVDImageUsage", new object[] {
                    _this,
                    id,
                    usage}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getDVDImageUsage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getDVDImageUsageAsync(string _this, string id, ResourceUsage usage)
        {
            this.IVirtualBox_getDVDImageUsageAsync(_this, id, usage, null);
        }

        /// <remarks/>
        public void IVirtualBox_getDVDImageUsageAsync(string _this, string id, ResourceUsage usage, object userState)
        {
            if ((this.IVirtualBox_getDVDImageUsageOperationCompleted == null))
            {
                this.IVirtualBox_getDVDImageUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getDVDImageUsageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getDVDImageUsage", new object[] {
                    _this,
                    id,
                    usage}, this.IVirtualBox_getDVDImageUsageOperationCompleted, userState);
        }

        private void OnIVirtualBox_getDVDImageUsageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getDVDImageUsageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getDVDImageUsageCompleted(this, new IVirtualBox_getDVDImageUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_unregisterDVDImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_unregisterDVDImage", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_unregisterDVDImage(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_unregisterDVDImage", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_unregisterDVDImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_unregisterDVDImageAsync(string _this, string id)
        {
            this.IVirtualBox_unregisterDVDImageAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_unregisterDVDImageAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_unregisterDVDImageOperationCompleted == null))
            {
                this.IVirtualBox_unregisterDVDImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_unregisterDVDImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_unregisterDVDImage", new object[] {
                    _this,
                    id}, this.IVirtualBox_unregisterDVDImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_unregisterDVDImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_unregisterDVDImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_unregisterDVDImageCompleted(this, new IVirtualBox_unregisterDVDImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_openFloppyImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_openFloppyImage", new object[] {
                    _this,
                    filePath,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openFloppyImage(string _this, string filePath, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openFloppyImage", new object[] {
                    _this,
                    filePath,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_openFloppyImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_openFloppyImageAsync(string _this, string filePath, string id)
        {
            this.IVirtualBox_openFloppyImageAsync(_this, filePath, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_openFloppyImageAsync(string _this, string filePath, string id, object userState)
        {
            if ((this.IVirtualBox_openFloppyImageOperationCompleted == null))
            {
                this.IVirtualBox_openFloppyImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openFloppyImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openFloppyImage", new object[] {
                    _this,
                    filePath,
                    id}, this.IVirtualBox_openFloppyImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_openFloppyImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openFloppyImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openFloppyImageCompleted(this, new IVirtualBox_openFloppyImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_registerFloppyImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string image)
        {
            this.Invoke("IVirtualBox_registerFloppyImage", new object[] {
                    _this,
                    image});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_registerFloppyImage(string _this, string image, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_registerFloppyImage", new object[] {
                    _this,
                    image}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_registerFloppyImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_registerFloppyImageAsync(string _this, string image)
        {
            this.IVirtualBox_registerFloppyImageAsync(_this, image, null);
        }

        /// <remarks/>
        public void IVirtualBox_registerFloppyImageAsync(string _this, string image, object userState)
        {
            if ((this.IVirtualBox_registerFloppyImageOperationCompleted == null))
            {
                this.IVirtualBox_registerFloppyImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_registerFloppyImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_registerFloppyImage", new object[] {
                    _this,
                    image}, this.IVirtualBox_registerFloppyImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_registerFloppyImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_registerFloppyImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_registerFloppyImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getFloppyImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_getFloppyImage", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getFloppyImage(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getFloppyImage", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getFloppyImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getFloppyImageAsync(string _this, string id)
        {
            this.IVirtualBox_getFloppyImageAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_getFloppyImageAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_getFloppyImageOperationCompleted == null))
            {
                this.IVirtualBox_getFloppyImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getFloppyImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getFloppyImage", new object[] {
                    _this,
                    id}, this.IVirtualBox_getFloppyImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_getFloppyImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getFloppyImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getFloppyImageCompleted(this, new IVirtualBox_getFloppyImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_findFloppyImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath)
        {
            object[] results = this.Invoke("IVirtualBox_findFloppyImage", new object[] {
                    _this,
                    filePath});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_findFloppyImage(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_findFloppyImage", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_findFloppyImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_findFloppyImageAsync(string _this, string filePath)
        {
            this.IVirtualBox_findFloppyImageAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IVirtualBox_findFloppyImageAsync(string _this, string filePath, object userState)
        {
            if ((this.IVirtualBox_findFloppyImageOperationCompleted == null))
            {
                this.IVirtualBox_findFloppyImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_findFloppyImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_findFloppyImage", new object[] {
                    _this,
                    filePath}, this.IVirtualBox_findFloppyImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_findFloppyImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_findFloppyImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_findFloppyImageCompleted(this, new IVirtualBox_findFloppyImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getFloppyImageUsage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ResourceUsage usage)
        {
            object[] results = this.Invoke("IVirtualBox_getFloppyImageUsage", new object[] {
                    _this,
                    id,
                    usage});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getFloppyImageUsage(string _this, string id, ResourceUsage usage, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getFloppyImageUsage", new object[] {
                    _this,
                    id,
                    usage}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getFloppyImageUsage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getFloppyImageUsageAsync(string _this, string id, ResourceUsage usage)
        {
            this.IVirtualBox_getFloppyImageUsageAsync(_this, id, usage, null);
        }

        /// <remarks/>
        public void IVirtualBox_getFloppyImageUsageAsync(string _this, string id, ResourceUsage usage, object userState)
        {
            if ((this.IVirtualBox_getFloppyImageUsageOperationCompleted == null))
            {
                this.IVirtualBox_getFloppyImageUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getFloppyImageUsageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getFloppyImageUsage", new object[] {
                    _this,
                    id,
                    usage}, this.IVirtualBox_getFloppyImageUsageOperationCompleted, userState);
        }

        private void OnIVirtualBox_getFloppyImageUsageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getFloppyImageUsageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getFloppyImageUsageCompleted(this, new IVirtualBox_getFloppyImageUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_unregisterFloppyImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_unregisterFloppyImage", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_unregisterFloppyImage(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_unregisterFloppyImage", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_unregisterFloppyImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_unregisterFloppyImageAsync(string _this, string id)
        {
            this.IVirtualBox_unregisterFloppyImageAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_unregisterFloppyImageAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_unregisterFloppyImageOperationCompleted == null))
            {
                this.IVirtualBox_unregisterFloppyImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_unregisterFloppyImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_unregisterFloppyImage", new object[] {
                    _this,
                    id}, this.IVirtualBox_unregisterFloppyImageOperationCompleted, userState);
        }

        private void OnIVirtualBox_unregisterFloppyImageOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_unregisterFloppyImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_unregisterFloppyImageCompleted(this, new IVirtualBox_unregisterFloppyImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IGuestOSType IVirtualBox_getGuestOSType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IVirtualBox_getGuestOSType", new object[] {
                    _this,
                    id});
            return ((IGuestOSType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getGuestOSType(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getGuestOSType", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public IGuestOSType EndIVirtualBox_getGuestOSType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IGuestOSType)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getGuestOSTypeAsync(string _this, string id)
        {
            this.IVirtualBox_getGuestOSTypeAsync(_this, id, null);
        }

        /// <remarks/>
        public void IVirtualBox_getGuestOSTypeAsync(string _this, string id, object userState)
        {
            if ((this.IVirtualBox_getGuestOSTypeOperationCompleted == null))
            {
                this.IVirtualBox_getGuestOSTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getGuestOSTypeOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getGuestOSType", new object[] {
                    _this,
                    id}, this.IVirtualBox_getGuestOSTypeOperationCompleted, userState);
        }

        private void OnIVirtualBox_getGuestOSTypeOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getGuestOSTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getGuestOSTypeCompleted(this, new IVirtualBox_getGuestOSTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_createSharedFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostPath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool writable)
        {
            this.Invoke("IVirtualBox_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_createSharedFolder(string _this, string name, string hostPath, bool writable, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_createSharedFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_createSharedFolderAsync(string _this, string name, string hostPath, bool writable)
        {
            this.IVirtualBox_createSharedFolderAsync(_this, name, hostPath, writable, null);
        }

        /// <remarks/>
        public void IVirtualBox_createSharedFolderAsync(string _this, string name, string hostPath, bool writable, object userState)
        {
            if ((this.IVirtualBox_createSharedFolderOperationCompleted == null))
            {
                this.IVirtualBox_createSharedFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_createSharedFolderOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable}, this.IVirtualBox_createSharedFolderOperationCompleted, userState);
        }

        private void OnIVirtualBox_createSharedFolderOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_createSharedFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_createSharedFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_removeSharedFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            this.Invoke("IVirtualBox_removeSharedFolder", new object[] {
                    _this,
                    name});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_removeSharedFolder(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_removeSharedFolder", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_removeSharedFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_removeSharedFolderAsync(string _this, string name)
        {
            this.IVirtualBox_removeSharedFolderAsync(_this, name, null);
        }

        /// <remarks/>
        public void IVirtualBox_removeSharedFolderAsync(string _this, string name, object userState)
        {
            if ((this.IVirtualBox_removeSharedFolderOperationCompleted == null))
            {
                this.IVirtualBox_removeSharedFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_removeSharedFolderOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_removeSharedFolder", new object[] {
                    _this,
                    name}, this.IVirtualBox_removeSharedFolderOperationCompleted, userState);
        }

        private void OnIVirtualBox_removeSharedFolderOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_removeSharedFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_removeSharedFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nextKey", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getNextExtraDataKey([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string key, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string nextValue)
        {
            object[] results = this.Invoke("IVirtualBox_getNextExtraDataKey", new object[] {
                    _this,
                    key});
            nextValue = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getNextExtraDataKey(string _this, string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getNextExtraDataKey", new object[] {
                    _this,
                    key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getNextExtraDataKey(System.IAsyncResult asyncResult, out string nextValue)
        {
            object[] results = this.EndInvoke(asyncResult);
            nextValue = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getNextExtraDataKeyAsync(string _this, string key)
        {
            this.IVirtualBox_getNextExtraDataKeyAsync(_this, key, null);
        }

        /// <remarks/>
        public void IVirtualBox_getNextExtraDataKeyAsync(string _this, string key, object userState)
        {
            if ((this.IVirtualBox_getNextExtraDataKeyOperationCompleted == null))
            {
                this.IVirtualBox_getNextExtraDataKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getNextExtraDataKeyOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getNextExtraDataKey", new object[] {
                    _this,
                    key}, this.IVirtualBox_getNextExtraDataKeyOperationCompleted, userState);
        }

        private void OnIVirtualBox_getNextExtraDataKeyOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getNextExtraDataKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getNextExtraDataKeyCompleted(this, new IVirtualBox_getNextExtraDataKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_getExtraData([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string key)
        {
            object[] results = this.Invoke("IVirtualBox_getExtraData", new object[] {
                    _this,
                    key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_getExtraData(string _this, string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_getExtraData", new object[] {
                    _this,
                    key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_getExtraData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_getExtraDataAsync(string _this, string key)
        {
            this.IVirtualBox_getExtraDataAsync(_this, key, null);
        }

        /// <remarks/>
        public void IVirtualBox_getExtraDataAsync(string _this, string key, object userState)
        {
            if ((this.IVirtualBox_getExtraDataOperationCompleted == null))
            {
                this.IVirtualBox_getExtraDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_getExtraDataOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_getExtraData", new object[] {
                    _this,
                    key}, this.IVirtualBox_getExtraDataOperationCompleted, userState);
        }

        private void OnIVirtualBox_getExtraDataOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_getExtraDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_getExtraDataCompleted(this, new IVirtualBox_getExtraDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_setExtraData([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string key, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string value)
        {
            this.Invoke("IVirtualBox_setExtraData", new object[] {
                    _this,
                    key,
                    value});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_setExtraData(string _this, string key, string value, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_setExtraData", new object[] {
                    _this,
                    key,
                    value}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_setExtraData(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_setExtraDataAsync(string _this, string key, string value)
        {
            this.IVirtualBox_setExtraDataAsync(_this, key, value, null);
        }

        /// <remarks/>
        public void IVirtualBox_setExtraDataAsync(string _this, string key, string value, object userState)
        {
            if ((this.IVirtualBox_setExtraDataOperationCompleted == null))
            {
                this.IVirtualBox_setExtraDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_setExtraDataOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_setExtraData", new object[] {
                    _this,
                    key,
                    value}, this.IVirtualBox_setExtraDataOperationCompleted, userState);
        }

        private void OnIVirtualBox_setExtraDataOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_setExtraDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_setExtraDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_openSession([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string session, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string machineId)
        {
            this.Invoke("IVirtualBox_openSession", new object[] {
                    _this,
                    session,
                    machineId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openSession(string _this, string session, string machineId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openSession", new object[] {
                    _this,
                    session,
                    machineId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_openSession(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_openSessionAsync(string _this, string session, string machineId)
        {
            this.IVirtualBox_openSessionAsync(_this, session, machineId, null);
        }

        /// <remarks/>
        public void IVirtualBox_openSessionAsync(string _this, string session, string machineId, object userState)
        {
            if ((this.IVirtualBox_openSessionOperationCompleted == null))
            {
                this.IVirtualBox_openSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openSessionOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openSession", new object[] {
                    _this,
                    session,
                    machineId}, this.IVirtualBox_openSessionOperationCompleted, userState);
        }

        private void OnIVirtualBox_openSessionOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openSessionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_openRemoteSession([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string session, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string machineId, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string type, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string environment)
        {
            object[] results = this.Invoke("IVirtualBox_openRemoteSession", new object[] {
                    _this,
                    session,
                    machineId,
                    type,
                    environment});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openRemoteSession(string _this, string session, string machineId, string type, string environment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openRemoteSession", new object[] {
                    _this,
                    session,
                    machineId,
                    type,
                    environment}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_openRemoteSession(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_openRemoteSessionAsync(string _this, string session, string machineId, string type, string environment)
        {
            this.IVirtualBox_openRemoteSessionAsync(_this, session, machineId, type, environment, null);
        }

        /// <remarks/>
        public void IVirtualBox_openRemoteSessionAsync(string _this, string session, string machineId, string type, string environment, object userState)
        {
            if ((this.IVirtualBox_openRemoteSessionOperationCompleted == null))
            {
                this.IVirtualBox_openRemoteSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openRemoteSessionOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openRemoteSession", new object[] {
                    _this,
                    session,
                    machineId,
                    type,
                    environment}, this.IVirtualBox_openRemoteSessionOperationCompleted, userState);
        }

        private void OnIVirtualBox_openRemoteSessionOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openRemoteSessionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openRemoteSessionCompleted(this, new IVirtualBox_openRemoteSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_openExistingSession([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string session, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string machineId)
        {
            this.Invoke("IVirtualBox_openExistingSession", new object[] {
                    _this,
                    session,
                    machineId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_openExistingSession(string _this, string session, string machineId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_openExistingSession", new object[] {
                    _this,
                    session,
                    machineId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_openExistingSession(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_openExistingSessionAsync(string _this, string session, string machineId)
        {
            this.IVirtualBox_openExistingSessionAsync(_this, session, machineId, null);
        }

        /// <remarks/>
        public void IVirtualBox_openExistingSessionAsync(string _this, string session, string machineId, object userState)
        {
            if ((this.IVirtualBox_openExistingSessionOperationCompleted == null))
            {
                this.IVirtualBox_openExistingSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_openExistingSessionOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_openExistingSession", new object[] {
                    _this,
                    session,
                    machineId}, this.IVirtualBox_openExistingSessionOperationCompleted, userState);
        }

        private void OnIVirtualBox_openExistingSessionOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_openExistingSessionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_openExistingSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("changed", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_waitForPropertyChange([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string what, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint timeout, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string values)
        {
            object[] results = this.Invoke("IVirtualBox_waitForPropertyChange", new object[] {
                    _this,
                    what,
                    timeout});
            values = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_waitForPropertyChange(string _this, string what, uint timeout, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_waitForPropertyChange", new object[] {
                    _this,
                    what,
                    timeout}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_waitForPropertyChange(System.IAsyncResult asyncResult, out string values)
        {
            object[] results = this.EndInvoke(asyncResult);
            values = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_waitForPropertyChangeAsync(string _this, string what, uint timeout)
        {
            this.IVirtualBox_waitForPropertyChangeAsync(_this, what, timeout, null);
        }

        /// <remarks/>
        public void IVirtualBox_waitForPropertyChangeAsync(string _this, string what, uint timeout, object userState)
        {
            if ((this.IVirtualBox_waitForPropertyChangeOperationCompleted == null))
            {
                this.IVirtualBox_waitForPropertyChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_waitForPropertyChangeOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_waitForPropertyChange", new object[] {
                    _this,
                    what,
                    timeout}, this.IVirtualBox_waitForPropertyChangeOperationCompleted, userState);
        }

        private void OnIVirtualBox_waitForPropertyChangeOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_waitForPropertyChangeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_waitForPropertyChangeCompleted(this, new IVirtualBox_waitForPropertyChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualBox_saveSettings([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IVirtualBox_saveSettings", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_saveSettings(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_saveSettings", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualBox_saveSettings(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualBox_saveSettingsAsync(string _this)
        {
            this.IVirtualBox_saveSettingsAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_saveSettingsAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_saveSettingsOperationCompleted == null))
            {
                this.IVirtualBox_saveSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_saveSettingsOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_saveSettings", new object[] {
                    _this}, this.IVirtualBox_saveSettingsOperationCompleted, userState);
        }

        private void OnIVirtualBox_saveSettingsOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_saveSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_saveSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualBox_saveSettingsWithBackup([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualBox_saveSettingsWithBackup", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualBox_saveSettingsWithBackup(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualBox_saveSettingsWithBackup", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualBox_saveSettingsWithBackup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualBox_saveSettingsWithBackupAsync(string _this)
        {
            this.IVirtualBox_saveSettingsWithBackupAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualBox_saveSettingsWithBackupAsync(string _this, object userState)
        {
            if ((this.IVirtualBox_saveSettingsWithBackupOperationCompleted == null))
            {
                this.IVirtualBox_saveSettingsWithBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualBox_saveSettingsWithBackupOperationCompleted);
            }
            this.InvokeAsync("IVirtualBox_saveSettingsWithBackup", new object[] {
                    _this}, this.IVirtualBox_saveSettingsWithBackupOperationCompleted, userState);
        }

        private void OnIVirtualBox_saveSettingsWithBackupOperationCompleted(object arg)
        {
            if ((this.IVirtualBox_saveSettingsWithBackupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualBox_saveSettingsWithBackupCompleted(this, new IVirtualBox_saveSettingsWithBackupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IBIOSSettings_getLogoFadeIn([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getLogoFadeIn", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getLogoFadeIn(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getLogoFadeIn", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIBIOSSettings_getLogoFadeIn(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoFadeInAsync(string _this)
        {
            this.IBIOSSettings_getLogoFadeInAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoFadeInAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getLogoFadeInOperationCompleted == null))
            {
                this.IBIOSSettings_getLogoFadeInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getLogoFadeInOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getLogoFadeIn", new object[] {
                    _this}, this.IBIOSSettings_getLogoFadeInOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getLogoFadeInOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getLogoFadeInCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getLogoFadeInCompleted(this, new IBIOSSettings_getLogoFadeInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setLogoFadeIn([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool logoFadeIn)
        {
            this.Invoke("IBIOSSettings_setLogoFadeIn", new object[] {
                    _this,
                    logoFadeIn});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setLogoFadeIn(string _this, bool logoFadeIn, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setLogoFadeIn", new object[] {
                    _this,
                    logoFadeIn}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setLogoFadeIn(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoFadeInAsync(string _this, bool logoFadeIn)
        {
            this.IBIOSSettings_setLogoFadeInAsync(_this, logoFadeIn, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoFadeInAsync(string _this, bool logoFadeIn, object userState)
        {
            if ((this.IBIOSSettings_setLogoFadeInOperationCompleted == null))
            {
                this.IBIOSSettings_setLogoFadeInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setLogoFadeInOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setLogoFadeIn", new object[] {
                    _this,
                    logoFadeIn}, this.IBIOSSettings_setLogoFadeInOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setLogoFadeInOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setLogoFadeInCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setLogoFadeInCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IBIOSSettings_getLogoFadeOut([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getLogoFadeOut", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getLogoFadeOut(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getLogoFadeOut", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIBIOSSettings_getLogoFadeOut(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoFadeOutAsync(string _this)
        {
            this.IBIOSSettings_getLogoFadeOutAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoFadeOutAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getLogoFadeOutOperationCompleted == null))
            {
                this.IBIOSSettings_getLogoFadeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getLogoFadeOutOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getLogoFadeOut", new object[] {
                    _this}, this.IBIOSSettings_getLogoFadeOutOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getLogoFadeOutOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getLogoFadeOutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getLogoFadeOutCompleted(this, new IBIOSSettings_getLogoFadeOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setLogoFadeOut([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool logoFadeOut)
        {
            this.Invoke("IBIOSSettings_setLogoFadeOut", new object[] {
                    _this,
                    logoFadeOut});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setLogoFadeOut(string _this, bool logoFadeOut, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setLogoFadeOut", new object[] {
                    _this,
                    logoFadeOut}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setLogoFadeOut(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoFadeOutAsync(string _this, bool logoFadeOut)
        {
            this.IBIOSSettings_setLogoFadeOutAsync(_this, logoFadeOut, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoFadeOutAsync(string _this, bool logoFadeOut, object userState)
        {
            if ((this.IBIOSSettings_setLogoFadeOutOperationCompleted == null))
            {
                this.IBIOSSettings_setLogoFadeOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setLogoFadeOutOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setLogoFadeOut", new object[] {
                    _this,
                    logoFadeOut}, this.IBIOSSettings_setLogoFadeOutOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setLogoFadeOutOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setLogoFadeOutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setLogoFadeOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IBIOSSettings_getLogoDisplayTime([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getLogoDisplayTime", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getLogoDisplayTime(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getLogoDisplayTime", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIBIOSSettings_getLogoDisplayTime(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoDisplayTimeAsync(string _this)
        {
            this.IBIOSSettings_getLogoDisplayTimeAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoDisplayTimeAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getLogoDisplayTimeOperationCompleted == null))
            {
                this.IBIOSSettings_getLogoDisplayTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getLogoDisplayTimeOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getLogoDisplayTime", new object[] {
                    _this}, this.IBIOSSettings_getLogoDisplayTimeOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getLogoDisplayTimeOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getLogoDisplayTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getLogoDisplayTimeCompleted(this, new IBIOSSettings_getLogoDisplayTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setLogoDisplayTime([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint logoDisplayTime)
        {
            this.Invoke("IBIOSSettings_setLogoDisplayTime", new object[] {
                    _this,
                    logoDisplayTime});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setLogoDisplayTime(string _this, uint logoDisplayTime, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setLogoDisplayTime", new object[] {
                    _this,
                    logoDisplayTime}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setLogoDisplayTime(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoDisplayTimeAsync(string _this, uint logoDisplayTime)
        {
            this.IBIOSSettings_setLogoDisplayTimeAsync(_this, logoDisplayTime, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoDisplayTimeAsync(string _this, uint logoDisplayTime, object userState)
        {
            if ((this.IBIOSSettings_setLogoDisplayTimeOperationCompleted == null))
            {
                this.IBIOSSettings_setLogoDisplayTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setLogoDisplayTimeOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setLogoDisplayTime", new object[] {
                    _this,
                    logoDisplayTime}, this.IBIOSSettings_setLogoDisplayTimeOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setLogoDisplayTimeOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setLogoDisplayTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setLogoDisplayTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IBIOSSettings_getLogoImagePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getLogoImagePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getLogoImagePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getLogoImagePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIBIOSSettings_getLogoImagePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoImagePathAsync(string _this)
        {
            this.IBIOSSettings_getLogoImagePathAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getLogoImagePathAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getLogoImagePathOperationCompleted == null))
            {
                this.IBIOSSettings_getLogoImagePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getLogoImagePathOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getLogoImagePath", new object[] {
                    _this}, this.IBIOSSettings_getLogoImagePathOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getLogoImagePathOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getLogoImagePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getLogoImagePathCompleted(this, new IBIOSSettings_getLogoImagePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setLogoImagePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string logoImagePath)
        {
            this.Invoke("IBIOSSettings_setLogoImagePath", new object[] {
                    _this,
                    logoImagePath});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setLogoImagePath(string _this, string logoImagePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setLogoImagePath", new object[] {
                    _this,
                    logoImagePath}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setLogoImagePath(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoImagePathAsync(string _this, string logoImagePath)
        {
            this.IBIOSSettings_setLogoImagePathAsync(_this, logoImagePath, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setLogoImagePathAsync(string _this, string logoImagePath, object userState)
        {
            if ((this.IBIOSSettings_setLogoImagePathOperationCompleted == null))
            {
                this.IBIOSSettings_setLogoImagePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setLogoImagePathOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setLogoImagePath", new object[] {
                    _this,
                    logoImagePath}, this.IBIOSSettings_setLogoImagePathOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setLogoImagePathOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setLogoImagePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setLogoImagePathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public BIOSBootMenuMode IBIOSSettings_getBootMenuMode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getBootMenuMode", new object[] {
                    _this});
            return ((BIOSBootMenuMode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getBootMenuMode(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getBootMenuMode", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public BIOSBootMenuMode EndIBIOSSettings_getBootMenuMode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((BIOSBootMenuMode)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getBootMenuModeAsync(string _this)
        {
            this.IBIOSSettings_getBootMenuModeAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getBootMenuModeAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getBootMenuModeOperationCompleted == null))
            {
                this.IBIOSSettings_getBootMenuModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getBootMenuModeOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getBootMenuMode", new object[] {
                    _this}, this.IBIOSSettings_getBootMenuModeOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getBootMenuModeOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getBootMenuModeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getBootMenuModeCompleted(this, new IBIOSSettings_getBootMenuModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setBootMenuMode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] BIOSBootMenuMode bootMenuMode)
        {
            this.Invoke("IBIOSSettings_setBootMenuMode", new object[] {
                    _this,
                    bootMenuMode});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setBootMenuMode(string _this, BIOSBootMenuMode bootMenuMode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setBootMenuMode", new object[] {
                    _this,
                    bootMenuMode}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setBootMenuMode(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setBootMenuModeAsync(string _this, BIOSBootMenuMode bootMenuMode)
        {
            this.IBIOSSettings_setBootMenuModeAsync(_this, bootMenuMode, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setBootMenuModeAsync(string _this, BIOSBootMenuMode bootMenuMode, object userState)
        {
            if ((this.IBIOSSettings_setBootMenuModeOperationCompleted == null))
            {
                this.IBIOSSettings_setBootMenuModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setBootMenuModeOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setBootMenuMode", new object[] {
                    _this,
                    bootMenuMode}, this.IBIOSSettings_setBootMenuModeOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setBootMenuModeOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setBootMenuModeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setBootMenuModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IBIOSSettings_getACPIEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getACPIEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getACPIEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getACPIEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIBIOSSettings_getACPIEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getACPIEnabledAsync(string _this)
        {
            this.IBIOSSettings_getACPIEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getACPIEnabledAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getACPIEnabledOperationCompleted == null))
            {
                this.IBIOSSettings_getACPIEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getACPIEnabledOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getACPIEnabled", new object[] {
                    _this}, this.IBIOSSettings_getACPIEnabledOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getACPIEnabledOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getACPIEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getACPIEnabledCompleted(this, new IBIOSSettings_getACPIEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setACPIEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool ACPIEnabled)
        {
            this.Invoke("IBIOSSettings_setACPIEnabled", new object[] {
                    _this,
                    ACPIEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setACPIEnabled(string _this, bool ACPIEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setACPIEnabled", new object[] {
                    _this,
                    ACPIEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setACPIEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setACPIEnabledAsync(string _this, bool ACPIEnabled)
        {
            this.IBIOSSettings_setACPIEnabledAsync(_this, ACPIEnabled, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setACPIEnabledAsync(string _this, bool ACPIEnabled, object userState)
        {
            if ((this.IBIOSSettings_setACPIEnabledOperationCompleted == null))
            {
                this.IBIOSSettings_setACPIEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setACPIEnabledOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setACPIEnabled", new object[] {
                    _this,
                    ACPIEnabled}, this.IBIOSSettings_setACPIEnabledOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setACPIEnabledOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setACPIEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setACPIEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IBIOSSettings_getIOAPICEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getIOAPICEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getIOAPICEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getIOAPICEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIBIOSSettings_getIOAPICEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getIOAPICEnabledAsync(string _this)
        {
            this.IBIOSSettings_getIOAPICEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getIOAPICEnabledAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getIOAPICEnabledOperationCompleted == null))
            {
                this.IBIOSSettings_getIOAPICEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getIOAPICEnabledOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getIOAPICEnabled", new object[] {
                    _this}, this.IBIOSSettings_getIOAPICEnabledOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getIOAPICEnabledOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getIOAPICEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getIOAPICEnabledCompleted(this, new IBIOSSettings_getIOAPICEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setIOAPICEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool IOAPICEnabled)
        {
            this.Invoke("IBIOSSettings_setIOAPICEnabled", new object[] {
                    _this,
                    IOAPICEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setIOAPICEnabled(string _this, bool IOAPICEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setIOAPICEnabled", new object[] {
                    _this,
                    IOAPICEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setIOAPICEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setIOAPICEnabledAsync(string _this, bool IOAPICEnabled)
        {
            this.IBIOSSettings_setIOAPICEnabledAsync(_this, IOAPICEnabled, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setIOAPICEnabledAsync(string _this, bool IOAPICEnabled, object userState)
        {
            if ((this.IBIOSSettings_setIOAPICEnabledOperationCompleted == null))
            {
                this.IBIOSSettings_setIOAPICEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setIOAPICEnabledOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setIOAPICEnabled", new object[] {
                    _this,
                    IOAPICEnabled}, this.IBIOSSettings_setIOAPICEnabledOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setIOAPICEnabledOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setIOAPICEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setIOAPICEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long IBIOSSettings_getTimeOffset([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getTimeOffset", new object[] {
                    _this});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getTimeOffset(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getTimeOffset", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public long EndIBIOSSettings_getTimeOffset(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getTimeOffsetAsync(string _this)
        {
            this.IBIOSSettings_getTimeOffsetAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getTimeOffsetAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getTimeOffsetOperationCompleted == null))
            {
                this.IBIOSSettings_getTimeOffsetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getTimeOffsetOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getTimeOffset", new object[] {
                    _this}, this.IBIOSSettings_getTimeOffsetOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getTimeOffsetOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getTimeOffsetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getTimeOffsetCompleted(this, new IBIOSSettings_getTimeOffsetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setTimeOffset([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] long timeOffset)
        {
            this.Invoke("IBIOSSettings_setTimeOffset", new object[] {
                    _this,
                    timeOffset});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setTimeOffset(string _this, long timeOffset, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setTimeOffset", new object[] {
                    _this,
                    timeOffset}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setTimeOffset(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setTimeOffsetAsync(string _this, long timeOffset)
        {
            this.IBIOSSettings_setTimeOffsetAsync(_this, timeOffset, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setTimeOffsetAsync(string _this, long timeOffset, object userState)
        {
            if ((this.IBIOSSettings_setTimeOffsetOperationCompleted == null))
            {
                this.IBIOSSettings_setTimeOffsetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setTimeOffsetOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setTimeOffset", new object[] {
                    _this,
                    timeOffset}, this.IBIOSSettings_setTimeOffsetOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setTimeOffsetOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setTimeOffsetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setTimeOffsetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IBIOSSettings_getPXEDebugEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getPXEDebugEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getPXEDebugEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getPXEDebugEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIBIOSSettings_getPXEDebugEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getPXEDebugEnabledAsync(string _this)
        {
            this.IBIOSSettings_getPXEDebugEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getPXEDebugEnabledAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getPXEDebugEnabledOperationCompleted == null))
            {
                this.IBIOSSettings_getPXEDebugEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getPXEDebugEnabledOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getPXEDebugEnabled", new object[] {
                    _this}, this.IBIOSSettings_getPXEDebugEnabledOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getPXEDebugEnabledOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getPXEDebugEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getPXEDebugEnabledCompleted(this, new IBIOSSettings_getPXEDebugEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setPXEDebugEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool PXEDebugEnabled)
        {
            this.Invoke("IBIOSSettings_setPXEDebugEnabled", new object[] {
                    _this,
                    PXEDebugEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setPXEDebugEnabled(string _this, bool PXEDebugEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setPXEDebugEnabled", new object[] {
                    _this,
                    PXEDebugEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setPXEDebugEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setPXEDebugEnabledAsync(string _this, bool PXEDebugEnabled)
        {
            this.IBIOSSettings_setPXEDebugEnabledAsync(_this, PXEDebugEnabled, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setPXEDebugEnabledAsync(string _this, bool PXEDebugEnabled, object userState)
        {
            if ((this.IBIOSSettings_setPXEDebugEnabledOperationCompleted == null))
            {
                this.IBIOSSettings_setPXEDebugEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setPXEDebugEnabledOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setPXEDebugEnabled", new object[] {
                    _this,
                    PXEDebugEnabled}, this.IBIOSSettings_setPXEDebugEnabledOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setPXEDebugEnabledOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setPXEDebugEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setPXEDebugEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IDEControllerType IBIOSSettings_getIDEControllerType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IBIOSSettings_getIDEControllerType", new object[] {
                    _this});
            return ((IDEControllerType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_getIDEControllerType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_getIDEControllerType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public IDEControllerType EndIBIOSSettings_getIDEControllerType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IDEControllerType)(results[0]));
        }

        /// <remarks/>
        public void IBIOSSettings_getIDEControllerTypeAsync(string _this)
        {
            this.IBIOSSettings_getIDEControllerTypeAsync(_this, null);
        }

        /// <remarks/>
        public void IBIOSSettings_getIDEControllerTypeAsync(string _this, object userState)
        {
            if ((this.IBIOSSettings_getIDEControllerTypeOperationCompleted == null))
            {
                this.IBIOSSettings_getIDEControllerTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_getIDEControllerTypeOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_getIDEControllerType", new object[] {
                    _this}, this.IBIOSSettings_getIDEControllerTypeOperationCompleted, userState);
        }

        private void OnIBIOSSettings_getIDEControllerTypeOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_getIDEControllerTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_getIDEControllerTypeCompleted(this, new IBIOSSettings_getIDEControllerTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IBIOSSettings_setIDEControllerType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] IDEControllerType IDEControllerType)
        {
            this.Invoke("IBIOSSettings_setIDEControllerType", new object[] {
                    _this,
                    IDEControllerType});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIBIOSSettings_setIDEControllerType(string _this, IDEControllerType IDEControllerType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IBIOSSettings_setIDEControllerType", new object[] {
                    _this,
                    IDEControllerType}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIBIOSSettings_setIDEControllerType(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IBIOSSettings_setIDEControllerTypeAsync(string _this, IDEControllerType IDEControllerType)
        {
            this.IBIOSSettings_setIDEControllerTypeAsync(_this, IDEControllerType, null);
        }

        /// <remarks/>
        public void IBIOSSettings_setIDEControllerTypeAsync(string _this, IDEControllerType IDEControllerType, object userState)
        {
            if ((this.IBIOSSettings_setIDEControllerTypeOperationCompleted == null))
            {
                this.IBIOSSettings_setIDEControllerTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIBIOSSettings_setIDEControllerTypeOperationCompleted);
            }
            this.InvokeAsync("IBIOSSettings_setIDEControllerType", new object[] {
                    _this,
                    IDEControllerType}, this.IBIOSSettings_setIDEControllerTypeOperationCompleted, userState);
        }

        private void OnIBIOSSettings_setIDEControllerTypeOperationCompleted(object arg)
        {
            if ((this.IBIOSSettings_setIDEControllerTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IBIOSSettings_setIDEControllerTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getParent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getParent", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getParent(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getParent", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getParent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getParentAsync(string _this)
        {
            this.IMachine_getParentAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getParentAsync(string _this, object userState)
        {
            if ((this.IMachine_getParentOperationCompleted == null))
            {
                this.IMachine_getParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getParentOperationCompleted);
            }
            this.InvokeAsync("IMachine_getParent", new object[] {
                    _this}, this.IMachine_getParentOperationCompleted, userState);
        }

        private void OnIMachine_getParentOperationCompleted(object arg)
        {
            if ((this.IMachine_getParentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getParentCompleted(this, new IMachine_getParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IMachine_getAccessible([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getAccessible", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getAccessible(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getAccessible", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIMachine_getAccessible(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getAccessibleAsync(string _this)
        {
            this.IMachine_getAccessibleAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getAccessibleAsync(string _this, object userState)
        {
            if ((this.IMachine_getAccessibleOperationCompleted == null))
            {
                this.IMachine_getAccessibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getAccessibleOperationCompleted);
            }
            this.InvokeAsync("IMachine_getAccessible", new object[] {
                    _this}, this.IMachine_getAccessibleOperationCompleted, userState);
        }

        private void OnIMachine_getAccessibleOperationCompleted(object arg)
        {
            if ((this.IMachine_getAccessibleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getAccessibleCompleted(this, new IMachine_getAccessibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getNameAsync(string _this)
        {
            this.IMachine_getNameAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getNameAsync(string _this, object userState)
        {
            if ((this.IMachine_getNameOperationCompleted == null))
            {
                this.IMachine_getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getNameOperationCompleted);
            }
            this.InvokeAsync("IMachine_getName", new object[] {
                    _this}, this.IMachine_getNameOperationCompleted, userState);
        }

        private void OnIMachine_getNameOperationCompleted(object arg)
        {
            if ((this.IMachine_getNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getNameCompleted(this, new IMachine_getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            this.Invoke("IMachine_setName", new object[] {
                    _this,
                    name});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setName(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setName", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setName(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setNameAsync(string _this, string name)
        {
            this.IMachine_setNameAsync(_this, name, null);
        }

        /// <remarks/>
        public void IMachine_setNameAsync(string _this, string name, object userState)
        {
            if ((this.IMachine_setNameOperationCompleted == null))
            {
                this.IMachine_setNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setNameOperationCompleted);
            }
            this.InvokeAsync("IMachine_setName", new object[] {
                    _this,
                    name}, this.IMachine_setNameOperationCompleted, userState);
        }

        private void OnIMachine_setNameOperationCompleted(object arg)
        {
            if ((this.IMachine_setNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getDescriptionAsync(string _this)
        {
            this.IMachine_getDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getDescriptionAsync(string _this, object userState)
        {
            if ((this.IMachine_getDescriptionOperationCompleted == null))
            {
                this.IMachine_getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getDescriptionOperationCompleted);
            }
            this.InvokeAsync("IMachine_getDescription", new object[] {
                    _this}, this.IMachine_getDescriptionOperationCompleted, userState);
        }

        private void OnIMachine_getDescriptionOperationCompleted(object arg)
        {
            if ((this.IMachine_getDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getDescriptionCompleted(this, new IMachine_getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string description)
        {
            this.Invoke("IMachine_setDescription", new object[] {
                    _this,
                    description});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setDescription(string _this, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setDescription", new object[] {
                    _this,
                    description}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setDescription(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setDescriptionAsync(string _this, string description)
        {
            this.IMachine_setDescriptionAsync(_this, description, null);
        }

        /// <remarks/>
        public void IMachine_setDescriptionAsync(string _this, string description, object userState)
        {
            if ((this.IMachine_setDescriptionOperationCompleted == null))
            {
                this.IMachine_setDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setDescriptionOperationCompleted);
            }
            this.InvokeAsync("IMachine_setDescription", new object[] {
                    _this,
                    description}, this.IMachine_setDescriptionOperationCompleted, userState);
        }

        private void OnIMachine_setDescriptionOperationCompleted(object arg)
        {
            if ((this.IMachine_setDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getIdAsync(string _this)
        {
            this.IMachine_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getIdAsync(string _this, object userState)
        {
            if ((this.IMachine_getIdOperationCompleted == null))
            {
                this.IMachine_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getIdOperationCompleted);
            }
            this.InvokeAsync("IMachine_getId", new object[] {
                    _this}, this.IMachine_getIdOperationCompleted, userState);
        }

        private void OnIMachine_getIdOperationCompleted(object arg)
        {
            if ((this.IMachine_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getIdCompleted(this, new IMachine_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getOSTypeId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getOSTypeId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getOSTypeId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getOSTypeId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getOSTypeId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getOSTypeIdAsync(string _this)
        {
            this.IMachine_getOSTypeIdAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getOSTypeIdAsync(string _this, object userState)
        {
            if ((this.IMachine_getOSTypeIdOperationCompleted == null))
            {
                this.IMachine_getOSTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getOSTypeIdOperationCompleted);
            }
            this.InvokeAsync("IMachine_getOSTypeId", new object[] {
                    _this}, this.IMachine_getOSTypeIdOperationCompleted, userState);
        }

        private void OnIMachine_getOSTypeIdOperationCompleted(object arg)
        {
            if ((this.IMachine_getOSTypeIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getOSTypeIdCompleted(this, new IMachine_getOSTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setOSTypeId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string OSTypeId)
        {
            this.Invoke("IMachine_setOSTypeId", new object[] {
                    _this,
                    OSTypeId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setOSTypeId(string _this, string OSTypeId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setOSTypeId", new object[] {
                    _this,
                    OSTypeId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setOSTypeId(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setOSTypeIdAsync(string _this, string OSTypeId)
        {
            this.IMachine_setOSTypeIdAsync(_this, OSTypeId, null);
        }

        /// <remarks/>
        public void IMachine_setOSTypeIdAsync(string _this, string OSTypeId, object userState)
        {
            if ((this.IMachine_setOSTypeIdOperationCompleted == null))
            {
                this.IMachine_setOSTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setOSTypeIdOperationCompleted);
            }
            this.InvokeAsync("IMachine_setOSTypeId", new object[] {
                    _this,
                    OSTypeId}, this.IMachine_setOSTypeIdOperationCompleted, userState);
        }

        private void OnIMachine_setOSTypeIdOperationCompleted(object arg)
        {
            if ((this.IMachine_setOSTypeIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setOSTypeIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IMachine_getMemorySize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getMemorySize", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getMemorySize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getMemorySize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIMachine_getMemorySize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getMemorySizeAsync(string _this)
        {
            this.IMachine_getMemorySizeAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getMemorySizeAsync(string _this, object userState)
        {
            if ((this.IMachine_getMemorySizeOperationCompleted == null))
            {
                this.IMachine_getMemorySizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getMemorySizeOperationCompleted);
            }
            this.InvokeAsync("IMachine_getMemorySize", new object[] {
                    _this}, this.IMachine_getMemorySizeOperationCompleted, userState);
        }

        private void OnIMachine_getMemorySizeOperationCompleted(object arg)
        {
            if ((this.IMachine_getMemorySizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getMemorySizeCompleted(this, new IMachine_getMemorySizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setMemorySize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint memorySize)
        {
            this.Invoke("IMachine_setMemorySize", new object[] {
                    _this,
                    memorySize});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setMemorySize(string _this, uint memorySize, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setMemorySize", new object[] {
                    _this,
                    memorySize}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setMemorySize(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setMemorySizeAsync(string _this, uint memorySize)
        {
            this.IMachine_setMemorySizeAsync(_this, memorySize, null);
        }

        /// <remarks/>
        public void IMachine_setMemorySizeAsync(string _this, uint memorySize, object userState)
        {
            if ((this.IMachine_setMemorySizeOperationCompleted == null))
            {
                this.IMachine_setMemorySizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setMemorySizeOperationCompleted);
            }
            this.InvokeAsync("IMachine_setMemorySize", new object[] {
                    _this,
                    memorySize}, this.IMachine_setMemorySizeOperationCompleted, userState);
        }

        private void OnIMachine_setMemorySizeOperationCompleted(object arg)
        {
            if ((this.IMachine_setMemorySizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setMemorySizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IMachine_getMemoryBalloonSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getMemoryBalloonSize", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getMemoryBalloonSize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getMemoryBalloonSize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIMachine_getMemoryBalloonSize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getMemoryBalloonSizeAsync(string _this)
        {
            this.IMachine_getMemoryBalloonSizeAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getMemoryBalloonSizeAsync(string _this, object userState)
        {
            if ((this.IMachine_getMemoryBalloonSizeOperationCompleted == null))
            {
                this.IMachine_getMemoryBalloonSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getMemoryBalloonSizeOperationCompleted);
            }
            this.InvokeAsync("IMachine_getMemoryBalloonSize", new object[] {
                    _this}, this.IMachine_getMemoryBalloonSizeOperationCompleted, userState);
        }

        private void OnIMachine_getMemoryBalloonSizeOperationCompleted(object arg)
        {
            if ((this.IMachine_getMemoryBalloonSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getMemoryBalloonSizeCompleted(this, new IMachine_getMemoryBalloonSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setMemoryBalloonSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint memoryBalloonSize)
        {
            this.Invoke("IMachine_setMemoryBalloonSize", new object[] {
                    _this,
                    memoryBalloonSize});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setMemoryBalloonSize(string _this, uint memoryBalloonSize, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setMemoryBalloonSize", new object[] {
                    _this,
                    memoryBalloonSize}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setMemoryBalloonSize(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setMemoryBalloonSizeAsync(string _this, uint memoryBalloonSize)
        {
            this.IMachine_setMemoryBalloonSizeAsync(_this, memoryBalloonSize, null);
        }

        /// <remarks/>
        public void IMachine_setMemoryBalloonSizeAsync(string _this, uint memoryBalloonSize, object userState)
        {
            if ((this.IMachine_setMemoryBalloonSizeOperationCompleted == null))
            {
                this.IMachine_setMemoryBalloonSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setMemoryBalloonSizeOperationCompleted);
            }
            this.InvokeAsync("IMachine_setMemoryBalloonSize", new object[] {
                    _this,
                    memoryBalloonSize}, this.IMachine_setMemoryBalloonSizeOperationCompleted, userState);
        }

        private void OnIMachine_setMemoryBalloonSizeOperationCompleted(object arg)
        {
            if ((this.IMachine_setMemoryBalloonSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setMemoryBalloonSizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IMachine_getStatisticsUpdateInterval([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getStatisticsUpdateInterval", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getStatisticsUpdateInterval(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getStatisticsUpdateInterval", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIMachine_getStatisticsUpdateInterval(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getStatisticsUpdateIntervalAsync(string _this)
        {
            this.IMachine_getStatisticsUpdateIntervalAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getStatisticsUpdateIntervalAsync(string _this, object userState)
        {
            if ((this.IMachine_getStatisticsUpdateIntervalOperationCompleted == null))
            {
                this.IMachine_getStatisticsUpdateIntervalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getStatisticsUpdateIntervalOperationCompleted);
            }
            this.InvokeAsync("IMachine_getStatisticsUpdateInterval", new object[] {
                    _this}, this.IMachine_getStatisticsUpdateIntervalOperationCompleted, userState);
        }

        private void OnIMachine_getStatisticsUpdateIntervalOperationCompleted(object arg)
        {
            if ((this.IMachine_getStatisticsUpdateIntervalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getStatisticsUpdateIntervalCompleted(this, new IMachine_getStatisticsUpdateIntervalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setStatisticsUpdateInterval([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint statisticsUpdateInterval)
        {
            this.Invoke("IMachine_setStatisticsUpdateInterval", new object[] {
                    _this,
                    statisticsUpdateInterval});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setStatisticsUpdateInterval(string _this, uint statisticsUpdateInterval, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setStatisticsUpdateInterval", new object[] {
                    _this,
                    statisticsUpdateInterval}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setStatisticsUpdateInterval(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setStatisticsUpdateIntervalAsync(string _this, uint statisticsUpdateInterval)
        {
            this.IMachine_setStatisticsUpdateIntervalAsync(_this, statisticsUpdateInterval, null);
        }

        /// <remarks/>
        public void IMachine_setStatisticsUpdateIntervalAsync(string _this, uint statisticsUpdateInterval, object userState)
        {
            if ((this.IMachine_setStatisticsUpdateIntervalOperationCompleted == null))
            {
                this.IMachine_setStatisticsUpdateIntervalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setStatisticsUpdateIntervalOperationCompleted);
            }
            this.InvokeAsync("IMachine_setStatisticsUpdateInterval", new object[] {
                    _this,
                    statisticsUpdateInterval}, this.IMachine_setStatisticsUpdateIntervalOperationCompleted, userState);
        }

        private void OnIMachine_setStatisticsUpdateIntervalOperationCompleted(object arg)
        {
            if ((this.IMachine_setStatisticsUpdateIntervalCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setStatisticsUpdateIntervalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IMachine_getVRAMSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getVRAMSize", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getVRAMSize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getVRAMSize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIMachine_getVRAMSize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getVRAMSizeAsync(string _this)
        {
            this.IMachine_getVRAMSizeAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getVRAMSizeAsync(string _this, object userState)
        {
            if ((this.IMachine_getVRAMSizeOperationCompleted == null))
            {
                this.IMachine_getVRAMSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getVRAMSizeOperationCompleted);
            }
            this.InvokeAsync("IMachine_getVRAMSize", new object[] {
                    _this}, this.IMachine_getVRAMSizeOperationCompleted, userState);
        }

        private void OnIMachine_getVRAMSizeOperationCompleted(object arg)
        {
            if ((this.IMachine_getVRAMSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getVRAMSizeCompleted(this, new IMachine_getVRAMSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setVRAMSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint VRAMSize)
        {
            this.Invoke("IMachine_setVRAMSize", new object[] {
                    _this,
                    VRAMSize});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setVRAMSize(string _this, uint VRAMSize, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setVRAMSize", new object[] {
                    _this,
                    VRAMSize}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setVRAMSize(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setVRAMSizeAsync(string _this, uint VRAMSize)
        {
            this.IMachine_setVRAMSizeAsync(_this, VRAMSize, null);
        }

        /// <remarks/>
        public void IMachine_setVRAMSizeAsync(string _this, uint VRAMSize, object userState)
        {
            if ((this.IMachine_setVRAMSizeOperationCompleted == null))
            {
                this.IMachine_setVRAMSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setVRAMSizeOperationCompleted);
            }
            this.InvokeAsync("IMachine_setVRAMSize", new object[] {
                    _this,
                    VRAMSize}, this.IMachine_setVRAMSizeOperationCompleted, userState);
        }

        private void OnIMachine_setVRAMSizeOperationCompleted(object arg)
        {
            if ((this.IMachine_setVRAMSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setVRAMSizeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IMachine_getMonitorCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getMonitorCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getMonitorCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getMonitorCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIMachine_getMonitorCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getMonitorCountAsync(string _this)
        {
            this.IMachine_getMonitorCountAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getMonitorCountAsync(string _this, object userState)
        {
            if ((this.IMachine_getMonitorCountOperationCompleted == null))
            {
                this.IMachine_getMonitorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getMonitorCountOperationCompleted);
            }
            this.InvokeAsync("IMachine_getMonitorCount", new object[] {
                    _this}, this.IMachine_getMonitorCountOperationCompleted, userState);
        }

        private void OnIMachine_getMonitorCountOperationCompleted(object arg)
        {
            if ((this.IMachine_getMonitorCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getMonitorCountCompleted(this, new IMachine_getMonitorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setMonitorCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint MonitorCount)
        {
            this.Invoke("IMachine_setMonitorCount", new object[] {
                    _this,
                    MonitorCount});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setMonitorCount(string _this, uint MonitorCount, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setMonitorCount", new object[] {
                    _this,
                    MonitorCount}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setMonitorCount(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setMonitorCountAsync(string _this, uint MonitorCount)
        {
            this.IMachine_setMonitorCountAsync(_this, MonitorCount, null);
        }

        /// <remarks/>
        public void IMachine_setMonitorCountAsync(string _this, uint MonitorCount, object userState)
        {
            if ((this.IMachine_setMonitorCountOperationCompleted == null))
            {
                this.IMachine_setMonitorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setMonitorCountOperationCompleted);
            }
            this.InvokeAsync("IMachine_setMonitorCount", new object[] {
                    _this,
                    MonitorCount}, this.IMachine_setMonitorCountOperationCompleted, userState);
        }

        private void OnIMachine_setMonitorCountOperationCompleted(object arg)
        {
            if ((this.IMachine_setMonitorCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setMonitorCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getBIOSSettings([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getBIOSSettings", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getBIOSSettings(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getBIOSSettings", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getBIOSSettings(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getBIOSSettingsAsync(string _this)
        {
            this.IMachine_getBIOSSettingsAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getBIOSSettingsAsync(string _this, object userState)
        {
            if ((this.IMachine_getBIOSSettingsOperationCompleted == null))
            {
                this.IMachine_getBIOSSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getBIOSSettingsOperationCompleted);
            }
            this.InvokeAsync("IMachine_getBIOSSettings", new object[] {
                    _this}, this.IMachine_getBIOSSettingsOperationCompleted, userState);
        }

        private void OnIMachine_getBIOSSettingsOperationCompleted(object arg)
        {
            if ((this.IMachine_getBIOSSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getBIOSSettingsCompleted(this, new IMachine_getBIOSSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public TSBool IMachine_getHWVirtExEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getHWVirtExEnabled", new object[] {
                    _this});
            return ((TSBool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getHWVirtExEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getHWVirtExEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public TSBool EndIMachine_getHWVirtExEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TSBool)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getHWVirtExEnabledAsync(string _this)
        {
            this.IMachine_getHWVirtExEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getHWVirtExEnabledAsync(string _this, object userState)
        {
            if ((this.IMachine_getHWVirtExEnabledOperationCompleted == null))
            {
                this.IMachine_getHWVirtExEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getHWVirtExEnabledOperationCompleted);
            }
            this.InvokeAsync("IMachine_getHWVirtExEnabled", new object[] {
                    _this}, this.IMachine_getHWVirtExEnabledOperationCompleted, userState);
        }

        private void OnIMachine_getHWVirtExEnabledOperationCompleted(object arg)
        {
            if ((this.IMachine_getHWVirtExEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getHWVirtExEnabledCompleted(this, new IMachine_getHWVirtExEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setHWVirtExEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] TSBool HWVirtExEnabled)
        {
            this.Invoke("IMachine_setHWVirtExEnabled", new object[] {
                    _this,
                    HWVirtExEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setHWVirtExEnabled(string _this, TSBool HWVirtExEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setHWVirtExEnabled", new object[] {
                    _this,
                    HWVirtExEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setHWVirtExEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setHWVirtExEnabledAsync(string _this, TSBool HWVirtExEnabled)
        {
            this.IMachine_setHWVirtExEnabledAsync(_this, HWVirtExEnabled, null);
        }

        /// <remarks/>
        public void IMachine_setHWVirtExEnabledAsync(string _this, TSBool HWVirtExEnabled, object userState)
        {
            if ((this.IMachine_setHWVirtExEnabledOperationCompleted == null))
            {
                this.IMachine_setHWVirtExEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setHWVirtExEnabledOperationCompleted);
            }
            this.InvokeAsync("IMachine_setHWVirtExEnabled", new object[] {
                    _this,
                    HWVirtExEnabled}, this.IMachine_setHWVirtExEnabledOperationCompleted, userState);
        }

        private void OnIMachine_setHWVirtExEnabledOperationCompleted(object arg)
        {
            if ((this.IMachine_setHWVirtExEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setHWVirtExEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IMachine_getHWVirtExNestedPagingEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getHWVirtExNestedPagingEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getHWVirtExNestedPagingEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getHWVirtExNestedPagingEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIMachine_getHWVirtExNestedPagingEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getHWVirtExNestedPagingEnabledAsync(string _this)
        {
            this.IMachine_getHWVirtExNestedPagingEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getHWVirtExNestedPagingEnabledAsync(string _this, object userState)
        {
            if ((this.IMachine_getHWVirtExNestedPagingEnabledOperationCompleted == null))
            {
                this.IMachine_getHWVirtExNestedPagingEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getHWVirtExNestedPagingEnabledOperationCompleted);
            }
            this.InvokeAsync("IMachine_getHWVirtExNestedPagingEnabled", new object[] {
                    _this}, this.IMachine_getHWVirtExNestedPagingEnabledOperationCompleted, userState);
        }

        private void OnIMachine_getHWVirtExNestedPagingEnabledOperationCompleted(object arg)
        {
            if ((this.IMachine_getHWVirtExNestedPagingEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getHWVirtExNestedPagingEnabledCompleted(this, new IMachine_getHWVirtExNestedPagingEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setHWVirtExNestedPagingEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool HWVirtExNestedPagingEnabled)
        {
            this.Invoke("IMachine_setHWVirtExNestedPagingEnabled", new object[] {
                    _this,
                    HWVirtExNestedPagingEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setHWVirtExNestedPagingEnabled(string _this, bool HWVirtExNestedPagingEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setHWVirtExNestedPagingEnabled", new object[] {
                    _this,
                    HWVirtExNestedPagingEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setHWVirtExNestedPagingEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setHWVirtExNestedPagingEnabledAsync(string _this, bool HWVirtExNestedPagingEnabled)
        {
            this.IMachine_setHWVirtExNestedPagingEnabledAsync(_this, HWVirtExNestedPagingEnabled, null);
        }

        /// <remarks/>
        public void IMachine_setHWVirtExNestedPagingEnabledAsync(string _this, bool HWVirtExNestedPagingEnabled, object userState)
        {
            if ((this.IMachine_setHWVirtExNestedPagingEnabledOperationCompleted == null))
            {
                this.IMachine_setHWVirtExNestedPagingEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setHWVirtExNestedPagingEnabledOperationCompleted);
            }
            this.InvokeAsync("IMachine_setHWVirtExNestedPagingEnabled", new object[] {
                    _this,
                    HWVirtExNestedPagingEnabled}, this.IMachine_setHWVirtExNestedPagingEnabledOperationCompleted, userState);
        }

        private void OnIMachine_setHWVirtExNestedPagingEnabledOperationCompleted(object arg)
        {
            if ((this.IMachine_setHWVirtExNestedPagingEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setHWVirtExNestedPagingEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IMachine_getPAEEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getPAEEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getPAEEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getPAEEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIMachine_getPAEEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getPAEEnabledAsync(string _this)
        {
            this.IMachine_getPAEEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getPAEEnabledAsync(string _this, object userState)
        {
            if ((this.IMachine_getPAEEnabledOperationCompleted == null))
            {
                this.IMachine_getPAEEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getPAEEnabledOperationCompleted);
            }
            this.InvokeAsync("IMachine_getPAEEnabled", new object[] {
                    _this}, this.IMachine_getPAEEnabledOperationCompleted, userState);
        }

        private void OnIMachine_getPAEEnabledOperationCompleted(object arg)
        {
            if ((this.IMachine_getPAEEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getPAEEnabledCompleted(this, new IMachine_getPAEEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setPAEEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool PAEEnabled)
        {
            this.Invoke("IMachine_setPAEEnabled", new object[] {
                    _this,
                    PAEEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setPAEEnabled(string _this, bool PAEEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setPAEEnabled", new object[] {
                    _this,
                    PAEEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setPAEEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setPAEEnabledAsync(string _this, bool PAEEnabled)
        {
            this.IMachine_setPAEEnabledAsync(_this, PAEEnabled, null);
        }

        /// <remarks/>
        public void IMachine_setPAEEnabledAsync(string _this, bool PAEEnabled, object userState)
        {
            if ((this.IMachine_setPAEEnabledOperationCompleted == null))
            {
                this.IMachine_setPAEEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setPAEEnabledOperationCompleted);
            }
            this.InvokeAsync("IMachine_setPAEEnabled", new object[] {
                    _this,
                    PAEEnabled}, this.IMachine_setPAEEnabledOperationCompleted, userState);
        }

        private void OnIMachine_setPAEEnabledOperationCompleted(object arg)
        {
            if ((this.IMachine_setPAEEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setPAEEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getSnapshotFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSnapshotFolder", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSnapshotFolder(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSnapshotFolder", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getSnapshotFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSnapshotFolderAsync(string _this)
        {
            this.IMachine_getSnapshotFolderAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSnapshotFolderAsync(string _this, object userState)
        {
            if ((this.IMachine_getSnapshotFolderOperationCompleted == null))
            {
                this.IMachine_getSnapshotFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSnapshotFolderOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSnapshotFolder", new object[] {
                    _this}, this.IMachine_getSnapshotFolderOperationCompleted, userState);
        }

        private void OnIMachine_getSnapshotFolderOperationCompleted(object arg)
        {
            if ((this.IMachine_getSnapshotFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSnapshotFolderCompleted(this, new IMachine_getSnapshotFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setSnapshotFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string snapshotFolder)
        {
            this.Invoke("IMachine_setSnapshotFolder", new object[] {
                    _this,
                    snapshotFolder});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setSnapshotFolder(string _this, string snapshotFolder, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setSnapshotFolder", new object[] {
                    _this,
                    snapshotFolder}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setSnapshotFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setSnapshotFolderAsync(string _this, string snapshotFolder)
        {
            this.IMachine_setSnapshotFolderAsync(_this, snapshotFolder, null);
        }

        /// <remarks/>
        public void IMachine_setSnapshotFolderAsync(string _this, string snapshotFolder, object userState)
        {
            if ((this.IMachine_setSnapshotFolderOperationCompleted == null))
            {
                this.IMachine_setSnapshotFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setSnapshotFolderOperationCompleted);
            }
            this.InvokeAsync("IMachine_setSnapshotFolder", new object[] {
                    _this,
                    snapshotFolder}, this.IMachine_setSnapshotFolderOperationCompleted, userState);
        }

        private void OnIMachine_setSnapshotFolderOperationCompleted(object arg)
        {
            if ((this.IMachine_setSnapshotFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setSnapshotFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getVRDPServer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getVRDPServer", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getVRDPServer(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getVRDPServer", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getVRDPServer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getVRDPServerAsync(string _this)
        {
            this.IMachine_getVRDPServerAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getVRDPServerAsync(string _this, object userState)
        {
            if ((this.IMachine_getVRDPServerOperationCompleted == null))
            {
                this.IMachine_getVRDPServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getVRDPServerOperationCompleted);
            }
            this.InvokeAsync("IMachine_getVRDPServer", new object[] {
                    _this}, this.IMachine_getVRDPServerOperationCompleted, userState);
        }

        private void OnIMachine_getVRDPServerOperationCompleted(object arg)
        {
            if ((this.IMachine_getVRDPServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getVRDPServerCompleted(this, new IMachine_getVRDPServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public IHardDiskAttachment[] IMachine_getHardDiskAttachments([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getHardDiskAttachments", new object[] {
                    _this});
            return ((IHardDiskAttachment[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getHardDiskAttachments(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getHardDiskAttachments", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public IHardDiskAttachment[] EndIMachine_getHardDiskAttachments(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IHardDiskAttachment[])(results[0]));
        }

        /// <remarks/>
        public void IMachine_getHardDiskAttachmentsAsync(string _this)
        {
            this.IMachine_getHardDiskAttachmentsAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getHardDiskAttachmentsAsync(string _this, object userState)
        {
            if ((this.IMachine_getHardDiskAttachmentsOperationCompleted == null))
            {
                this.IMachine_getHardDiskAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getHardDiskAttachmentsOperationCompleted);
            }
            this.InvokeAsync("IMachine_getHardDiskAttachments", new object[] {
                    _this}, this.IMachine_getHardDiskAttachmentsOperationCompleted, userState);
        }

        private void OnIMachine_getHardDiskAttachmentsOperationCompleted(object arg)
        {
            if ((this.IMachine_getHardDiskAttachmentsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getHardDiskAttachmentsCompleted(this, new IMachine_getHardDiskAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getDVDDrive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getDVDDrive", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getDVDDrive(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getDVDDrive", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getDVDDrive(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getDVDDriveAsync(string _this)
        {
            this.IMachine_getDVDDriveAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getDVDDriveAsync(string _this, object userState)
        {
            if ((this.IMachine_getDVDDriveOperationCompleted == null))
            {
                this.IMachine_getDVDDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getDVDDriveOperationCompleted);
            }
            this.InvokeAsync("IMachine_getDVDDrive", new object[] {
                    _this}, this.IMachine_getDVDDriveOperationCompleted, userState);
        }

        private void OnIMachine_getDVDDriveOperationCompleted(object arg)
        {
            if ((this.IMachine_getDVDDriveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getDVDDriveCompleted(this, new IMachine_getDVDDriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getFloppyDrive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getFloppyDrive", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getFloppyDrive(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getFloppyDrive", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getFloppyDrive(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getFloppyDriveAsync(string _this)
        {
            this.IMachine_getFloppyDriveAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getFloppyDriveAsync(string _this, object userState)
        {
            if ((this.IMachine_getFloppyDriveOperationCompleted == null))
            {
                this.IMachine_getFloppyDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getFloppyDriveOperationCompleted);
            }
            this.InvokeAsync("IMachine_getFloppyDrive", new object[] {
                    _this}, this.IMachine_getFloppyDriveOperationCompleted, userState);
        }

        private void OnIMachine_getFloppyDriveOperationCompleted(object arg)
        {
            if ((this.IMachine_getFloppyDriveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getFloppyDriveCompleted(this, new IMachine_getFloppyDriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getUSBController([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getUSBController", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getUSBController(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getUSBController", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getUSBController(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getUSBControllerAsync(string _this)
        {
            this.IMachine_getUSBControllerAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getUSBControllerAsync(string _this, object userState)
        {
            if ((this.IMachine_getUSBControllerOperationCompleted == null))
            {
                this.IMachine_getUSBControllerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getUSBControllerOperationCompleted);
            }
            this.InvokeAsync("IMachine_getUSBController", new object[] {
                    _this}, this.IMachine_getUSBControllerOperationCompleted, userState);
        }

        private void OnIMachine_getUSBControllerOperationCompleted(object arg)
        {
            if ((this.IMachine_getUSBControllerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getUSBControllerCompleted(this, new IMachine_getUSBControllerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getAudioAdapter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getAudioAdapter", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getAudioAdapter(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getAudioAdapter", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getAudioAdapter(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getAudioAdapterAsync(string _this)
        {
            this.IMachine_getAudioAdapterAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getAudioAdapterAsync(string _this, object userState)
        {
            if ((this.IMachine_getAudioAdapterOperationCompleted == null))
            {
                this.IMachine_getAudioAdapterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getAudioAdapterOperationCompleted);
            }
            this.InvokeAsync("IMachine_getAudioAdapter", new object[] {
                    _this}, this.IMachine_getAudioAdapterOperationCompleted, userState);
        }

        private void OnIMachine_getAudioAdapterOperationCompleted(object arg)
        {
            if ((this.IMachine_getAudioAdapterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getAudioAdapterCompleted(this, new IMachine_getAudioAdapterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getSATAController([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSATAController", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSATAController(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSATAController", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getSATAController(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSATAControllerAsync(string _this)
        {
            this.IMachine_getSATAControllerAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSATAControllerAsync(string _this, object userState)
        {
            if ((this.IMachine_getSATAControllerOperationCompleted == null))
            {
                this.IMachine_getSATAControllerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSATAControllerOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSATAController", new object[] {
                    _this}, this.IMachine_getSATAControllerOperationCompleted, userState);
        }

        private void OnIMachine_getSATAControllerOperationCompleted(object arg)
        {
            if ((this.IMachine_getSATAControllerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSATAControllerCompleted(this, new IMachine_getSATAControllerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getSettingsFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSettingsFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSettingsFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSettingsFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getSettingsFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSettingsFilePathAsync(string _this)
        {
            this.IMachine_getSettingsFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSettingsFilePathAsync(string _this, object userState)
        {
            if ((this.IMachine_getSettingsFilePathOperationCompleted == null))
            {
                this.IMachine_getSettingsFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSettingsFilePathOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSettingsFilePath", new object[] {
                    _this}, this.IMachine_getSettingsFilePathOperationCompleted, userState);
        }

        private void OnIMachine_getSettingsFilePathOperationCompleted(object arg)
        {
            if ((this.IMachine_getSettingsFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSettingsFilePathCompleted(this, new IMachine_getSettingsFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getSettingsFileVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSettingsFileVersion", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSettingsFileVersion(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSettingsFileVersion", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getSettingsFileVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSettingsFileVersionAsync(string _this)
        {
            this.IMachine_getSettingsFileVersionAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSettingsFileVersionAsync(string _this, object userState)
        {
            if ((this.IMachine_getSettingsFileVersionOperationCompleted == null))
            {
                this.IMachine_getSettingsFileVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSettingsFileVersionOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSettingsFileVersion", new object[] {
                    _this}, this.IMachine_getSettingsFileVersionOperationCompleted, userState);
        }

        private void OnIMachine_getSettingsFileVersionOperationCompleted(object arg)
        {
            if ((this.IMachine_getSettingsFileVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSettingsFileVersionCompleted(this, new IMachine_getSettingsFileVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IMachine_getSettingsModified([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSettingsModified", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSettingsModified(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSettingsModified", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIMachine_getSettingsModified(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSettingsModifiedAsync(string _this)
        {
            this.IMachine_getSettingsModifiedAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSettingsModifiedAsync(string _this, object userState)
        {
            if ((this.IMachine_getSettingsModifiedOperationCompleted == null))
            {
                this.IMachine_getSettingsModifiedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSettingsModifiedOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSettingsModified", new object[] {
                    _this}, this.IMachine_getSettingsModifiedOperationCompleted, userState);
        }

        private void OnIMachine_getSettingsModifiedOperationCompleted(object arg)
        {
            if ((this.IMachine_getSettingsModifiedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSettingsModifiedCompleted(this, new IMachine_getSettingsModifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SessionState IMachine_getSessionState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSessionState", new object[] {
                    _this});
            return ((SessionState)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSessionState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSessionState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public SessionState EndIMachine_getSessionState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SessionState)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSessionStateAsync(string _this)
        {
            this.IMachine_getSessionStateAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSessionStateAsync(string _this, object userState)
        {
            if ((this.IMachine_getSessionStateOperationCompleted == null))
            {
                this.IMachine_getSessionStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSessionStateOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSessionState", new object[] {
                    _this}, this.IMachine_getSessionStateOperationCompleted, userState);
        }

        private void OnIMachine_getSessionStateOperationCompleted(object arg)
        {
            if ((this.IMachine_getSessionStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSessionStateCompleted(this, new IMachine_getSessionStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getSessionType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSessionType", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSessionType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSessionType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getSessionType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSessionTypeAsync(string _this)
        {
            this.IMachine_getSessionTypeAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSessionTypeAsync(string _this, object userState)
        {
            if ((this.IMachine_getSessionTypeOperationCompleted == null))
            {
                this.IMachine_getSessionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSessionTypeOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSessionType", new object[] {
                    _this}, this.IMachine_getSessionTypeOperationCompleted, userState);
        }

        private void OnIMachine_getSessionTypeOperationCompleted(object arg)
        {
            if ((this.IMachine_getSessionTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSessionTypeCompleted(this, new IMachine_getSessionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IMachine_getSessionPid([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSessionPid", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSessionPid(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSessionPid", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIMachine_getSessionPid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSessionPidAsync(string _this)
        {
            this.IMachine_getSessionPidAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSessionPidAsync(string _this, object userState)
        {
            if ((this.IMachine_getSessionPidOperationCompleted == null))
            {
                this.IMachine_getSessionPidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSessionPidOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSessionPid", new object[] {
                    _this}, this.IMachine_getSessionPidOperationCompleted, userState);
        }

        private void OnIMachine_getSessionPidOperationCompleted(object arg)
        {
            if ((this.IMachine_getSessionPidCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSessionPidCompleted(this, new IMachine_getSessionPidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MachineState IMachine_getState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getState", new object[] {
                    _this});
            return ((MachineState)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public MachineState EndIMachine_getState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MachineState)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getStateAsync(string _this)
        {
            this.IMachine_getStateAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getStateAsync(string _this, object userState)
        {
            if ((this.IMachine_getStateOperationCompleted == null))
            {
                this.IMachine_getStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getStateOperationCompleted);
            }
            this.InvokeAsync("IMachine_getState", new object[] {
                    _this}, this.IMachine_getStateOperationCompleted, userState);
        }

        private void OnIMachine_getStateOperationCompleted(object arg)
        {
            if ((this.IMachine_getStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getStateCompleted(this, new IMachine_getStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long IMachine_getLastStateChange([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getLastStateChange", new object[] {
                    _this});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getLastStateChange(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getLastStateChange", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public long EndIMachine_getLastStateChange(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getLastStateChangeAsync(string _this)
        {
            this.IMachine_getLastStateChangeAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getLastStateChangeAsync(string _this, object userState)
        {
            if ((this.IMachine_getLastStateChangeOperationCompleted == null))
            {
                this.IMachine_getLastStateChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getLastStateChangeOperationCompleted);
            }
            this.InvokeAsync("IMachine_getLastStateChange", new object[] {
                    _this}, this.IMachine_getLastStateChangeOperationCompleted, userState);
        }

        private void OnIMachine_getLastStateChangeOperationCompleted(object arg)
        {
            if ((this.IMachine_getLastStateChangeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getLastStateChangeCompleted(this, new IMachine_getLastStateChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getStateFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getStateFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getStateFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getStateFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getStateFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getStateFilePathAsync(string _this)
        {
            this.IMachine_getStateFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getStateFilePathAsync(string _this, object userState)
        {
            if ((this.IMachine_getStateFilePathOperationCompleted == null))
            {
                this.IMachine_getStateFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getStateFilePathOperationCompleted);
            }
            this.InvokeAsync("IMachine_getStateFilePath", new object[] {
                    _this}, this.IMachine_getStateFilePathOperationCompleted, userState);
        }

        private void OnIMachine_getStateFilePathOperationCompleted(object arg)
        {
            if ((this.IMachine_getStateFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getStateFilePathCompleted(this, new IMachine_getStateFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getLogFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getLogFolder", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getLogFolder(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getLogFolder", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getLogFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getLogFolderAsync(string _this)
        {
            this.IMachine_getLogFolderAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getLogFolderAsync(string _this, object userState)
        {
            if ((this.IMachine_getLogFolderOperationCompleted == null))
            {
                this.IMachine_getLogFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getLogFolderOperationCompleted);
            }
            this.InvokeAsync("IMachine_getLogFolder", new object[] {
                    _this}, this.IMachine_getLogFolderOperationCompleted, userState);
        }

        private void OnIMachine_getLogFolderOperationCompleted(object arg)
        {
            if ((this.IMachine_getLogFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getLogFolderCompleted(this, new IMachine_getLogFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getCurrentSnapshot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getCurrentSnapshot", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getCurrentSnapshot(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getCurrentSnapshot", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getCurrentSnapshot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getCurrentSnapshotAsync(string _this)
        {
            this.IMachine_getCurrentSnapshotAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getCurrentSnapshotAsync(string _this, object userState)
        {
            if ((this.IMachine_getCurrentSnapshotOperationCompleted == null))
            {
                this.IMachine_getCurrentSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getCurrentSnapshotOperationCompleted);
            }
            this.InvokeAsync("IMachine_getCurrentSnapshot", new object[] {
                    _this}, this.IMachine_getCurrentSnapshotOperationCompleted, userState);
        }

        private void OnIMachine_getCurrentSnapshotOperationCompleted(object arg)
        {
            if ((this.IMachine_getCurrentSnapshotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getCurrentSnapshotCompleted(this, new IMachine_getCurrentSnapshotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IMachine_getSnapshotCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSnapshotCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSnapshotCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSnapshotCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIMachine_getSnapshotCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSnapshotCountAsync(string _this)
        {
            this.IMachine_getSnapshotCountAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSnapshotCountAsync(string _this, object userState)
        {
            if ((this.IMachine_getSnapshotCountOperationCompleted == null))
            {
                this.IMachine_getSnapshotCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSnapshotCountOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSnapshotCount", new object[] {
                    _this}, this.IMachine_getSnapshotCountOperationCompleted, userState);
        }

        private void OnIMachine_getSnapshotCountOperationCompleted(object arg)
        {
            if ((this.IMachine_getSnapshotCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSnapshotCountCompleted(this, new IMachine_getSnapshotCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IMachine_getCurrentStateModified([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getCurrentStateModified", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getCurrentStateModified(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getCurrentStateModified", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIMachine_getCurrentStateModified(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getCurrentStateModifiedAsync(string _this)
        {
            this.IMachine_getCurrentStateModifiedAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getCurrentStateModifiedAsync(string _this, object userState)
        {
            if ((this.IMachine_getCurrentStateModifiedOperationCompleted == null))
            {
                this.IMachine_getCurrentStateModifiedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getCurrentStateModifiedOperationCompleted);
            }
            this.InvokeAsync("IMachine_getCurrentStateModified", new object[] {
                    _this}, this.IMachine_getCurrentStateModifiedOperationCompleted, userState);
        }

        private void OnIMachine_getCurrentStateModifiedOperationCompleted(object arg)
        {
            if ((this.IMachine_getCurrentStateModifiedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getCurrentStateModifiedCompleted(this, new IMachine_getCurrentStateModifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ISharedFolder[] IMachine_getSharedFolders([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getSharedFolders", new object[] {
                    _this});
            return ((ISharedFolder[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSharedFolders(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSharedFolders", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ISharedFolder[] EndIMachine_getSharedFolders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ISharedFolder[])(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSharedFoldersAsync(string _this)
        {
            this.IMachine_getSharedFoldersAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getSharedFoldersAsync(string _this, object userState)
        {
            if ((this.IMachine_getSharedFoldersOperationCompleted == null))
            {
                this.IMachine_getSharedFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSharedFoldersOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSharedFolders", new object[] {
                    _this}, this.IMachine_getSharedFoldersOperationCompleted, userState);
        }

        private void OnIMachine_getSharedFoldersOperationCompleted(object arg)
        {
            if ((this.IMachine_getSharedFoldersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSharedFoldersCompleted(this, new IMachine_getSharedFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ClipboardMode IMachine_getClipboardMode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_getClipboardMode", new object[] {
                    _this});
            return ((ClipboardMode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getClipboardMode(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getClipboardMode", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ClipboardMode EndIMachine_getClipboardMode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ClipboardMode)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getClipboardModeAsync(string _this)
        {
            this.IMachine_getClipboardModeAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_getClipboardModeAsync(string _this, object userState)
        {
            if ((this.IMachine_getClipboardModeOperationCompleted == null))
            {
                this.IMachine_getClipboardModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getClipboardModeOperationCompleted);
            }
            this.InvokeAsync("IMachine_getClipboardMode", new object[] {
                    _this}, this.IMachine_getClipboardModeOperationCompleted, userState);
        }

        private void OnIMachine_getClipboardModeOperationCompleted(object arg)
        {
            if ((this.IMachine_getClipboardModeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getClipboardModeCompleted(this, new IMachine_getClipboardModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setClipboardMode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ClipboardMode clipboardMode)
        {
            this.Invoke("IMachine_setClipboardMode", new object[] {
                    _this,
                    clipboardMode});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setClipboardMode(string _this, ClipboardMode clipboardMode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setClipboardMode", new object[] {
                    _this,
                    clipboardMode}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setClipboardMode(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setClipboardModeAsync(string _this, ClipboardMode clipboardMode)
        {
            this.IMachine_setClipboardModeAsync(_this, clipboardMode, null);
        }

        /// <remarks/>
        public void IMachine_setClipboardModeAsync(string _this, ClipboardMode clipboardMode, object userState)
        {
            if ((this.IMachine_setClipboardModeOperationCompleted == null))
            {
                this.IMachine_setClipboardModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setClipboardModeOperationCompleted);
            }
            this.InvokeAsync("IMachine_setClipboardMode", new object[] {
                    _this,
                    clipboardMode}, this.IMachine_setClipboardModeOperationCompleted, userState);
        }

        private void OnIMachine_setClipboardModeOperationCompleted(object arg)
        {
            if ((this.IMachine_setClipboardModeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setClipboardModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setBootOrder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint position, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DeviceType device)
        {
            this.Invoke("IMachine_setBootOrder", new object[] {
                    _this,
                    position,
                    device});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setBootOrder(string _this, uint position, DeviceType device, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setBootOrder", new object[] {
                    _this,
                    position,
                    device}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setBootOrder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setBootOrderAsync(string _this, uint position, DeviceType device)
        {
            this.IMachine_setBootOrderAsync(_this, position, device, null);
        }

        /// <remarks/>
        public void IMachine_setBootOrderAsync(string _this, uint position, DeviceType device, object userState)
        {
            if ((this.IMachine_setBootOrderOperationCompleted == null))
            {
                this.IMachine_setBootOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setBootOrderOperationCompleted);
            }
            this.InvokeAsync("IMachine_setBootOrder", new object[] {
                    _this,
                    position,
                    device}, this.IMachine_setBootOrderOperationCompleted, userState);
        }

        private void OnIMachine_setBootOrderOperationCompleted(object arg)
        {
            if ((this.IMachine_setBootOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setBootOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DeviceType IMachine_getBootOrder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint order)
        {
            object[] results = this.Invoke("IMachine_getBootOrder", new object[] {
                    _this,
                    order});
            return ((DeviceType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getBootOrder(string _this, uint order, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getBootOrder", new object[] {
                    _this,
                    order}, callback, asyncState);
        }

        /// <remarks/>
        public DeviceType EndIMachine_getBootOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeviceType)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getBootOrderAsync(string _this, uint order)
        {
            this.IMachine_getBootOrderAsync(_this, order, null);
        }

        /// <remarks/>
        public void IMachine_getBootOrderAsync(string _this, uint order, object userState)
        {
            if ((this.IMachine_getBootOrderOperationCompleted == null))
            {
                this.IMachine_getBootOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getBootOrderOperationCompleted);
            }
            this.InvokeAsync("IMachine_getBootOrder", new object[] {
                    _this,
                    order}, this.IMachine_getBootOrderOperationCompleted, userState);
        }

        private void OnIMachine_getBootOrderOperationCompleted(object arg)
        {
            if ((this.IMachine_getBootOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getBootOrderCompleted(this, new IMachine_getBootOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_attachHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] StorageBus bus, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int channel, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int device)
        {
            this.Invoke("IMachine_attachHardDisk", new object[] {
                    _this,
                    id,
                    bus,
                    channel,
                    device});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_attachHardDisk(string _this, string id, StorageBus bus, int channel, int device, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_attachHardDisk", new object[] {
                    _this,
                    id,
                    bus,
                    channel,
                    device}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_attachHardDisk(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_attachHardDiskAsync(string _this, string id, StorageBus bus, int channel, int device)
        {
            this.IMachine_attachHardDiskAsync(_this, id, bus, channel, device, null);
        }

        /// <remarks/>
        public void IMachine_attachHardDiskAsync(string _this, string id, StorageBus bus, int channel, int device, object userState)
        {
            if ((this.IMachine_attachHardDiskOperationCompleted == null))
            {
                this.IMachine_attachHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_attachHardDiskOperationCompleted);
            }
            this.InvokeAsync("IMachine_attachHardDisk", new object[] {
                    _this,
                    id,
                    bus,
                    channel,
                    device}, this.IMachine_attachHardDiskOperationCompleted, userState);
        }

        private void OnIMachine_attachHardDiskOperationCompleted(object arg)
        {
            if ((this.IMachine_attachHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_attachHardDiskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] StorageBus bus, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int channel, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int device)
        {
            object[] results = this.Invoke("IMachine_getHardDisk", new object[] {
                    _this,
                    bus,
                    channel,
                    device});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getHardDisk(string _this, StorageBus bus, int channel, int device, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getHardDisk", new object[] {
                    _this,
                    bus,
                    channel,
                    device}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getHardDisk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getHardDiskAsync(string _this, StorageBus bus, int channel, int device)
        {
            this.IMachine_getHardDiskAsync(_this, bus, channel, device, null);
        }

        /// <remarks/>
        public void IMachine_getHardDiskAsync(string _this, StorageBus bus, int channel, int device, object userState)
        {
            if ((this.IMachine_getHardDiskOperationCompleted == null))
            {
                this.IMachine_getHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getHardDiskOperationCompleted);
            }
            this.InvokeAsync("IMachine_getHardDisk", new object[] {
                    _this,
                    bus,
                    channel,
                    device}, this.IMachine_getHardDiskOperationCompleted, userState);
        }

        private void OnIMachine_getHardDiskOperationCompleted(object arg)
        {
            if ((this.IMachine_getHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getHardDiskCompleted(this, new IMachine_getHardDiskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_detachHardDisk([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] StorageBus bus, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int channel, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int device)
        {
            this.Invoke("IMachine_detachHardDisk", new object[] {
                    _this,
                    bus,
                    channel,
                    device});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_detachHardDisk(string _this, StorageBus bus, int channel, int device, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_detachHardDisk", new object[] {
                    _this,
                    bus,
                    channel,
                    device}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_detachHardDisk(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_detachHardDiskAsync(string _this, StorageBus bus, int channel, int device)
        {
            this.IMachine_detachHardDiskAsync(_this, bus, channel, device, null);
        }

        /// <remarks/>
        public void IMachine_detachHardDiskAsync(string _this, StorageBus bus, int channel, int device, object userState)
        {
            if ((this.IMachine_detachHardDiskOperationCompleted == null))
            {
                this.IMachine_detachHardDiskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_detachHardDiskOperationCompleted);
            }
            this.InvokeAsync("IMachine_detachHardDisk", new object[] {
                    _this,
                    bus,
                    channel,
                    device}, this.IMachine_detachHardDiskOperationCompleted, userState);
        }

        private void OnIMachine_detachHardDiskOperationCompleted(object arg)
        {
            if ((this.IMachine_detachHardDiskCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_detachHardDiskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getNetworkAdapter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint slot)
        {
            object[] results = this.Invoke("IMachine_getNetworkAdapter", new object[] {
                    _this,
                    slot});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getNetworkAdapter(string _this, uint slot, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getNetworkAdapter", new object[] {
                    _this,
                    slot}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getNetworkAdapter(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getNetworkAdapterAsync(string _this, uint slot)
        {
            this.IMachine_getNetworkAdapterAsync(_this, slot, null);
        }

        /// <remarks/>
        public void IMachine_getNetworkAdapterAsync(string _this, uint slot, object userState)
        {
            if ((this.IMachine_getNetworkAdapterOperationCompleted == null))
            {
                this.IMachine_getNetworkAdapterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getNetworkAdapterOperationCompleted);
            }
            this.InvokeAsync("IMachine_getNetworkAdapter", new object[] {
                    _this,
                    slot}, this.IMachine_getNetworkAdapterOperationCompleted, userState);
        }

        private void OnIMachine_getNetworkAdapterOperationCompleted(object arg)
        {
            if ((this.IMachine_getNetworkAdapterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getNetworkAdapterCompleted(this, new IMachine_getNetworkAdapterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getSerialPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint slot)
        {
            object[] results = this.Invoke("IMachine_getSerialPort", new object[] {
                    _this,
                    slot});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSerialPort(string _this, uint slot, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSerialPort", new object[] {
                    _this,
                    slot}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getSerialPort(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSerialPortAsync(string _this, uint slot)
        {
            this.IMachine_getSerialPortAsync(_this, slot, null);
        }

        /// <remarks/>
        public void IMachine_getSerialPortAsync(string _this, uint slot, object userState)
        {
            if ((this.IMachine_getSerialPortOperationCompleted == null))
            {
                this.IMachine_getSerialPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSerialPortOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSerialPort", new object[] {
                    _this,
                    slot}, this.IMachine_getSerialPortOperationCompleted, userState);
        }

        private void OnIMachine_getSerialPortOperationCompleted(object arg)
        {
            if ((this.IMachine_getSerialPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSerialPortCompleted(this, new IMachine_getSerialPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getParallelPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint slot)
        {
            object[] results = this.Invoke("IMachine_getParallelPort", new object[] {
                    _this,
                    slot});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getParallelPort(string _this, uint slot, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getParallelPort", new object[] {
                    _this,
                    slot}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getParallelPort(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getParallelPortAsync(string _this, uint slot)
        {
            this.IMachine_getParallelPortAsync(_this, slot, null);
        }

        /// <remarks/>
        public void IMachine_getParallelPortAsync(string _this, uint slot, object userState)
        {
            if ((this.IMachine_getParallelPortOperationCompleted == null))
            {
                this.IMachine_getParallelPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getParallelPortOperationCompleted);
            }
            this.InvokeAsync("IMachine_getParallelPort", new object[] {
                    _this,
                    slot}, this.IMachine_getParallelPortOperationCompleted, userState);
        }

        private void OnIMachine_getParallelPortOperationCompleted(object arg)
        {
            if ((this.IMachine_getParallelPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getParallelPortCompleted(this, new IMachine_getParallelPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("nextKey", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getNextExtraDataKey([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string key, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string nextValue)
        {
            object[] results = this.Invoke("IMachine_getNextExtraDataKey", new object[] {
                    _this,
                    key});
            nextValue = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getNextExtraDataKey(string _this, string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getNextExtraDataKey", new object[] {
                    _this,
                    key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getNextExtraDataKey(System.IAsyncResult asyncResult, out string nextValue)
        {
            object[] results = this.EndInvoke(asyncResult);
            nextValue = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getNextExtraDataKeyAsync(string _this, string key)
        {
            this.IMachine_getNextExtraDataKeyAsync(_this, key, null);
        }

        /// <remarks/>
        public void IMachine_getNextExtraDataKeyAsync(string _this, string key, object userState)
        {
            if ((this.IMachine_getNextExtraDataKeyOperationCompleted == null))
            {
                this.IMachine_getNextExtraDataKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getNextExtraDataKeyOperationCompleted);
            }
            this.InvokeAsync("IMachine_getNextExtraDataKey", new object[] {
                    _this,
                    key}, this.IMachine_getNextExtraDataKeyOperationCompleted, userState);
        }

        private void OnIMachine_getNextExtraDataKeyOperationCompleted(object arg)
        {
            if ((this.IMachine_getNextExtraDataKeyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getNextExtraDataKeyCompleted(this, new IMachine_getNextExtraDataKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getExtraData([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string key)
        {
            object[] results = this.Invoke("IMachine_getExtraData", new object[] {
                    _this,
                    key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getExtraData(string _this, string key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getExtraData", new object[] {
                    _this,
                    key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getExtraData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getExtraDataAsync(string _this, string key)
        {
            this.IMachine_getExtraDataAsync(_this, key, null);
        }

        /// <remarks/>
        public void IMachine_getExtraDataAsync(string _this, string key, object userState)
        {
            if ((this.IMachine_getExtraDataOperationCompleted == null))
            {
                this.IMachine_getExtraDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getExtraDataOperationCompleted);
            }
            this.InvokeAsync("IMachine_getExtraData", new object[] {
                    _this,
                    key}, this.IMachine_getExtraDataOperationCompleted, userState);
        }

        private void OnIMachine_getExtraDataOperationCompleted(object arg)
        {
            if ((this.IMachine_getExtraDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getExtraDataCompleted(this, new IMachine_getExtraDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setExtraData([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string key, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string value)
        {
            this.Invoke("IMachine_setExtraData", new object[] {
                    _this,
                    key,
                    value});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setExtraData(string _this, string key, string value, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setExtraData", new object[] {
                    _this,
                    key,
                    value}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setExtraData(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setExtraDataAsync(string _this, string key, string value)
        {
            this.IMachine_setExtraDataAsync(_this, key, value, null);
        }

        /// <remarks/>
        public void IMachine_setExtraDataAsync(string _this, string key, string value, object userState)
        {
            if ((this.IMachine_setExtraDataOperationCompleted == null))
            {
                this.IMachine_setExtraDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setExtraDataOperationCompleted);
            }
            this.InvokeAsync("IMachine_setExtraData", new object[] {
                    _this,
                    key,
                    value}, this.IMachine_setExtraDataOperationCompleted, userState);
        }

        private void OnIMachine_setExtraDataOperationCompleted(object arg)
        {
            if ((this.IMachine_setExtraDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setExtraDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_saveSettings([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IMachine_saveSettings", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_saveSettings(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_saveSettings", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_saveSettings(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_saveSettingsAsync(string _this)
        {
            this.IMachine_saveSettingsAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_saveSettingsAsync(string _this, object userState)
        {
            if ((this.IMachine_saveSettingsOperationCompleted == null))
            {
                this.IMachine_saveSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_saveSettingsOperationCompleted);
            }
            this.InvokeAsync("IMachine_saveSettings", new object[] {
                    _this}, this.IMachine_saveSettingsOperationCompleted, userState);
        }

        private void OnIMachine_saveSettingsOperationCompleted(object arg)
        {
            if ((this.IMachine_saveSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_saveSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_saveSettingsWithBackup([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_saveSettingsWithBackup", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_saveSettingsWithBackup(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_saveSettingsWithBackup", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_saveSettingsWithBackup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_saveSettingsWithBackupAsync(string _this)
        {
            this.IMachine_saveSettingsWithBackupAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_saveSettingsWithBackupAsync(string _this, object userState)
        {
            if ((this.IMachine_saveSettingsWithBackupOperationCompleted == null))
            {
                this.IMachine_saveSettingsWithBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_saveSettingsWithBackupOperationCompleted);
            }
            this.InvokeAsync("IMachine_saveSettingsWithBackup", new object[] {
                    _this}, this.IMachine_saveSettingsWithBackupOperationCompleted, userState);
        }

        private void OnIMachine_saveSettingsWithBackupOperationCompleted(object arg)
        {
            if ((this.IMachine_saveSettingsWithBackupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_saveSettingsWithBackupCompleted(this, new IMachine_saveSettingsWithBackupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_discardSettings([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IMachine_discardSettings", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_discardSettings(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_discardSettings", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_discardSettings(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_discardSettingsAsync(string _this)
        {
            this.IMachine_discardSettingsAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_discardSettingsAsync(string _this, object userState)
        {
            if ((this.IMachine_discardSettingsOperationCompleted == null))
            {
                this.IMachine_discardSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_discardSettingsOperationCompleted);
            }
            this.InvokeAsync("IMachine_discardSettings", new object[] {
                    _this}, this.IMachine_discardSettingsOperationCompleted, userState);
        }

        private void OnIMachine_discardSettingsOperationCompleted(object arg)
        {
            if ((this.IMachine_discardSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_discardSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_deleteSettings([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IMachine_deleteSettings", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_deleteSettings(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_deleteSettings", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_deleteSettings(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_deleteSettingsAsync(string _this)
        {
            this.IMachine_deleteSettingsAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_deleteSettingsAsync(string _this, object userState)
        {
            if ((this.IMachine_deleteSettingsOperationCompleted == null))
            {
                this.IMachine_deleteSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_deleteSettingsOperationCompleted);
            }
            this.InvokeAsync("IMachine_deleteSettings", new object[] {
                    _this}, this.IMachine_deleteSettingsOperationCompleted, userState);
        }

        private void OnIMachine_deleteSettingsOperationCompleted(object arg)
        {
            if ((this.IMachine_deleteSettingsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_deleteSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getSnapshot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IMachine_getSnapshot", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getSnapshot(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getSnapshot", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getSnapshot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getSnapshotAsync(string _this, string id)
        {
            this.IMachine_getSnapshotAsync(_this, id, null);
        }

        /// <remarks/>
        public void IMachine_getSnapshotAsync(string _this, string id, object userState)
        {
            if ((this.IMachine_getSnapshotOperationCompleted == null))
            {
                this.IMachine_getSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getSnapshotOperationCompleted);
            }
            this.InvokeAsync("IMachine_getSnapshot", new object[] {
                    _this,
                    id}, this.IMachine_getSnapshotOperationCompleted, userState);
        }

        private void OnIMachine_getSnapshotOperationCompleted(object arg)
        {
            if ((this.IMachine_getSnapshotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getSnapshotCompleted(this, new IMachine_getSnapshotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_findSnapshot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            object[] results = this.Invoke("IMachine_findSnapshot", new object[] {
                    _this,
                    name});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_findSnapshot(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_findSnapshot", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_findSnapshot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_findSnapshotAsync(string _this, string name)
        {
            this.IMachine_findSnapshotAsync(_this, name, null);
        }

        /// <remarks/>
        public void IMachine_findSnapshotAsync(string _this, string name, object userState)
        {
            if ((this.IMachine_findSnapshotOperationCompleted == null))
            {
                this.IMachine_findSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_findSnapshotOperationCompleted);
            }
            this.InvokeAsync("IMachine_findSnapshot", new object[] {
                    _this,
                    name}, this.IMachine_findSnapshotOperationCompleted, userState);
        }

        private void OnIMachine_findSnapshotOperationCompleted(object arg)
        {
            if ((this.IMachine_findSnapshotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_findSnapshotCompleted(this, new IMachine_findSnapshotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setCurrentSnapshot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            this.Invoke("IMachine_setCurrentSnapshot", new object[] {
                    _this,
                    id});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setCurrentSnapshot(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setCurrentSnapshot", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setCurrentSnapshot(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setCurrentSnapshotAsync(string _this, string id)
        {
            this.IMachine_setCurrentSnapshotAsync(_this, id, null);
        }

        /// <remarks/>
        public void IMachine_setCurrentSnapshotAsync(string _this, string id, object userState)
        {
            if ((this.IMachine_setCurrentSnapshotOperationCompleted == null))
            {
                this.IMachine_setCurrentSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setCurrentSnapshotOperationCompleted);
            }
            this.InvokeAsync("IMachine_setCurrentSnapshot", new object[] {
                    _this,
                    id}, this.IMachine_setCurrentSnapshotOperationCompleted, userState);
        }

        private void OnIMachine_setCurrentSnapshotOperationCompleted(object arg)
        {
            if ((this.IMachine_setCurrentSnapshotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setCurrentSnapshotCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_createSharedFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostPath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool writable)
        {
            this.Invoke("IMachine_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_createSharedFolder(string _this, string name, string hostPath, bool writable, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_createSharedFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_createSharedFolderAsync(string _this, string name, string hostPath, bool writable)
        {
            this.IMachine_createSharedFolderAsync(_this, name, hostPath, writable, null);
        }

        /// <remarks/>
        public void IMachine_createSharedFolderAsync(string _this, string name, string hostPath, bool writable, object userState)
        {
            if ((this.IMachine_createSharedFolderOperationCompleted == null))
            {
                this.IMachine_createSharedFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_createSharedFolderOperationCompleted);
            }
            this.InvokeAsync("IMachine_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable}, this.IMachine_createSharedFolderOperationCompleted, userState);
        }

        private void OnIMachine_createSharedFolderOperationCompleted(object arg)
        {
            if ((this.IMachine_createSharedFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_createSharedFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_removeSharedFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            this.Invoke("IMachine_removeSharedFolder", new object[] {
                    _this,
                    name});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_removeSharedFolder(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_removeSharedFolder", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_removeSharedFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_removeSharedFolderAsync(string _this, string name)
        {
            this.IMachine_removeSharedFolderAsync(_this, name, null);
        }

        /// <remarks/>
        public void IMachine_removeSharedFolderAsync(string _this, string name, object userState)
        {
            if ((this.IMachine_removeSharedFolderOperationCompleted == null))
            {
                this.IMachine_removeSharedFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_removeSharedFolderOperationCompleted);
            }
            this.InvokeAsync("IMachine_removeSharedFolder", new object[] {
                    _this,
                    name}, this.IMachine_removeSharedFolderOperationCompleted, userState);
        }

        private void OnIMachine_removeSharedFolderOperationCompleted(object arg)
        {
            if ((this.IMachine_removeSharedFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_removeSharedFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IMachine_canShowConsoleWindow([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_canShowConsoleWindow", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_canShowConsoleWindow(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_canShowConsoleWindow", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIMachine_canShowConsoleWindow(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IMachine_canShowConsoleWindowAsync(string _this)
        {
            this.IMachine_canShowConsoleWindowAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_canShowConsoleWindowAsync(string _this, object userState)
        {
            if ((this.IMachine_canShowConsoleWindowOperationCompleted == null))
            {
                this.IMachine_canShowConsoleWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_canShowConsoleWindowOperationCompleted);
            }
            this.InvokeAsync("IMachine_canShowConsoleWindow", new object[] {
                    _this}, this.IMachine_canShowConsoleWindowOperationCompleted, userState);
        }

        private void OnIMachine_canShowConsoleWindowOperationCompleted(object arg)
        {
            if ((this.IMachine_canShowConsoleWindowCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_canShowConsoleWindowCompleted(this, new IMachine_canShowConsoleWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong IMachine_showConsoleWindow([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMachine_showConsoleWindow", new object[] {
                    _this});
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_showConsoleWindow(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_showConsoleWindow", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ulong EndIMachine_showConsoleWindow(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public void IMachine_showConsoleWindowAsync(string _this)
        {
            this.IMachine_showConsoleWindowAsync(_this, null);
        }

        /// <remarks/>
        public void IMachine_showConsoleWindowAsync(string _this, object userState)
        {
            if ((this.IMachine_showConsoleWindowOperationCompleted == null))
            {
                this.IMachine_showConsoleWindowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_showConsoleWindowOperationCompleted);
            }
            this.InvokeAsync("IMachine_showConsoleWindow", new object[] {
                    _this}, this.IMachine_showConsoleWindowOperationCompleted, userState);
        }

        private void OnIMachine_showConsoleWindowOperationCompleted(object arg)
        {
            if ((this.IMachine_showConsoleWindowCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_showConsoleWindowCompleted(this, new IMachine_showConsoleWindowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("value", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getGuestProperty([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out ulong timestamp, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string flags)
        {
            object[] results = this.Invoke("IMachine_getGuestProperty", new object[] {
                    _this,
                    name});
            timestamp = ((ulong)(results[1]));
            flags = ((string)(results[2]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getGuestProperty(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getGuestProperty", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getGuestProperty(System.IAsyncResult asyncResult, out ulong timestamp, out string flags)
        {
            object[] results = this.EndInvoke(asyncResult);
            timestamp = ((ulong)(results[1]));
            flags = ((string)(results[2]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getGuestPropertyAsync(string _this, string name)
        {
            this.IMachine_getGuestPropertyAsync(_this, name, null);
        }

        /// <remarks/>
        public void IMachine_getGuestPropertyAsync(string _this, string name, object userState)
        {
            if ((this.IMachine_getGuestPropertyOperationCompleted == null))
            {
                this.IMachine_getGuestPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getGuestPropertyOperationCompleted);
            }
            this.InvokeAsync("IMachine_getGuestProperty", new object[] {
                    _this,
                    name}, this.IMachine_getGuestPropertyOperationCompleted, userState);
        }

        private void OnIMachine_getGuestPropertyOperationCompleted(object arg)
        {
            if ((this.IMachine_getGuestPropertyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getGuestPropertyCompleted(this, new IMachine_getGuestPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IMachine_getGuestPropertyValue([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string property)
        {
            object[] results = this.Invoke("IMachine_getGuestPropertyValue", new object[] {
                    _this,
                    property});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getGuestPropertyValue(string _this, string property, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getGuestPropertyValue", new object[] {
                    _this,
                    property}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIMachine_getGuestPropertyValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getGuestPropertyValueAsync(string _this, string property)
        {
            this.IMachine_getGuestPropertyValueAsync(_this, property, null);
        }

        /// <remarks/>
        public void IMachine_getGuestPropertyValueAsync(string _this, string property, object userState)
        {
            if ((this.IMachine_getGuestPropertyValueOperationCompleted == null))
            {
                this.IMachine_getGuestPropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getGuestPropertyValueOperationCompleted);
            }
            this.InvokeAsync("IMachine_getGuestPropertyValue", new object[] {
                    _this,
                    property}, this.IMachine_getGuestPropertyValueOperationCompleted, userState);
        }

        private void OnIMachine_getGuestPropertyValueOperationCompleted(object arg)
        {
            if ((this.IMachine_getGuestPropertyValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getGuestPropertyValueCompleted(this, new IMachine_getGuestPropertyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong IMachine_getGuestPropertyTimestamp([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string property)
        {
            object[] results = this.Invoke("IMachine_getGuestPropertyTimestamp", new object[] {
                    _this,
                    property});
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_getGuestPropertyTimestamp(string _this, string property, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_getGuestPropertyTimestamp", new object[] {
                    _this,
                    property}, callback, asyncState);
        }

        /// <remarks/>
        public ulong EndIMachine_getGuestPropertyTimestamp(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public void IMachine_getGuestPropertyTimestampAsync(string _this, string property)
        {
            this.IMachine_getGuestPropertyTimestampAsync(_this, property, null);
        }

        /// <remarks/>
        public void IMachine_getGuestPropertyTimestampAsync(string _this, string property, object userState)
        {
            if ((this.IMachine_getGuestPropertyTimestampOperationCompleted == null))
            {
                this.IMachine_getGuestPropertyTimestampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_getGuestPropertyTimestampOperationCompleted);
            }
            this.InvokeAsync("IMachine_getGuestPropertyTimestamp", new object[] {
                    _this,
                    property}, this.IMachine_getGuestPropertyTimestampOperationCompleted, userState);
        }

        private void OnIMachine_getGuestPropertyTimestampOperationCompleted(object arg)
        {
            if ((this.IMachine_getGuestPropertyTimestampCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_getGuestPropertyTimestampCompleted(this, new IMachine_getGuestPropertyTimestampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setGuestProperty([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string property, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string value, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string flags)
        {
            this.Invoke("IMachine_setGuestProperty", new object[] {
                    _this,
                    property,
                    value,
                    flags});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setGuestProperty(string _this, string property, string value, string flags, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setGuestProperty", new object[] {
                    _this,
                    property,
                    value,
                    flags}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setGuestProperty(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setGuestPropertyAsync(string _this, string property, string value, string flags)
        {
            this.IMachine_setGuestPropertyAsync(_this, property, value, flags, null);
        }

        /// <remarks/>
        public void IMachine_setGuestPropertyAsync(string _this, string property, string value, string flags, object userState)
        {
            if ((this.IMachine_setGuestPropertyOperationCompleted == null))
            {
                this.IMachine_setGuestPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setGuestPropertyOperationCompleted);
            }
            this.InvokeAsync("IMachine_setGuestProperty", new object[] {
                    _this,
                    property,
                    value,
                    flags}, this.IMachine_setGuestPropertyOperationCompleted, userState);
        }

        private void OnIMachine_setGuestPropertyOperationCompleted(object arg)
        {
            if ((this.IMachine_setGuestPropertyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setGuestPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMachine_setGuestPropertyValue([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string property, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string value)
        {
            this.Invoke("IMachine_setGuestPropertyValue", new object[] {
                    _this,
                    property,
                    value});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_setGuestPropertyValue(string _this, string property, string value, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_setGuestPropertyValue", new object[] {
                    _this,
                    property,
                    value}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMachine_setGuestPropertyValue(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMachine_setGuestPropertyValueAsync(string _this, string property, string value)
        {
            this.IMachine_setGuestPropertyValueAsync(_this, property, value, null);
        }

        /// <remarks/>
        public void IMachine_setGuestPropertyValueAsync(string _this, string property, string value, object userState)
        {
            if ((this.IMachine_setGuestPropertyValueOperationCompleted == null))
            {
                this.IMachine_setGuestPropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_setGuestPropertyValueOperationCompleted);
            }
            this.InvokeAsync("IMachine_setGuestPropertyValue", new object[] {
                    _this,
                    property,
                    value}, this.IMachine_setGuestPropertyValueOperationCompleted, userState);
        }

        private void OnIMachine_setGuestPropertyValueOperationCompleted(object arg)
        {
            if ((this.IMachine_setGuestPropertyValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_setGuestPropertyValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("name", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] IMachine_enumerateGuestProperties([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string patterns, [System.Xml.Serialization.XmlElementAttribute("value", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string[] value, [System.Xml.Serialization.XmlElementAttribute("timestamp", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out ulong[] timestamp, [System.Xml.Serialization.XmlElementAttribute("flags", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string[] flags)
        {
            object[] results = this.Invoke("IMachine_enumerateGuestProperties", new object[] {
                    _this,
                    patterns});
            value = ((string[])(results[1]));
            timestamp = ((ulong[])(results[2]));
            flags = ((string[])(results[3]));
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMachine_enumerateGuestProperties(string _this, string patterns, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMachine_enumerateGuestProperties", new object[] {
                    _this,
                    patterns}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIMachine_enumerateGuestProperties(System.IAsyncResult asyncResult, out string[] value, out ulong[] timestamp, out string[] flags)
        {
            object[] results = this.EndInvoke(asyncResult);
            value = ((string[])(results[1]));
            timestamp = ((ulong[])(results[2]));
            flags = ((string[])(results[3]));
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IMachine_enumerateGuestPropertiesAsync(string _this, string patterns)
        {
            this.IMachine_enumerateGuestPropertiesAsync(_this, patterns, null);
        }

        /// <remarks/>
        public void IMachine_enumerateGuestPropertiesAsync(string _this, string patterns, object userState)
        {
            if ((this.IMachine_enumerateGuestPropertiesOperationCompleted == null))
            {
                this.IMachine_enumerateGuestPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMachine_enumerateGuestPropertiesOperationCompleted);
            }
            this.InvokeAsync("IMachine_enumerateGuestProperties", new object[] {
                    _this,
                    patterns}, this.IMachine_enumerateGuestPropertiesOperationCompleted, userState);
        }

        private void OnIMachine_enumerateGuestPropertiesOperationCompleted(object arg)
        {
            if ((this.IMachine_enumerateGuestPropertiesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMachine_enumerateGuestPropertiesCompleted(this, new IMachine_enumerateGuestPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_getMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getMachine", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getMachine(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getMachine", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_getMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_getMachineAsync(string _this)
        {
            this.IConsole_getMachineAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getMachineAsync(string _this, object userState)
        {
            if ((this.IConsole_getMachineOperationCompleted == null))
            {
                this.IConsole_getMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getMachineOperationCompleted);
            }
            this.InvokeAsync("IConsole_getMachine", new object[] {
                    _this}, this.IConsole_getMachineOperationCompleted, userState);
        }

        private void OnIConsole_getMachineOperationCompleted(object arg)
        {
            if ((this.IConsole_getMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getMachineCompleted(this, new IConsole_getMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MachineState IConsole_getState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getState", new object[] {
                    _this});
            return ((MachineState)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public MachineState EndIConsole_getState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((MachineState)(results[0]));
        }

        /// <remarks/>
        public void IConsole_getStateAsync(string _this)
        {
            this.IConsole_getStateAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getStateAsync(string _this, object userState)
        {
            if ((this.IConsole_getStateOperationCompleted == null))
            {
                this.IConsole_getStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getStateOperationCompleted);
            }
            this.InvokeAsync("IConsole_getState", new object[] {
                    _this}, this.IConsole_getStateOperationCompleted, userState);
        }

        private void OnIConsole_getStateOperationCompleted(object arg)
        {
            if ((this.IConsole_getStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getStateCompleted(this, new IConsole_getStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_getKeyboard([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getKeyboard", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getKeyboard(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getKeyboard", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_getKeyboard(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_getKeyboardAsync(string _this)
        {
            this.IConsole_getKeyboardAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getKeyboardAsync(string _this, object userState)
        {
            if ((this.IConsole_getKeyboardOperationCompleted == null))
            {
                this.IConsole_getKeyboardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getKeyboardOperationCompleted);
            }
            this.InvokeAsync("IConsole_getKeyboard", new object[] {
                    _this}, this.IConsole_getKeyboardOperationCompleted, userState);
        }

        private void OnIConsole_getKeyboardOperationCompleted(object arg)
        {
            if ((this.IConsole_getKeyboardCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getKeyboardCompleted(this, new IConsole_getKeyboardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_getMouse([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getMouse", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getMouse(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getMouse", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_getMouse(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_getMouseAsync(string _this)
        {
            this.IConsole_getMouseAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getMouseAsync(string _this, object userState)
        {
            if ((this.IConsole_getMouseOperationCompleted == null))
            {
                this.IConsole_getMouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getMouseOperationCompleted);
            }
            this.InvokeAsync("IConsole_getMouse", new object[] {
                    _this}, this.IConsole_getMouseOperationCompleted, userState);
        }

        private void OnIConsole_getMouseOperationCompleted(object arg)
        {
            if ((this.IConsole_getMouseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getMouseCompleted(this, new IConsole_getMouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IConsole_getUSBDevices([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getUSBDevices", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getUSBDevices(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getUSBDevices", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIConsole_getUSBDevices(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IConsole_getUSBDevicesAsync(string _this)
        {
            this.IConsole_getUSBDevicesAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getUSBDevicesAsync(string _this, object userState)
        {
            if ((this.IConsole_getUSBDevicesOperationCompleted == null))
            {
                this.IConsole_getUSBDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getUSBDevicesOperationCompleted);
            }
            this.InvokeAsync("IConsole_getUSBDevices", new object[] {
                    _this}, this.IConsole_getUSBDevicesOperationCompleted, userState);
        }

        private void OnIConsole_getUSBDevicesOperationCompleted(object arg)
        {
            if ((this.IConsole_getUSBDevicesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getUSBDevicesCompleted(this, new IConsole_getUSBDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IConsole_getRemoteUSBDevices([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getRemoteUSBDevices", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getRemoteUSBDevices(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getRemoteUSBDevices", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIConsole_getRemoteUSBDevices(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IConsole_getRemoteUSBDevicesAsync(string _this)
        {
            this.IConsole_getRemoteUSBDevicesAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getRemoteUSBDevicesAsync(string _this, object userState)
        {
            if ((this.IConsole_getRemoteUSBDevicesOperationCompleted == null))
            {
                this.IConsole_getRemoteUSBDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getRemoteUSBDevicesOperationCompleted);
            }
            this.InvokeAsync("IConsole_getRemoteUSBDevices", new object[] {
                    _this}, this.IConsole_getRemoteUSBDevicesOperationCompleted, userState);
        }

        private void OnIConsole_getRemoteUSBDevicesOperationCompleted(object arg)
        {
            if ((this.IConsole_getRemoteUSBDevicesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getRemoteUSBDevicesCompleted(this, new IConsole_getRemoteUSBDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public ISharedFolder[] IConsole_getSharedFolders([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getSharedFolders", new object[] {
                    _this});
            return ((ISharedFolder[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getSharedFolders(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getSharedFolders", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ISharedFolder[] EndIConsole_getSharedFolders(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ISharedFolder[])(results[0]));
        }

        /// <remarks/>
        public void IConsole_getSharedFoldersAsync(string _this)
        {
            this.IConsole_getSharedFoldersAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getSharedFoldersAsync(string _this, object userState)
        {
            if ((this.IConsole_getSharedFoldersOperationCompleted == null))
            {
                this.IConsole_getSharedFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getSharedFoldersOperationCompleted);
            }
            this.InvokeAsync("IConsole_getSharedFolders", new object[] {
                    _this}, this.IConsole_getSharedFoldersOperationCompleted, userState);
        }

        private void OnIConsole_getSharedFoldersOperationCompleted(object arg)
        {
            if ((this.IConsole_getSharedFoldersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getSharedFoldersCompleted(this, new IConsole_getSharedFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IRemoteDisplayInfo IConsole_getRemoteDisplayInfo([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getRemoteDisplayInfo", new object[] {
                    _this});
            return ((IRemoteDisplayInfo)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getRemoteDisplayInfo(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getRemoteDisplayInfo", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public IRemoteDisplayInfo EndIConsole_getRemoteDisplayInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((IRemoteDisplayInfo)(results[0]));
        }

        /// <remarks/>
        public void IConsole_getRemoteDisplayInfoAsync(string _this)
        {
            this.IConsole_getRemoteDisplayInfoAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getRemoteDisplayInfoAsync(string _this, object userState)
        {
            if ((this.IConsole_getRemoteDisplayInfoOperationCompleted == null))
            {
                this.IConsole_getRemoteDisplayInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getRemoteDisplayInfoOperationCompleted);
            }
            this.InvokeAsync("IConsole_getRemoteDisplayInfo", new object[] {
                    _this}, this.IConsole_getRemoteDisplayInfoOperationCompleted, userState);
        }

        private void OnIConsole_getRemoteDisplayInfoOperationCompleted(object arg)
        {
            if ((this.IConsole_getRemoteDisplayInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getRemoteDisplayInfoCompleted(this, new IConsole_getRemoteDisplayInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_powerUp([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_powerUp", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_powerUp(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_powerUp", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_powerUp(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_powerUpAsync(string _this)
        {
            this.IConsole_powerUpAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_powerUpAsync(string _this, object userState)
        {
            if ((this.IConsole_powerUpOperationCompleted == null))
            {
                this.IConsole_powerUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_powerUpOperationCompleted);
            }
            this.InvokeAsync("IConsole_powerUp", new object[] {
                    _this}, this.IConsole_powerUpOperationCompleted, userState);
        }

        private void OnIConsole_powerUpOperationCompleted(object arg)
        {
            if ((this.IConsole_powerUpCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_powerUpCompleted(this, new IConsole_powerUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_powerDown([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IConsole_powerDown", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_powerDown(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_powerDown", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_powerDown(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_powerDownAsync(string _this)
        {
            this.IConsole_powerDownAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_powerDownAsync(string _this, object userState)
        {
            if ((this.IConsole_powerDownOperationCompleted == null))
            {
                this.IConsole_powerDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_powerDownOperationCompleted);
            }
            this.InvokeAsync("IConsole_powerDown", new object[] {
                    _this}, this.IConsole_powerDownOperationCompleted, userState);
        }

        private void OnIConsole_powerDownOperationCompleted(object arg)
        {
            if ((this.IConsole_powerDownCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_powerDownCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_reset([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IConsole_reset", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_reset(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_reset", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_reset(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_resetAsync(string _this)
        {
            this.IConsole_resetAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_resetAsync(string _this, object userState)
        {
            if ((this.IConsole_resetOperationCompleted == null))
            {
                this.IConsole_resetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_resetOperationCompleted);
            }
            this.InvokeAsync("IConsole_reset", new object[] {
                    _this}, this.IConsole_resetOperationCompleted, userState);
        }

        private void OnIConsole_resetOperationCompleted(object arg)
        {
            if ((this.IConsole_resetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_resetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_pause([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IConsole_pause", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_pause(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_pause", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_pause(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_pauseAsync(string _this)
        {
            this.IConsole_pauseAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_pauseAsync(string _this, object userState)
        {
            if ((this.IConsole_pauseOperationCompleted == null))
            {
                this.IConsole_pauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_pauseOperationCompleted);
            }
            this.InvokeAsync("IConsole_pause", new object[] {
                    _this}, this.IConsole_pauseOperationCompleted, userState);
        }

        private void OnIConsole_pauseOperationCompleted(object arg)
        {
            if ((this.IConsole_pauseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_pauseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_resume([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IConsole_resume", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_resume(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_resume", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_resume(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_resumeAsync(string _this)
        {
            this.IConsole_resumeAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_resumeAsync(string _this, object userState)
        {
            if ((this.IConsole_resumeOperationCompleted == null))
            {
                this.IConsole_resumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_resumeOperationCompleted);
            }
            this.InvokeAsync("IConsole_resume", new object[] {
                    _this}, this.IConsole_resumeOperationCompleted, userState);
        }

        private void OnIConsole_resumeOperationCompleted(object arg)
        {
            if ((this.IConsole_resumeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_resumeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_powerButton([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IConsole_powerButton", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_powerButton(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_powerButton", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_powerButton(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_powerButtonAsync(string _this)
        {
            this.IConsole_powerButtonAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_powerButtonAsync(string _this, object userState)
        {
            if ((this.IConsole_powerButtonOperationCompleted == null))
            {
                this.IConsole_powerButtonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_powerButtonOperationCompleted);
            }
            this.InvokeAsync("IConsole_powerButton", new object[] {
                    _this}, this.IConsole_powerButtonOperationCompleted, userState);
        }

        private void OnIConsole_powerButtonOperationCompleted(object arg)
        {
            if ((this.IConsole_powerButtonCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_powerButtonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_sleepButton([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IConsole_sleepButton", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_sleepButton(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_sleepButton", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_sleepButton(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_sleepButtonAsync(string _this)
        {
            this.IConsole_sleepButtonAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_sleepButtonAsync(string _this, object userState)
        {
            if ((this.IConsole_sleepButtonOperationCompleted == null))
            {
                this.IConsole_sleepButtonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_sleepButtonOperationCompleted);
            }
            this.InvokeAsync("IConsole_sleepButton", new object[] {
                    _this}, this.IConsole_sleepButtonOperationCompleted, userState);
        }

        private void OnIConsole_sleepButtonOperationCompleted(object arg)
        {
            if ((this.IConsole_sleepButtonCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_sleepButtonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IConsole_getPowerButtonHandled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_getPowerButtonHandled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getPowerButtonHandled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getPowerButtonHandled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIConsole_getPowerButtonHandled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IConsole_getPowerButtonHandledAsync(string _this)
        {
            this.IConsole_getPowerButtonHandledAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_getPowerButtonHandledAsync(string _this, object userState)
        {
            if ((this.IConsole_getPowerButtonHandledOperationCompleted == null))
            {
                this.IConsole_getPowerButtonHandledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getPowerButtonHandledOperationCompleted);
            }
            this.InvokeAsync("IConsole_getPowerButtonHandled", new object[] {
                    _this}, this.IConsole_getPowerButtonHandledOperationCompleted, userState);
        }

        private void OnIConsole_getPowerButtonHandledOperationCompleted(object arg)
        {
            if ((this.IConsole_getPowerButtonHandledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getPowerButtonHandledCompleted(this, new IConsole_getPowerButtonHandledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_saveState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_saveState", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_saveState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_saveState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_saveState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_saveStateAsync(string _this)
        {
            this.IConsole_saveStateAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_saveStateAsync(string _this, object userState)
        {
            if ((this.IConsole_saveStateOperationCompleted == null))
            {
                this.IConsole_saveStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_saveStateOperationCompleted);
            }
            this.InvokeAsync("IConsole_saveState", new object[] {
                    _this}, this.IConsole_saveStateOperationCompleted, userState);
        }

        private void OnIConsole_saveStateOperationCompleted(object arg)
        {
            if ((this.IConsole_saveStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_saveStateCompleted(this, new IConsole_saveStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_adoptSavedState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string savedStateFile)
        {
            this.Invoke("IConsole_adoptSavedState", new object[] {
                    _this,
                    savedStateFile});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_adoptSavedState(string _this, string savedStateFile, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_adoptSavedState", new object[] {
                    _this,
                    savedStateFile}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_adoptSavedState(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_adoptSavedStateAsync(string _this, string savedStateFile)
        {
            this.IConsole_adoptSavedStateAsync(_this, savedStateFile, null);
        }

        /// <remarks/>
        public void IConsole_adoptSavedStateAsync(string _this, string savedStateFile, object userState)
        {
            if ((this.IConsole_adoptSavedStateOperationCompleted == null))
            {
                this.IConsole_adoptSavedStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_adoptSavedStateOperationCompleted);
            }
            this.InvokeAsync("IConsole_adoptSavedState", new object[] {
                    _this,
                    savedStateFile}, this.IConsole_adoptSavedStateOperationCompleted, userState);
        }

        private void OnIConsole_adoptSavedStateOperationCompleted(object arg)
        {
            if ((this.IConsole_adoptSavedStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_adoptSavedStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_discardSavedState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IConsole_discardSavedState", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_discardSavedState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_discardSavedState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_discardSavedState(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_discardSavedStateAsync(string _this)
        {
            this.IConsole_discardSavedStateAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_discardSavedStateAsync(string _this, object userState)
        {
            if ((this.IConsole_discardSavedStateOperationCompleted == null))
            {
                this.IConsole_discardSavedStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_discardSavedStateOperationCompleted);
            }
            this.InvokeAsync("IConsole_discardSavedState", new object[] {
                    _this}, this.IConsole_discardSavedStateOperationCompleted, userState);
        }

        private void OnIConsole_discardSavedStateOperationCompleted(object arg)
        {
            if ((this.IConsole_discardSavedStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_discardSavedStateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DeviceActivity IConsole_getDeviceActivity([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] DeviceType type)
        {
            object[] results = this.Invoke("IConsole_getDeviceActivity", new object[] {
                    _this,
                    type});
            return ((DeviceActivity)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_getDeviceActivity(string _this, DeviceType type, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_getDeviceActivity", new object[] {
                    _this,
                    type}, callback, asyncState);
        }

        /// <remarks/>
        public DeviceActivity EndIConsole_getDeviceActivity(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DeviceActivity)(results[0]));
        }

        /// <remarks/>
        public void IConsole_getDeviceActivityAsync(string _this, DeviceType type)
        {
            this.IConsole_getDeviceActivityAsync(_this, type, null);
        }

        /// <remarks/>
        public void IConsole_getDeviceActivityAsync(string _this, DeviceType type, object userState)
        {
            if ((this.IConsole_getDeviceActivityOperationCompleted == null))
            {
                this.IConsole_getDeviceActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_getDeviceActivityOperationCompleted);
            }
            this.InvokeAsync("IConsole_getDeviceActivity", new object[] {
                    _this,
                    type}, this.IConsole_getDeviceActivityOperationCompleted, userState);
        }

        private void OnIConsole_getDeviceActivityOperationCompleted(object arg)
        {
            if ((this.IConsole_getDeviceActivityCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_getDeviceActivityCompleted(this, new IConsole_getDeviceActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_attachUSBDevice([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            this.Invoke("IConsole_attachUSBDevice", new object[] {
                    _this,
                    id});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_attachUSBDevice(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_attachUSBDevice", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_attachUSBDevice(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_attachUSBDeviceAsync(string _this, string id)
        {
            this.IConsole_attachUSBDeviceAsync(_this, id, null);
        }

        /// <remarks/>
        public void IConsole_attachUSBDeviceAsync(string _this, string id, object userState)
        {
            if ((this.IConsole_attachUSBDeviceOperationCompleted == null))
            {
                this.IConsole_attachUSBDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_attachUSBDeviceOperationCompleted);
            }
            this.InvokeAsync("IConsole_attachUSBDevice", new object[] {
                    _this,
                    id}, this.IConsole_attachUSBDeviceOperationCompleted, userState);
        }

        private void OnIConsole_attachUSBDeviceOperationCompleted(object arg)
        {
            if ((this.IConsole_attachUSBDeviceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_attachUSBDeviceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_detachUSBDevice([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IConsole_detachUSBDevice", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_detachUSBDevice(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_detachUSBDevice", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_detachUSBDevice(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_detachUSBDeviceAsync(string _this, string id)
        {
            this.IConsole_detachUSBDeviceAsync(_this, id, null);
        }

        /// <remarks/>
        public void IConsole_detachUSBDeviceAsync(string _this, string id, object userState)
        {
            if ((this.IConsole_detachUSBDeviceOperationCompleted == null))
            {
                this.IConsole_detachUSBDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_detachUSBDeviceOperationCompleted);
            }
            this.InvokeAsync("IConsole_detachUSBDevice", new object[] {
                    _this,
                    id}, this.IConsole_detachUSBDeviceOperationCompleted, userState);
        }

        private void OnIConsole_detachUSBDeviceOperationCompleted(object arg)
        {
            if ((this.IConsole_detachUSBDeviceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_detachUSBDeviceCompleted(this, new IConsole_detachUSBDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_createSharedFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostPath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool writable)
        {
            this.Invoke("IConsole_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_createSharedFolder(string _this, string name, string hostPath, bool writable, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_createSharedFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_createSharedFolderAsync(string _this, string name, string hostPath, bool writable)
        {
            this.IConsole_createSharedFolderAsync(_this, name, hostPath, writable, null);
        }

        /// <remarks/>
        public void IConsole_createSharedFolderAsync(string _this, string name, string hostPath, bool writable, object userState)
        {
            if ((this.IConsole_createSharedFolderOperationCompleted == null))
            {
                this.IConsole_createSharedFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_createSharedFolderOperationCompleted);
            }
            this.InvokeAsync("IConsole_createSharedFolder", new object[] {
                    _this,
                    name,
                    hostPath,
                    writable}, this.IConsole_createSharedFolderOperationCompleted, userState);
        }

        private void OnIConsole_createSharedFolderOperationCompleted(object arg)
        {
            if ((this.IConsole_createSharedFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_createSharedFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IConsole_removeSharedFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            this.Invoke("IConsole_removeSharedFolder", new object[] {
                    _this,
                    name});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_removeSharedFolder(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_removeSharedFolder", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIConsole_removeSharedFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IConsole_removeSharedFolderAsync(string _this, string name)
        {
            this.IConsole_removeSharedFolderAsync(_this, name, null);
        }

        /// <remarks/>
        public void IConsole_removeSharedFolderAsync(string _this, string name, object userState)
        {
            if ((this.IConsole_removeSharedFolderOperationCompleted == null))
            {
                this.IConsole_removeSharedFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_removeSharedFolderOperationCompleted);
            }
            this.InvokeAsync("IConsole_removeSharedFolder", new object[] {
                    _this,
                    name}, this.IConsole_removeSharedFolderOperationCompleted, userState);
        }

        private void OnIConsole_removeSharedFolderOperationCompleted(object arg)
        {
            if ((this.IConsole_removeSharedFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_removeSharedFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_takeSnapshot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string description)
        {
            object[] results = this.Invoke("IConsole_takeSnapshot", new object[] {
                    _this,
                    name,
                    description});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_takeSnapshot(string _this, string name, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_takeSnapshot", new object[] {
                    _this,
                    name,
                    description}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_takeSnapshot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_takeSnapshotAsync(string _this, string name, string description)
        {
            this.IConsole_takeSnapshotAsync(_this, name, description, null);
        }

        /// <remarks/>
        public void IConsole_takeSnapshotAsync(string _this, string name, string description, object userState)
        {
            if ((this.IConsole_takeSnapshotOperationCompleted == null))
            {
                this.IConsole_takeSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_takeSnapshotOperationCompleted);
            }
            this.InvokeAsync("IConsole_takeSnapshot", new object[] {
                    _this,
                    name,
                    description}, this.IConsole_takeSnapshotOperationCompleted, userState);
        }

        private void OnIConsole_takeSnapshotOperationCompleted(object arg)
        {
            if ((this.IConsole_takeSnapshotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_takeSnapshotCompleted(this, new IConsole_takeSnapshotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_discardSnapshot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string id)
        {
            object[] results = this.Invoke("IConsole_discardSnapshot", new object[] {
                    _this,
                    id});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_discardSnapshot(string _this, string id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_discardSnapshot", new object[] {
                    _this,
                    id}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_discardSnapshot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_discardSnapshotAsync(string _this, string id)
        {
            this.IConsole_discardSnapshotAsync(_this, id, null);
        }

        /// <remarks/>
        public void IConsole_discardSnapshotAsync(string _this, string id, object userState)
        {
            if ((this.IConsole_discardSnapshotOperationCompleted == null))
            {
                this.IConsole_discardSnapshotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_discardSnapshotOperationCompleted);
            }
            this.InvokeAsync("IConsole_discardSnapshot", new object[] {
                    _this,
                    id}, this.IConsole_discardSnapshotOperationCompleted, userState);
        }

        private void OnIConsole_discardSnapshotOperationCompleted(object arg)
        {
            if ((this.IConsole_discardSnapshotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_discardSnapshotCompleted(this, new IConsole_discardSnapshotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_discardCurrentState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_discardCurrentState", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_discardCurrentState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_discardCurrentState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_discardCurrentState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_discardCurrentStateAsync(string _this)
        {
            this.IConsole_discardCurrentStateAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_discardCurrentStateAsync(string _this, object userState)
        {
            if ((this.IConsole_discardCurrentStateOperationCompleted == null))
            {
                this.IConsole_discardCurrentStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_discardCurrentStateOperationCompleted);
            }
            this.InvokeAsync("IConsole_discardCurrentState", new object[] {
                    _this}, this.IConsole_discardCurrentStateOperationCompleted, userState);
        }

        private void OnIConsole_discardCurrentStateOperationCompleted(object arg)
        {
            if ((this.IConsole_discardCurrentStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_discardCurrentStateCompleted(this, new IConsole_discardCurrentStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IConsole_discardCurrentSnapshotAndState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IConsole_discardCurrentSnapshotAndState", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIConsole_discardCurrentSnapshotAndState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IConsole_discardCurrentSnapshotAndState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIConsole_discardCurrentSnapshotAndState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IConsole_discardCurrentSnapshotAndStateAsync(string _this)
        {
            this.IConsole_discardCurrentSnapshotAndStateAsync(_this, null);
        }

        /// <remarks/>
        public void IConsole_discardCurrentSnapshotAndStateAsync(string _this, object userState)
        {
            if ((this.IConsole_discardCurrentSnapshotAndStateOperationCompleted == null))
            {
                this.IConsole_discardCurrentSnapshotAndStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIConsole_discardCurrentSnapshotAndStateOperationCompleted);
            }
            this.InvokeAsync("IConsole_discardCurrentSnapshotAndState", new object[] {
                    _this}, this.IConsole_discardCurrentSnapshotAndStateOperationCompleted, userState);
        }

        private void OnIConsole_discardCurrentSnapshotAndStateOperationCompleted(object arg)
        {
            if ((this.IConsole_discardCurrentSnapshotAndStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IConsole_discardCurrentSnapshotAndStateCompleted(this, new IConsole_discardCurrentSnapshotAndStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostDVDDrive_getName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostDVDDrive_getName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostDVDDrive_getName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostDVDDrive_getName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostDVDDrive_getName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostDVDDrive_getNameAsync(string _this)
        {
            this.IHostDVDDrive_getNameAsync(_this, null);
        }

        /// <remarks/>
        public void IHostDVDDrive_getNameAsync(string _this, object userState)
        {
            if ((this.IHostDVDDrive_getNameOperationCompleted == null))
            {
                this.IHostDVDDrive_getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostDVDDrive_getNameOperationCompleted);
            }
            this.InvokeAsync("IHostDVDDrive_getName", new object[] {
                    _this}, this.IHostDVDDrive_getNameOperationCompleted, userState);
        }

        private void OnIHostDVDDrive_getNameOperationCompleted(object arg)
        {
            if ((this.IHostDVDDrive_getNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostDVDDrive_getNameCompleted(this, new IHostDVDDrive_getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostDVDDrive_getDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostDVDDrive_getDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostDVDDrive_getDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostDVDDrive_getDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostDVDDrive_getDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostDVDDrive_getDescriptionAsync(string _this)
        {
            this.IHostDVDDrive_getDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void IHostDVDDrive_getDescriptionAsync(string _this, object userState)
        {
            if ((this.IHostDVDDrive_getDescriptionOperationCompleted == null))
            {
                this.IHostDVDDrive_getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostDVDDrive_getDescriptionOperationCompleted);
            }
            this.InvokeAsync("IHostDVDDrive_getDescription", new object[] {
                    _this}, this.IHostDVDDrive_getDescriptionOperationCompleted, userState);
        }

        private void OnIHostDVDDrive_getDescriptionOperationCompleted(object arg)
        {
            if ((this.IHostDVDDrive_getDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostDVDDrive_getDescriptionCompleted(this, new IHostDVDDrive_getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostDVDDrive_getUdi([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostDVDDrive_getUdi", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostDVDDrive_getUdi(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostDVDDrive_getUdi", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostDVDDrive_getUdi(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostDVDDrive_getUdiAsync(string _this)
        {
            this.IHostDVDDrive_getUdiAsync(_this, null);
        }

        /// <remarks/>
        public void IHostDVDDrive_getUdiAsync(string _this, object userState)
        {
            if ((this.IHostDVDDrive_getUdiOperationCompleted == null))
            {
                this.IHostDVDDrive_getUdiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostDVDDrive_getUdiOperationCompleted);
            }
            this.InvokeAsync("IHostDVDDrive_getUdi", new object[] {
                    _this}, this.IHostDVDDrive_getUdiOperationCompleted, userState);
        }

        private void OnIHostDVDDrive_getUdiOperationCompleted(object arg)
        {
            if ((this.IHostDVDDrive_getUdiCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostDVDDrive_getUdiCompleted(this, new IHostDVDDrive_getUdiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostFloppyDrive_getName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostFloppyDrive_getName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostFloppyDrive_getName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostFloppyDrive_getName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostFloppyDrive_getName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostFloppyDrive_getNameAsync(string _this)
        {
            this.IHostFloppyDrive_getNameAsync(_this, null);
        }

        /// <remarks/>
        public void IHostFloppyDrive_getNameAsync(string _this, object userState)
        {
            if ((this.IHostFloppyDrive_getNameOperationCompleted == null))
            {
                this.IHostFloppyDrive_getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostFloppyDrive_getNameOperationCompleted);
            }
            this.InvokeAsync("IHostFloppyDrive_getName", new object[] {
                    _this}, this.IHostFloppyDrive_getNameOperationCompleted, userState);
        }

        private void OnIHostFloppyDrive_getNameOperationCompleted(object arg)
        {
            if ((this.IHostFloppyDrive_getNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostFloppyDrive_getNameCompleted(this, new IHostFloppyDrive_getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostFloppyDrive_getDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostFloppyDrive_getDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostFloppyDrive_getDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostFloppyDrive_getDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostFloppyDrive_getDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostFloppyDrive_getDescriptionAsync(string _this)
        {
            this.IHostFloppyDrive_getDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void IHostFloppyDrive_getDescriptionAsync(string _this, object userState)
        {
            if ((this.IHostFloppyDrive_getDescriptionOperationCompleted == null))
            {
                this.IHostFloppyDrive_getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostFloppyDrive_getDescriptionOperationCompleted);
            }
            this.InvokeAsync("IHostFloppyDrive_getDescription", new object[] {
                    _this}, this.IHostFloppyDrive_getDescriptionOperationCompleted, userState);
        }

        private void OnIHostFloppyDrive_getDescriptionOperationCompleted(object arg)
        {
            if ((this.IHostFloppyDrive_getDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostFloppyDrive_getDescriptionCompleted(this, new IHostFloppyDrive_getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostFloppyDrive_getUdi([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostFloppyDrive_getUdi", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostFloppyDrive_getUdi(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostFloppyDrive_getUdi", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostFloppyDrive_getUdi(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostFloppyDrive_getUdiAsync(string _this)
        {
            this.IHostFloppyDrive_getUdiAsync(_this, null);
        }

        /// <remarks/>
        public void IHostFloppyDrive_getUdiAsync(string _this, object userState)
        {
            if ((this.IHostFloppyDrive_getUdiOperationCompleted == null))
            {
                this.IHostFloppyDrive_getUdiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostFloppyDrive_getUdiOperationCompleted);
            }
            this.InvokeAsync("IHostFloppyDrive_getUdi", new object[] {
                    _this}, this.IHostFloppyDrive_getUdiOperationCompleted, userState);
        }

        private void OnIHostFloppyDrive_getUdiOperationCompleted(object arg)
        {
            if ((this.IHostFloppyDrive_getUdiCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostFloppyDrive_getUdiCompleted(this, new IHostFloppyDrive_getUdiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostNetworkInterface_getName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostNetworkInterface_getName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostNetworkInterface_getName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostNetworkInterface_getName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostNetworkInterface_getName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostNetworkInterface_getNameAsync(string _this)
        {
            this.IHostNetworkInterface_getNameAsync(_this, null);
        }

        /// <remarks/>
        public void IHostNetworkInterface_getNameAsync(string _this, object userState)
        {
            if ((this.IHostNetworkInterface_getNameOperationCompleted == null))
            {
                this.IHostNetworkInterface_getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostNetworkInterface_getNameOperationCompleted);
            }
            this.InvokeAsync("IHostNetworkInterface_getName", new object[] {
                    _this}, this.IHostNetworkInterface_getNameOperationCompleted, userState);
        }

        private void OnIHostNetworkInterface_getNameOperationCompleted(object arg)
        {
            if ((this.IHostNetworkInterface_getNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostNetworkInterface_getNameCompleted(this, new IHostNetworkInterface_getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHostNetworkInterface_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostNetworkInterface_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostNetworkInterface_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostNetworkInterface_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHostNetworkInterface_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHostNetworkInterface_getIdAsync(string _this)
        {
            this.IHostNetworkInterface_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void IHostNetworkInterface_getIdAsync(string _this, object userState)
        {
            if ((this.IHostNetworkInterface_getIdOperationCompleted == null))
            {
                this.IHostNetworkInterface_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostNetworkInterface_getIdOperationCompleted);
            }
            this.InvokeAsync("IHostNetworkInterface_getId", new object[] {
                    _this}, this.IHostNetworkInterface_getIdOperationCompleted, userState);
        }

        private void OnIHostNetworkInterface_getIdOperationCompleted(object arg)
        {
            if ((this.IHostNetworkInterface_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostNetworkInterface_getIdCompleted(this, new IHostNetworkInterface_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IHost_getDVDDrives([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getDVDDrives", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getDVDDrives(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getDVDDrives", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIHost_getDVDDrives(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IHost_getDVDDrivesAsync(string _this)
        {
            this.IHost_getDVDDrivesAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getDVDDrivesAsync(string _this, object userState)
        {
            if ((this.IHost_getDVDDrivesOperationCompleted == null))
            {
                this.IHost_getDVDDrivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getDVDDrivesOperationCompleted);
            }
            this.InvokeAsync("IHost_getDVDDrives", new object[] {
                    _this}, this.IHost_getDVDDrivesOperationCompleted, userState);
        }

        private void OnIHost_getDVDDrivesOperationCompleted(object arg)
        {
            if ((this.IHost_getDVDDrivesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getDVDDrivesCompleted(this, new IHost_getDVDDrivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IHost_getFloppyDrives([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getFloppyDrives", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getFloppyDrives(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getFloppyDrives", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIHost_getFloppyDrives(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IHost_getFloppyDrivesAsync(string _this)
        {
            this.IHost_getFloppyDrivesAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getFloppyDrivesAsync(string _this, object userState)
        {
            if ((this.IHost_getFloppyDrivesOperationCompleted == null))
            {
                this.IHost_getFloppyDrivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getFloppyDrivesOperationCompleted);
            }
            this.InvokeAsync("IHost_getFloppyDrives", new object[] {
                    _this}, this.IHost_getFloppyDrivesOperationCompleted, userState);
        }

        private void OnIHost_getFloppyDrivesOperationCompleted(object arg)
        {
            if ((this.IHost_getFloppyDrivesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getFloppyDrivesCompleted(this, new IHost_getFloppyDrivesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IHost_getUSBDevices([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getUSBDevices", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getUSBDevices(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getUSBDevices", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIHost_getUSBDevices(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IHost_getUSBDevicesAsync(string _this)
        {
            this.IHost_getUSBDevicesAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getUSBDevicesAsync(string _this, object userState)
        {
            if ((this.IHost_getUSBDevicesOperationCompleted == null))
            {
                this.IHost_getUSBDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getUSBDevicesOperationCompleted);
            }
            this.InvokeAsync("IHost_getUSBDevices", new object[] {
                    _this}, this.IHost_getUSBDevicesOperationCompleted, userState);
        }

        private void OnIHost_getUSBDevicesOperationCompleted(object arg)
        {
            if ((this.IHost_getUSBDevicesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getUSBDevicesCompleted(this, new IHost_getUSBDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IHost_getUSBDeviceFilters([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getUSBDeviceFilters", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getUSBDeviceFilters(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getUSBDeviceFilters", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIHost_getUSBDeviceFilters(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IHost_getUSBDeviceFiltersAsync(string _this)
        {
            this.IHost_getUSBDeviceFiltersAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getUSBDeviceFiltersAsync(string _this, object userState)
        {
            if ((this.IHost_getUSBDeviceFiltersOperationCompleted == null))
            {
                this.IHost_getUSBDeviceFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getUSBDeviceFiltersOperationCompleted);
            }
            this.InvokeAsync("IHost_getUSBDeviceFilters", new object[] {
                    _this}, this.IHost_getUSBDeviceFiltersOperationCompleted, userState);
        }

        private void OnIHost_getUSBDeviceFiltersOperationCompleted(object arg)
        {
            if ((this.IHost_getUSBDeviceFiltersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getUSBDeviceFiltersCompleted(this, new IHost_getUSBDeviceFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IHost_getNetworkInterfaces([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getNetworkInterfaces", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getNetworkInterfaces(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getNetworkInterfaces", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIHost_getNetworkInterfaces(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IHost_getNetworkInterfacesAsync(string _this)
        {
            this.IHost_getNetworkInterfacesAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getNetworkInterfacesAsync(string _this, object userState)
        {
            if ((this.IHost_getNetworkInterfacesOperationCompleted == null))
            {
                this.IHost_getNetworkInterfacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getNetworkInterfacesOperationCompleted);
            }
            this.InvokeAsync("IHost_getNetworkInterfaces", new object[] {
                    _this}, this.IHost_getNetworkInterfacesOperationCompleted, userState);
        }

        private void OnIHost_getNetworkInterfacesOperationCompleted(object arg)
        {
            if ((this.IHost_getNetworkInterfacesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getNetworkInterfacesCompleted(this, new IHost_getNetworkInterfacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IHost_getProcessorCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getProcessorCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getProcessorCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getProcessorCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIHost_getProcessorCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IHost_getProcessorCountAsync(string _this)
        {
            this.IHost_getProcessorCountAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getProcessorCountAsync(string _this, object userState)
        {
            if ((this.IHost_getProcessorCountOperationCompleted == null))
            {
                this.IHost_getProcessorCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getProcessorCountOperationCompleted);
            }
            this.InvokeAsync("IHost_getProcessorCount", new object[] {
                    _this}, this.IHost_getProcessorCountOperationCompleted, userState);
        }

        private void OnIHost_getProcessorCountOperationCompleted(object arg)
        {
            if ((this.IHost_getProcessorCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getProcessorCountCompleted(this, new IHost_getProcessorCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IHost_getProcessorOnlineCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getProcessorOnlineCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getProcessorOnlineCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getProcessorOnlineCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIHost_getProcessorOnlineCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IHost_getProcessorOnlineCountAsync(string _this)
        {
            this.IHost_getProcessorOnlineCountAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getProcessorOnlineCountAsync(string _this, object userState)
        {
            if ((this.IHost_getProcessorOnlineCountOperationCompleted == null))
            {
                this.IHost_getProcessorOnlineCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getProcessorOnlineCountOperationCompleted);
            }
            this.InvokeAsync("IHost_getProcessorOnlineCount", new object[] {
                    _this}, this.IHost_getProcessorOnlineCountOperationCompleted, userState);
        }

        private void OnIHost_getProcessorOnlineCountOperationCompleted(object arg)
        {
            if ((this.IHost_getProcessorOnlineCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getProcessorOnlineCountCompleted(this, new IHost_getProcessorOnlineCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IHost_getMemorySize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getMemorySize", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getMemorySize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getMemorySize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIHost_getMemorySize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IHost_getMemorySizeAsync(string _this)
        {
            this.IHost_getMemorySizeAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getMemorySizeAsync(string _this, object userState)
        {
            if ((this.IHost_getMemorySizeOperationCompleted == null))
            {
                this.IHost_getMemorySizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getMemorySizeOperationCompleted);
            }
            this.InvokeAsync("IHost_getMemorySize", new object[] {
                    _this}, this.IHost_getMemorySizeOperationCompleted, userState);
        }

        private void OnIHost_getMemorySizeOperationCompleted(object arg)
        {
            if ((this.IHost_getMemorySizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getMemorySizeCompleted(this, new IHost_getMemorySizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IHost_getMemoryAvailable([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getMemoryAvailable", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getMemoryAvailable(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getMemoryAvailable", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIHost_getMemoryAvailable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IHost_getMemoryAvailableAsync(string _this)
        {
            this.IHost_getMemoryAvailableAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getMemoryAvailableAsync(string _this, object userState)
        {
            if ((this.IHost_getMemoryAvailableOperationCompleted == null))
            {
                this.IHost_getMemoryAvailableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getMemoryAvailableOperationCompleted);
            }
            this.InvokeAsync("IHost_getMemoryAvailable", new object[] {
                    _this}, this.IHost_getMemoryAvailableOperationCompleted, userState);
        }

        private void OnIHost_getMemoryAvailableOperationCompleted(object arg)
        {
            if ((this.IHost_getMemoryAvailableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getMemoryAvailableCompleted(this, new IHost_getMemoryAvailableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHost_getOperatingSystem([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getOperatingSystem", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getOperatingSystem(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getOperatingSystem", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHost_getOperatingSystem(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHost_getOperatingSystemAsync(string _this)
        {
            this.IHost_getOperatingSystemAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getOperatingSystemAsync(string _this, object userState)
        {
            if ((this.IHost_getOperatingSystemOperationCompleted == null))
            {
                this.IHost_getOperatingSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getOperatingSystemOperationCompleted);
            }
            this.InvokeAsync("IHost_getOperatingSystem", new object[] {
                    _this}, this.IHost_getOperatingSystemOperationCompleted, userState);
        }

        private void OnIHost_getOperatingSystemOperationCompleted(object arg)
        {
            if ((this.IHost_getOperatingSystemCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getOperatingSystemCompleted(this, new IHost_getOperatingSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHost_getOSVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getOSVersion", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getOSVersion(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getOSVersion", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHost_getOSVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHost_getOSVersionAsync(string _this)
        {
            this.IHost_getOSVersionAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getOSVersionAsync(string _this, object userState)
        {
            if ((this.IHost_getOSVersionOperationCompleted == null))
            {
                this.IHost_getOSVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getOSVersionOperationCompleted);
            }
            this.InvokeAsync("IHost_getOSVersion", new object[] {
                    _this}, this.IHost_getOSVersionOperationCompleted, userState);
        }

        private void OnIHost_getOSVersionOperationCompleted(object arg)
        {
            if ((this.IHost_getOSVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getOSVersionCompleted(this, new IHost_getOSVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long IHost_getUTCTime([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHost_getUTCTime", new object[] {
                    _this});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getUTCTime(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getUTCTime", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public long EndIHost_getUTCTime(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void IHost_getUTCTimeAsync(string _this)
        {
            this.IHost_getUTCTimeAsync(_this, null);
        }

        /// <remarks/>
        public void IHost_getUTCTimeAsync(string _this, object userState)
        {
            if ((this.IHost_getUTCTimeOperationCompleted == null))
            {
                this.IHost_getUTCTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getUTCTimeOperationCompleted);
            }
            this.InvokeAsync("IHost_getUTCTime", new object[] {
                    _this}, this.IHost_getUTCTimeOperationCompleted, userState);
        }

        private void OnIHost_getUTCTimeOperationCompleted(object arg)
        {
            if ((this.IHost_getUTCTimeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getUTCTimeCompleted(this, new IHost_getUTCTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IHost_getProcessorSpeed([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint cpuId)
        {
            object[] results = this.Invoke("IHost_getProcessorSpeed", new object[] {
                    _this,
                    cpuId});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getProcessorSpeed(string _this, uint cpuId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getProcessorSpeed", new object[] {
                    _this,
                    cpuId}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIHost_getProcessorSpeed(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IHost_getProcessorSpeedAsync(string _this, uint cpuId)
        {
            this.IHost_getProcessorSpeedAsync(_this, cpuId, null);
        }

        /// <remarks/>
        public void IHost_getProcessorSpeedAsync(string _this, uint cpuId, object userState)
        {
            if ((this.IHost_getProcessorSpeedOperationCompleted == null))
            {
                this.IHost_getProcessorSpeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getProcessorSpeedOperationCompleted);
            }
            this.InvokeAsync("IHost_getProcessorSpeed", new object[] {
                    _this,
                    cpuId}, this.IHost_getProcessorSpeedOperationCompleted, userState);
        }

        private void OnIHost_getProcessorSpeedOperationCompleted(object arg)
        {
            if ((this.IHost_getProcessorSpeedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getProcessorSpeedCompleted(this, new IHost_getProcessorSpeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHost_getProcessorDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint cpuId)
        {
            object[] results = this.Invoke("IHost_getProcessorDescription", new object[] {
                    _this,
                    cpuId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_getProcessorDescription(string _this, uint cpuId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_getProcessorDescription", new object[] {
                    _this,
                    cpuId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHost_getProcessorDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHost_getProcessorDescriptionAsync(string _this, uint cpuId)
        {
            this.IHost_getProcessorDescriptionAsync(_this, cpuId, null);
        }

        /// <remarks/>
        public void IHost_getProcessorDescriptionAsync(string _this, uint cpuId, object userState)
        {
            if ((this.IHost_getProcessorDescriptionOperationCompleted == null))
            {
                this.IHost_getProcessorDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_getProcessorDescriptionOperationCompleted);
            }
            this.InvokeAsync("IHost_getProcessorDescription", new object[] {
                    _this,
                    cpuId}, this.IHost_getProcessorDescriptionOperationCompleted, userState);
        }

        private void OnIHost_getProcessorDescriptionOperationCompleted(object arg)
        {
            if ((this.IHost_getProcessorDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_getProcessorDescriptionCompleted(this, new IHost_getProcessorDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHost_createUSBDeviceFilter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            object[] results = this.Invoke("IHost_createUSBDeviceFilter", new object[] {
                    _this,
                    name});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_createUSBDeviceFilter(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_createUSBDeviceFilter", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHost_createUSBDeviceFilter(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHost_createUSBDeviceFilterAsync(string _this, string name)
        {
            this.IHost_createUSBDeviceFilterAsync(_this, name, null);
        }

        /// <remarks/>
        public void IHost_createUSBDeviceFilterAsync(string _this, string name, object userState)
        {
            if ((this.IHost_createUSBDeviceFilterOperationCompleted == null))
            {
                this.IHost_createUSBDeviceFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_createUSBDeviceFilterOperationCompleted);
            }
            this.InvokeAsync("IHost_createUSBDeviceFilter", new object[] {
                    _this,
                    name}, this.IHost_createUSBDeviceFilterOperationCompleted, userState);
        }

        private void OnIHost_createUSBDeviceFilterOperationCompleted(object arg)
        {
            if ((this.IHost_createUSBDeviceFilterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_createUSBDeviceFilterCompleted(this, new IHost_createUSBDeviceFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IHost_insertUSBDeviceFilter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint position, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filter)
        {
            this.Invoke("IHost_insertUSBDeviceFilter", new object[] {
                    _this,
                    position,
                    filter});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_insertUSBDeviceFilter(string _this, uint position, string filter, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_insertUSBDeviceFilter", new object[] {
                    _this,
                    position,
                    filter}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIHost_insertUSBDeviceFilter(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IHost_insertUSBDeviceFilterAsync(string _this, uint position, string filter)
        {
            this.IHost_insertUSBDeviceFilterAsync(_this, position, filter, null);
        }

        /// <remarks/>
        public void IHost_insertUSBDeviceFilterAsync(string _this, uint position, string filter, object userState)
        {
            if ((this.IHost_insertUSBDeviceFilterOperationCompleted == null))
            {
                this.IHost_insertUSBDeviceFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_insertUSBDeviceFilterOperationCompleted);
            }
            this.InvokeAsync("IHost_insertUSBDeviceFilter", new object[] {
                    _this,
                    position,
                    filter}, this.IHost_insertUSBDeviceFilterOperationCompleted, userState);
        }

        private void OnIHost_insertUSBDeviceFilterOperationCompleted(object arg)
        {
            if ((this.IHost_insertUSBDeviceFilterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_insertUSBDeviceFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHost_removeUSBDeviceFilter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint position)
        {
            object[] results = this.Invoke("IHost_removeUSBDeviceFilter", new object[] {
                    _this,
                    position});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHost_removeUSBDeviceFilter(string _this, uint position, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHost_removeUSBDeviceFilter", new object[] {
                    _this,
                    position}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHost_removeUSBDeviceFilter(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHost_removeUSBDeviceFilterAsync(string _this, uint position)
        {
            this.IHost_removeUSBDeviceFilterAsync(_this, position, null);
        }

        /// <remarks/>
        public void IHost_removeUSBDeviceFilterAsync(string _this, uint position, object userState)
        {
            if ((this.IHost_removeUSBDeviceFilterOperationCompleted == null))
            {
                this.IHost_removeUSBDeviceFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHost_removeUSBDeviceFilterOperationCompleted);
            }
            this.InvokeAsync("IHost_removeUSBDeviceFilter", new object[] {
                    _this,
                    position}, this.IHost_removeUSBDeviceFilterOperationCompleted, userState);
        }

        private void OnIHost_removeUSBDeviceFilterOperationCompleted(object arg)
        {
            if ((this.IHost_removeUSBDeviceFilterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHost_removeUSBDeviceFilterCompleted(this, new IHost_removeUSBDeviceFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getMinGuestRAM([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getMinGuestRAM", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getMinGuestRAM(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getMinGuestRAM", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getMinGuestRAM(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getMinGuestRAMAsync(string _this)
        {
            this.ISystemProperties_getMinGuestRAMAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getMinGuestRAMAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getMinGuestRAMOperationCompleted == null))
            {
                this.ISystemProperties_getMinGuestRAMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getMinGuestRAMOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getMinGuestRAM", new object[] {
                    _this}, this.ISystemProperties_getMinGuestRAMOperationCompleted, userState);
        }

        private void OnISystemProperties_getMinGuestRAMOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getMinGuestRAMCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getMinGuestRAMCompleted(this, new ISystemProperties_getMinGuestRAMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getMaxGuestRAM([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getMaxGuestRAM", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getMaxGuestRAM(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getMaxGuestRAM", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getMaxGuestRAM(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getMaxGuestRAMAsync(string _this)
        {
            this.ISystemProperties_getMaxGuestRAMAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getMaxGuestRAMAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getMaxGuestRAMOperationCompleted == null))
            {
                this.ISystemProperties_getMaxGuestRAMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getMaxGuestRAMOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getMaxGuestRAM", new object[] {
                    _this}, this.ISystemProperties_getMaxGuestRAMOperationCompleted, userState);
        }

        private void OnISystemProperties_getMaxGuestRAMOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getMaxGuestRAMCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getMaxGuestRAMCompleted(this, new ISystemProperties_getMaxGuestRAMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getMinGuestVRAM([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getMinGuestVRAM", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getMinGuestVRAM(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getMinGuestVRAM", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getMinGuestVRAM(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getMinGuestVRAMAsync(string _this)
        {
            this.ISystemProperties_getMinGuestVRAMAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getMinGuestVRAMAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getMinGuestVRAMOperationCompleted == null))
            {
                this.ISystemProperties_getMinGuestVRAMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getMinGuestVRAMOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getMinGuestVRAM", new object[] {
                    _this}, this.ISystemProperties_getMinGuestVRAMOperationCompleted, userState);
        }

        private void OnISystemProperties_getMinGuestVRAMOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getMinGuestVRAMCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getMinGuestVRAMCompleted(this, new ISystemProperties_getMinGuestVRAMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getMaxGuestVRAM([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getMaxGuestVRAM", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getMaxGuestVRAM(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getMaxGuestVRAM", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getMaxGuestVRAM(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getMaxGuestVRAMAsync(string _this)
        {
            this.ISystemProperties_getMaxGuestVRAMAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getMaxGuestVRAMAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getMaxGuestVRAMOperationCompleted == null))
            {
                this.ISystemProperties_getMaxGuestVRAMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getMaxGuestVRAMOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getMaxGuestVRAM", new object[] {
                    _this}, this.ISystemProperties_getMaxGuestVRAMOperationCompleted, userState);
        }

        private void OnISystemProperties_getMaxGuestVRAMOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getMaxGuestVRAMCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getMaxGuestVRAMCompleted(this, new ISystemProperties_getMaxGuestVRAMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong ISystemProperties_getMaxVDISize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getMaxVDISize", new object[] {
                    _this});
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getMaxVDISize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getMaxVDISize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ulong EndISystemProperties_getMaxVDISize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getMaxVDISizeAsync(string _this)
        {
            this.ISystemProperties_getMaxVDISizeAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getMaxVDISizeAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getMaxVDISizeOperationCompleted == null))
            {
                this.ISystemProperties_getMaxVDISizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getMaxVDISizeOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getMaxVDISize", new object[] {
                    _this}, this.ISystemProperties_getMaxVDISizeOperationCompleted, userState);
        }

        private void OnISystemProperties_getMaxVDISizeOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getMaxVDISizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getMaxVDISizeCompleted(this, new ISystemProperties_getMaxVDISizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getNetworkAdapterCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getNetworkAdapterCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getNetworkAdapterCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getNetworkAdapterCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getNetworkAdapterCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getNetworkAdapterCountAsync(string _this)
        {
            this.ISystemProperties_getNetworkAdapterCountAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getNetworkAdapterCountAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getNetworkAdapterCountOperationCompleted == null))
            {
                this.ISystemProperties_getNetworkAdapterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getNetworkAdapterCountOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getNetworkAdapterCount", new object[] {
                    _this}, this.ISystemProperties_getNetworkAdapterCountOperationCompleted, userState);
        }

        private void OnISystemProperties_getNetworkAdapterCountOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getNetworkAdapterCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getNetworkAdapterCountCompleted(this, new ISystemProperties_getNetworkAdapterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getSerialPortCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getSerialPortCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getSerialPortCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getSerialPortCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getSerialPortCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getSerialPortCountAsync(string _this)
        {
            this.ISystemProperties_getSerialPortCountAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getSerialPortCountAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getSerialPortCountOperationCompleted == null))
            {
                this.ISystemProperties_getSerialPortCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getSerialPortCountOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getSerialPortCount", new object[] {
                    _this}, this.ISystemProperties_getSerialPortCountOperationCompleted, userState);
        }

        private void OnISystemProperties_getSerialPortCountOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getSerialPortCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getSerialPortCountCompleted(this, new ISystemProperties_getSerialPortCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getParallelPortCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getParallelPortCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getParallelPortCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getParallelPortCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getParallelPortCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getParallelPortCountAsync(string _this)
        {
            this.ISystemProperties_getParallelPortCountAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getParallelPortCountAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getParallelPortCountOperationCompleted == null))
            {
                this.ISystemProperties_getParallelPortCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getParallelPortCountOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getParallelPortCount", new object[] {
                    _this}, this.ISystemProperties_getParallelPortCountOperationCompleted, userState);
        }

        private void OnISystemProperties_getParallelPortCountOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getParallelPortCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getParallelPortCountCompleted(this, new ISystemProperties_getParallelPortCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getMaxBootPosition([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getMaxBootPosition", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getMaxBootPosition(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getMaxBootPosition", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getMaxBootPosition(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getMaxBootPositionAsync(string _this)
        {
            this.ISystemProperties_getMaxBootPositionAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getMaxBootPositionAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getMaxBootPositionOperationCompleted == null))
            {
                this.ISystemProperties_getMaxBootPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getMaxBootPositionOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getMaxBootPosition", new object[] {
                    _this}, this.ISystemProperties_getMaxBootPositionOperationCompleted, userState);
        }

        private void OnISystemProperties_getMaxBootPositionOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getMaxBootPositionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getMaxBootPositionCompleted(this, new ISystemProperties_getMaxBootPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISystemProperties_getDefaultVDIFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getDefaultVDIFolder", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getDefaultVDIFolder(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getDefaultVDIFolder", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISystemProperties_getDefaultVDIFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getDefaultVDIFolderAsync(string _this)
        {
            this.ISystemProperties_getDefaultVDIFolderAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getDefaultVDIFolderAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getDefaultVDIFolderOperationCompleted == null))
            {
                this.ISystemProperties_getDefaultVDIFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getDefaultVDIFolderOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getDefaultVDIFolder", new object[] {
                    _this}, this.ISystemProperties_getDefaultVDIFolderOperationCompleted, userState);
        }

        private void OnISystemProperties_getDefaultVDIFolderOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getDefaultVDIFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getDefaultVDIFolderCompleted(this, new ISystemProperties_getDefaultVDIFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISystemProperties_setDefaultVDIFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string defaultVDIFolder)
        {
            this.Invoke("ISystemProperties_setDefaultVDIFolder", new object[] {
                    _this,
                    defaultVDIFolder});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_setDefaultVDIFolder(string _this, string defaultVDIFolder, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_setDefaultVDIFolder", new object[] {
                    _this,
                    defaultVDIFolder}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISystemProperties_setDefaultVDIFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISystemProperties_setDefaultVDIFolderAsync(string _this, string defaultVDIFolder)
        {
            this.ISystemProperties_setDefaultVDIFolderAsync(_this, defaultVDIFolder, null);
        }

        /// <remarks/>
        public void ISystemProperties_setDefaultVDIFolderAsync(string _this, string defaultVDIFolder, object userState)
        {
            if ((this.ISystemProperties_setDefaultVDIFolderOperationCompleted == null))
            {
                this.ISystemProperties_setDefaultVDIFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_setDefaultVDIFolderOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_setDefaultVDIFolder", new object[] {
                    _this,
                    defaultVDIFolder}, this.ISystemProperties_setDefaultVDIFolderOperationCompleted, userState);
        }

        private void OnISystemProperties_setDefaultVDIFolderOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_setDefaultVDIFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_setDefaultVDIFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISystemProperties_getDefaultMachineFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getDefaultMachineFolder", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getDefaultMachineFolder(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getDefaultMachineFolder", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISystemProperties_getDefaultMachineFolder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getDefaultMachineFolderAsync(string _this)
        {
            this.ISystemProperties_getDefaultMachineFolderAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getDefaultMachineFolderAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getDefaultMachineFolderOperationCompleted == null))
            {
                this.ISystemProperties_getDefaultMachineFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getDefaultMachineFolderOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getDefaultMachineFolder", new object[] {
                    _this}, this.ISystemProperties_getDefaultMachineFolderOperationCompleted, userState);
        }

        private void OnISystemProperties_getDefaultMachineFolderOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getDefaultMachineFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getDefaultMachineFolderCompleted(this, new ISystemProperties_getDefaultMachineFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISystemProperties_setDefaultMachineFolder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string defaultMachineFolder)
        {
            this.Invoke("ISystemProperties_setDefaultMachineFolder", new object[] {
                    _this,
                    defaultMachineFolder});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_setDefaultMachineFolder(string _this, string defaultMachineFolder, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_setDefaultMachineFolder", new object[] {
                    _this,
                    defaultMachineFolder}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISystemProperties_setDefaultMachineFolder(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISystemProperties_setDefaultMachineFolderAsync(string _this, string defaultMachineFolder)
        {
            this.ISystemProperties_setDefaultMachineFolderAsync(_this, defaultMachineFolder, null);
        }

        /// <remarks/>
        public void ISystemProperties_setDefaultMachineFolderAsync(string _this, string defaultMachineFolder, object userState)
        {
            if ((this.ISystemProperties_setDefaultMachineFolderOperationCompleted == null))
            {
                this.ISystemProperties_setDefaultMachineFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_setDefaultMachineFolderOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_setDefaultMachineFolder", new object[] {
                    _this,
                    defaultMachineFolder}, this.ISystemProperties_setDefaultMachineFolderOperationCompleted, userState);
        }

        private void OnISystemProperties_setDefaultMachineFolderOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_setDefaultMachineFolderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_setDefaultMachineFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISystemProperties_getRemoteDisplayAuthLibrary([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getRemoteDisplayAuthLibrary", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getRemoteDisplayAuthLibrary(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getRemoteDisplayAuthLibrary", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISystemProperties_getRemoteDisplayAuthLibrary(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getRemoteDisplayAuthLibraryAsync(string _this)
        {
            this.ISystemProperties_getRemoteDisplayAuthLibraryAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getRemoteDisplayAuthLibraryAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getRemoteDisplayAuthLibraryOperationCompleted == null))
            {
                this.ISystemProperties_getRemoteDisplayAuthLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getRemoteDisplayAuthLibraryOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getRemoteDisplayAuthLibrary", new object[] {
                    _this}, this.ISystemProperties_getRemoteDisplayAuthLibraryOperationCompleted, userState);
        }

        private void OnISystemProperties_getRemoteDisplayAuthLibraryOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getRemoteDisplayAuthLibraryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getRemoteDisplayAuthLibraryCompleted(this, new ISystemProperties_getRemoteDisplayAuthLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISystemProperties_setRemoteDisplayAuthLibrary([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string remoteDisplayAuthLibrary)
        {
            this.Invoke("ISystemProperties_setRemoteDisplayAuthLibrary", new object[] {
                    _this,
                    remoteDisplayAuthLibrary});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_setRemoteDisplayAuthLibrary(string _this, string remoteDisplayAuthLibrary, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_setRemoteDisplayAuthLibrary", new object[] {
                    _this,
                    remoteDisplayAuthLibrary}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISystemProperties_setRemoteDisplayAuthLibrary(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISystemProperties_setRemoteDisplayAuthLibraryAsync(string _this, string remoteDisplayAuthLibrary)
        {
            this.ISystemProperties_setRemoteDisplayAuthLibraryAsync(_this, remoteDisplayAuthLibrary, null);
        }

        /// <remarks/>
        public void ISystemProperties_setRemoteDisplayAuthLibraryAsync(string _this, string remoteDisplayAuthLibrary, object userState)
        {
            if ((this.ISystemProperties_setRemoteDisplayAuthLibraryOperationCompleted == null))
            {
                this.ISystemProperties_setRemoteDisplayAuthLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_setRemoteDisplayAuthLibraryOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_setRemoteDisplayAuthLibrary", new object[] {
                    _this,
                    remoteDisplayAuthLibrary}, this.ISystemProperties_setRemoteDisplayAuthLibraryOperationCompleted, userState);
        }

        private void OnISystemProperties_setRemoteDisplayAuthLibraryOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_setRemoteDisplayAuthLibraryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_setRemoteDisplayAuthLibraryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISystemProperties_getWebServiceAuthLibrary([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getWebServiceAuthLibrary", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getWebServiceAuthLibrary(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getWebServiceAuthLibrary", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISystemProperties_getWebServiceAuthLibrary(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getWebServiceAuthLibraryAsync(string _this)
        {
            this.ISystemProperties_getWebServiceAuthLibraryAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getWebServiceAuthLibraryAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getWebServiceAuthLibraryOperationCompleted == null))
            {
                this.ISystemProperties_getWebServiceAuthLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getWebServiceAuthLibraryOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getWebServiceAuthLibrary", new object[] {
                    _this}, this.ISystemProperties_getWebServiceAuthLibraryOperationCompleted, userState);
        }

        private void OnISystemProperties_getWebServiceAuthLibraryOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getWebServiceAuthLibraryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getWebServiceAuthLibraryCompleted(this, new ISystemProperties_getWebServiceAuthLibraryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISystemProperties_setWebServiceAuthLibrary([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string webServiceAuthLibrary)
        {
            this.Invoke("ISystemProperties_setWebServiceAuthLibrary", new object[] {
                    _this,
                    webServiceAuthLibrary});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_setWebServiceAuthLibrary(string _this, string webServiceAuthLibrary, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_setWebServiceAuthLibrary", new object[] {
                    _this,
                    webServiceAuthLibrary}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISystemProperties_setWebServiceAuthLibrary(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISystemProperties_setWebServiceAuthLibraryAsync(string _this, string webServiceAuthLibrary)
        {
            this.ISystemProperties_setWebServiceAuthLibraryAsync(_this, webServiceAuthLibrary, null);
        }

        /// <remarks/>
        public void ISystemProperties_setWebServiceAuthLibraryAsync(string _this, string webServiceAuthLibrary, object userState)
        {
            if ((this.ISystemProperties_setWebServiceAuthLibraryOperationCompleted == null))
            {
                this.ISystemProperties_setWebServiceAuthLibraryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_setWebServiceAuthLibraryOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_setWebServiceAuthLibrary", new object[] {
                    _this,
                    webServiceAuthLibrary}, this.ISystemProperties_setWebServiceAuthLibraryOperationCompleted, userState);
        }

        private void OnISystemProperties_setWebServiceAuthLibraryOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_setWebServiceAuthLibraryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_setWebServiceAuthLibraryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ISystemProperties_getHWVirtExEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getHWVirtExEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getHWVirtExEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getHWVirtExEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndISystemProperties_getHWVirtExEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getHWVirtExEnabledAsync(string _this)
        {
            this.ISystemProperties_getHWVirtExEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getHWVirtExEnabledAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getHWVirtExEnabledOperationCompleted == null))
            {
                this.ISystemProperties_getHWVirtExEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getHWVirtExEnabledOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getHWVirtExEnabled", new object[] {
                    _this}, this.ISystemProperties_getHWVirtExEnabledOperationCompleted, userState);
        }

        private void OnISystemProperties_getHWVirtExEnabledOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getHWVirtExEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getHWVirtExEnabledCompleted(this, new ISystemProperties_getHWVirtExEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISystemProperties_setHWVirtExEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool HWVirtExEnabled)
        {
            this.Invoke("ISystemProperties_setHWVirtExEnabled", new object[] {
                    _this,
                    HWVirtExEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_setHWVirtExEnabled(string _this, bool HWVirtExEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_setHWVirtExEnabled", new object[] {
                    _this,
                    HWVirtExEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISystemProperties_setHWVirtExEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISystemProperties_setHWVirtExEnabledAsync(string _this, bool HWVirtExEnabled)
        {
            this.ISystemProperties_setHWVirtExEnabledAsync(_this, HWVirtExEnabled, null);
        }

        /// <remarks/>
        public void ISystemProperties_setHWVirtExEnabledAsync(string _this, bool HWVirtExEnabled, object userState)
        {
            if ((this.ISystemProperties_setHWVirtExEnabledOperationCompleted == null))
            {
                this.ISystemProperties_setHWVirtExEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_setHWVirtExEnabledOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_setHWVirtExEnabled", new object[] {
                    _this,
                    HWVirtExEnabled}, this.ISystemProperties_setHWVirtExEnabledOperationCompleted, userState);
        }

        private void OnISystemProperties_setHWVirtExEnabledOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_setHWVirtExEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_setHWVirtExEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISystemProperties_getLogHistoryCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISystemProperties_getLogHistoryCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_getLogHistoryCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_getLogHistoryCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISystemProperties_getLogHistoryCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISystemProperties_getLogHistoryCountAsync(string _this)
        {
            this.ISystemProperties_getLogHistoryCountAsync(_this, null);
        }

        /// <remarks/>
        public void ISystemProperties_getLogHistoryCountAsync(string _this, object userState)
        {
            if ((this.ISystemProperties_getLogHistoryCountOperationCompleted == null))
            {
                this.ISystemProperties_getLogHistoryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_getLogHistoryCountOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_getLogHistoryCount", new object[] {
                    _this}, this.ISystemProperties_getLogHistoryCountOperationCompleted, userState);
        }

        private void OnISystemProperties_getLogHistoryCountOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_getLogHistoryCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_getLogHistoryCountCompleted(this, new ISystemProperties_getLogHistoryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISystemProperties_setLogHistoryCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint LogHistoryCount)
        {
            this.Invoke("ISystemProperties_setLogHistoryCount", new object[] {
                    _this,
                    LogHistoryCount});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISystemProperties_setLogHistoryCount(string _this, uint LogHistoryCount, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISystemProperties_setLogHistoryCount", new object[] {
                    _this,
                    LogHistoryCount}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISystemProperties_setLogHistoryCount(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISystemProperties_setLogHistoryCountAsync(string _this, uint LogHistoryCount)
        {
            this.ISystemProperties_setLogHistoryCountAsync(_this, LogHistoryCount, null);
        }

        /// <remarks/>
        public void ISystemProperties_setLogHistoryCountAsync(string _this, uint LogHistoryCount, object userState)
        {
            if ((this.ISystemProperties_setLogHistoryCountOperationCompleted == null))
            {
                this.ISystemProperties_setLogHistoryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISystemProperties_setLogHistoryCountOperationCompleted);
            }
            this.InvokeAsync("ISystemProperties_setLogHistoryCount", new object[] {
                    _this,
                    LogHistoryCount}, this.ISystemProperties_setLogHistoryCountOperationCompleted, userState);
        }

        private void OnISystemProperties_setLogHistoryCountOperationCompleted(object arg)
        {
            if ((this.ISystemProperties_setLogHistoryCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISystemProperties_setLogHistoryCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IProgress_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIProgress_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getIdAsync(string _this)
        {
            this.IProgress_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getIdAsync(string _this, object userState)
        {
            if ((this.IProgress_getIdOperationCompleted == null))
            {
                this.IProgress_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getIdOperationCompleted);
            }
            this.InvokeAsync("IProgress_getId", new object[] {
                    _this}, this.IProgress_getIdOperationCompleted, userState);
        }

        private void OnIProgress_getIdOperationCompleted(object arg)
        {
            if ((this.IProgress_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getIdCompleted(this, new IProgress_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IProgress_getDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIProgress_getDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getDescriptionAsync(string _this)
        {
            this.IProgress_getDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getDescriptionAsync(string _this, object userState)
        {
            if ((this.IProgress_getDescriptionOperationCompleted == null))
            {
                this.IProgress_getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getDescriptionOperationCompleted);
            }
            this.InvokeAsync("IProgress_getDescription", new object[] {
                    _this}, this.IProgress_getDescriptionOperationCompleted, userState);
        }

        private void OnIProgress_getDescriptionOperationCompleted(object arg)
        {
            if ((this.IProgress_getDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getDescriptionCompleted(this, new IProgress_getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IProgress_getCancelable([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getCancelable", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getCancelable(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getCancelable", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIProgress_getCancelable(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getCancelableAsync(string _this)
        {
            this.IProgress_getCancelableAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getCancelableAsync(string _this, object userState)
        {
            if ((this.IProgress_getCancelableOperationCompleted == null))
            {
                this.IProgress_getCancelableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getCancelableOperationCompleted);
            }
            this.InvokeAsync("IProgress_getCancelable", new object[] {
                    _this}, this.IProgress_getCancelableOperationCompleted, userState);
        }

        private void OnIProgress_getCancelableOperationCompleted(object arg)
        {
            if ((this.IProgress_getCancelableCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getCancelableCompleted(this, new IProgress_getCancelableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int IProgress_getPercent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getPercent", new object[] {
                    _this});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getPercent(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getPercent", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public int EndIProgress_getPercent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getPercentAsync(string _this)
        {
            this.IProgress_getPercentAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getPercentAsync(string _this, object userState)
        {
            if ((this.IProgress_getPercentOperationCompleted == null))
            {
                this.IProgress_getPercentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getPercentOperationCompleted);
            }
            this.InvokeAsync("IProgress_getPercent", new object[] {
                    _this}, this.IProgress_getPercentOperationCompleted, userState);
        }

        private void OnIProgress_getPercentOperationCompleted(object arg)
        {
            if ((this.IProgress_getPercentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getPercentCompleted(this, new IProgress_getPercentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IProgress_getCompleted([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getCompleted", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getCompleted(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getCompleted", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIProgress_getCompleted(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getCompletedAsync(string _this)
        {
            this.IProgress_getCompletedAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getCompletedAsync(string _this, object userState)
        {
            if ((this.IProgress_getCompletedOperationCompleted == null))
            {
                this.IProgress_getCompletedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getCompletedOperationCompleted);
            }
            this.InvokeAsync("IProgress_getCompleted", new object[] {
                    _this}, this.IProgress_getCompletedOperationCompleted, userState);
        }

        private void OnIProgress_getCompletedOperationCompleted(object arg)
        {
            if ((this.IProgress_getCompletedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getCompletedCompleted(this, new IProgress_getCompletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IProgress_getCanceled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getCanceled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getCanceled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getCanceled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIProgress_getCanceled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getCanceledAsync(string _this)
        {
            this.IProgress_getCanceledAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getCanceledAsync(string _this, object userState)
        {
            if ((this.IProgress_getCanceledOperationCompleted == null))
            {
                this.IProgress_getCanceledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getCanceledOperationCompleted);
            }
            this.InvokeAsync("IProgress_getCanceled", new object[] {
                    _this}, this.IProgress_getCanceledOperationCompleted, userState);
        }

        private void OnIProgress_getCanceledOperationCompleted(object arg)
        {
            if ((this.IProgress_getCanceledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getCanceledCompleted(this, new IProgress_getCanceledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IProgress_getResultCode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getResultCode", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getResultCode(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getResultCode", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIProgress_getResultCode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getResultCodeAsync(string _this)
        {
            this.IProgress_getResultCodeAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getResultCodeAsync(string _this, object userState)
        {
            if ((this.IProgress_getResultCodeOperationCompleted == null))
            {
                this.IProgress_getResultCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getResultCodeOperationCompleted);
            }
            this.InvokeAsync("IProgress_getResultCode", new object[] {
                    _this}, this.IProgress_getResultCodeOperationCompleted, userState);
        }

        private void OnIProgress_getResultCodeOperationCompleted(object arg)
        {
            if ((this.IProgress_getResultCodeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getResultCodeCompleted(this, new IProgress_getResultCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IProgress_getOperationCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getOperationCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getOperationCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getOperationCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIProgress_getOperationCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getOperationCountAsync(string _this)
        {
            this.IProgress_getOperationCountAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getOperationCountAsync(string _this, object userState)
        {
            if ((this.IProgress_getOperationCountOperationCompleted == null))
            {
                this.IProgress_getOperationCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getOperationCountOperationCompleted);
            }
            this.InvokeAsync("IProgress_getOperationCount", new object[] {
                    _this}, this.IProgress_getOperationCountOperationCompleted, userState);
        }

        private void OnIProgress_getOperationCountOperationCompleted(object arg)
        {
            if ((this.IProgress_getOperationCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getOperationCountCompleted(this, new IProgress_getOperationCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IProgress_getOperation([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getOperation", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getOperation(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getOperation", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIProgress_getOperation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getOperationAsync(string _this)
        {
            this.IProgress_getOperationAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getOperationAsync(string _this, object userState)
        {
            if ((this.IProgress_getOperationOperationCompleted == null))
            {
                this.IProgress_getOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getOperationOperationCompleted);
            }
            this.InvokeAsync("IProgress_getOperation", new object[] {
                    _this}, this.IProgress_getOperationOperationCompleted, userState);
        }

        private void OnIProgress_getOperationOperationCompleted(object arg)
        {
            if ((this.IProgress_getOperationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getOperationCompleted(this, new IProgress_getOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IProgress_getOperationDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getOperationDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getOperationDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getOperationDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIProgress_getOperationDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getOperationDescriptionAsync(string _this)
        {
            this.IProgress_getOperationDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getOperationDescriptionAsync(string _this, object userState)
        {
            if ((this.IProgress_getOperationDescriptionOperationCompleted == null))
            {
                this.IProgress_getOperationDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getOperationDescriptionOperationCompleted);
            }
            this.InvokeAsync("IProgress_getOperationDescription", new object[] {
                    _this}, this.IProgress_getOperationDescriptionOperationCompleted, userState);
        }

        private void OnIProgress_getOperationDescriptionOperationCompleted(object arg)
        {
            if ((this.IProgress_getOperationDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getOperationDescriptionCompleted(this, new IProgress_getOperationDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int IProgress_getOperationPercent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IProgress_getOperationPercent", new object[] {
                    _this});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_getOperationPercent(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_getOperationPercent", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public int EndIProgress_getOperationPercent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void IProgress_getOperationPercentAsync(string _this)
        {
            this.IProgress_getOperationPercentAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_getOperationPercentAsync(string _this, object userState)
        {
            if ((this.IProgress_getOperationPercentOperationCompleted == null))
            {
                this.IProgress_getOperationPercentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_getOperationPercentOperationCompleted);
            }
            this.InvokeAsync("IProgress_getOperationPercent", new object[] {
                    _this}, this.IProgress_getOperationPercentOperationCompleted, userState);
        }

        private void OnIProgress_getOperationPercentOperationCompleted(object arg)
        {
            if ((this.IProgress_getOperationPercentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_getOperationPercentCompleted(this, new IProgress_getOperationPercentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IProgress_waitForCompletion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int timeout)
        {
            this.Invoke("IProgress_waitForCompletion", new object[] {
                    _this,
                    timeout});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_waitForCompletion(string _this, int timeout, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_waitForCompletion", new object[] {
                    _this,
                    timeout}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIProgress_waitForCompletion(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IProgress_waitForCompletionAsync(string _this, int timeout)
        {
            this.IProgress_waitForCompletionAsync(_this, timeout, null);
        }

        /// <remarks/>
        public void IProgress_waitForCompletionAsync(string _this, int timeout, object userState)
        {
            if ((this.IProgress_waitForCompletionOperationCompleted == null))
            {
                this.IProgress_waitForCompletionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_waitForCompletionOperationCompleted);
            }
            this.InvokeAsync("IProgress_waitForCompletion", new object[] {
                    _this,
                    timeout}, this.IProgress_waitForCompletionOperationCompleted, userState);
        }

        private void OnIProgress_waitForCompletionOperationCompleted(object arg)
        {
            if ((this.IProgress_waitForCompletionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_waitForCompletionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IProgress_waitForOperationCompletion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint operation, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int timeout)
        {
            this.Invoke("IProgress_waitForOperationCompletion", new object[] {
                    _this,
                    operation,
                    timeout});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_waitForOperationCompletion(string _this, uint operation, int timeout, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_waitForOperationCompletion", new object[] {
                    _this,
                    operation,
                    timeout}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIProgress_waitForOperationCompletion(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IProgress_waitForOperationCompletionAsync(string _this, uint operation, int timeout)
        {
            this.IProgress_waitForOperationCompletionAsync(_this, operation, timeout, null);
        }

        /// <remarks/>
        public void IProgress_waitForOperationCompletionAsync(string _this, uint operation, int timeout, object userState)
        {
            if ((this.IProgress_waitForOperationCompletionOperationCompleted == null))
            {
                this.IProgress_waitForOperationCompletionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_waitForOperationCompletionOperationCompleted);
            }
            this.InvokeAsync("IProgress_waitForOperationCompletion", new object[] {
                    _this,
                    operation,
                    timeout}, this.IProgress_waitForOperationCompletionOperationCompleted, userState);
        }

        private void OnIProgress_waitForOperationCompletionOperationCompleted(object arg)
        {
            if ((this.IProgress_waitForOperationCompletionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_waitForOperationCompletionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IProgress_cancel([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IProgress_cancel", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIProgress_cancel(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IProgress_cancel", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIProgress_cancel(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IProgress_cancelAsync(string _this)
        {
            this.IProgress_cancelAsync(_this, null);
        }

        /// <remarks/>
        public void IProgress_cancelAsync(string _this, object userState)
        {
            if ((this.IProgress_cancelOperationCompleted == null))
            {
                this.IProgress_cancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIProgress_cancelOperationCompleted);
            }
            this.InvokeAsync("IProgress_cancel", new object[] {
                    _this}, this.IProgress_cancelOperationCompleted, userState);
        }

        private void OnIProgress_cancelOperationCompleted(object arg)
        {
            if ((this.IProgress_cancelCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IProgress_cancelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISnapshot_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISnapshot_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getIdAsync(string _this)
        {
            this.ISnapshot_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getIdAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getIdOperationCompleted == null))
            {
                this.ISnapshot_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getIdOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getId", new object[] {
                    _this}, this.ISnapshot_getIdOperationCompleted, userState);
        }

        private void OnISnapshot_getIdOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getIdCompleted(this, new ISnapshot_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISnapshot_getName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISnapshot_getName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getNameAsync(string _this)
        {
            this.ISnapshot_getNameAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getNameAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getNameOperationCompleted == null))
            {
                this.ISnapshot_getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getNameOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getName", new object[] {
                    _this}, this.ISnapshot_getNameOperationCompleted, userState);
        }

        private void OnISnapshot_getNameOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getNameCompleted(this, new ISnapshot_getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISnapshot_setName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            this.Invoke("ISnapshot_setName", new object[] {
                    _this,
                    name});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_setName(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_setName", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISnapshot_setName(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISnapshot_setNameAsync(string _this, string name)
        {
            this.ISnapshot_setNameAsync(_this, name, null);
        }

        /// <remarks/>
        public void ISnapshot_setNameAsync(string _this, string name, object userState)
        {
            if ((this.ISnapshot_setNameOperationCompleted == null))
            {
                this.ISnapshot_setNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_setNameOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_setName", new object[] {
                    _this,
                    name}, this.ISnapshot_setNameOperationCompleted, userState);
        }

        private void OnISnapshot_setNameOperationCompleted(object arg)
        {
            if ((this.ISnapshot_setNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_setNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISnapshot_getDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISnapshot_getDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getDescriptionAsync(string _this)
        {
            this.ISnapshot_getDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getDescriptionAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getDescriptionOperationCompleted == null))
            {
                this.ISnapshot_getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getDescriptionOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getDescription", new object[] {
                    _this}, this.ISnapshot_getDescriptionOperationCompleted, userState);
        }

        private void OnISnapshot_getDescriptionOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getDescriptionCompleted(this, new ISnapshot_getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISnapshot_setDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string description)
        {
            this.Invoke("ISnapshot_setDescription", new object[] {
                    _this,
                    description});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_setDescription(string _this, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_setDescription", new object[] {
                    _this,
                    description}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISnapshot_setDescription(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISnapshot_setDescriptionAsync(string _this, string description)
        {
            this.ISnapshot_setDescriptionAsync(_this, description, null);
        }

        /// <remarks/>
        public void ISnapshot_setDescriptionAsync(string _this, string description, object userState)
        {
            if ((this.ISnapshot_setDescriptionOperationCompleted == null))
            {
                this.ISnapshot_setDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_setDescriptionOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_setDescription", new object[] {
                    _this,
                    description}, this.ISnapshot_setDescriptionOperationCompleted, userState);
        }

        private void OnISnapshot_setDescriptionOperationCompleted(object arg)
        {
            if ((this.ISnapshot_setDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_setDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long ISnapshot_getTimeStamp([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getTimeStamp", new object[] {
                    _this});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getTimeStamp(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getTimeStamp", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public long EndISnapshot_getTimeStamp(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getTimeStampAsync(string _this)
        {
            this.ISnapshot_getTimeStampAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getTimeStampAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getTimeStampOperationCompleted == null))
            {
                this.ISnapshot_getTimeStampOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getTimeStampOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getTimeStamp", new object[] {
                    _this}, this.ISnapshot_getTimeStampOperationCompleted, userState);
        }

        private void OnISnapshot_getTimeStampOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getTimeStampCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getTimeStampCompleted(this, new ISnapshot_getTimeStampCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ISnapshot_getOnline([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getOnline", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getOnline(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getOnline", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndISnapshot_getOnline(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getOnlineAsync(string _this)
        {
            this.ISnapshot_getOnlineAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getOnlineAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getOnlineOperationCompleted == null))
            {
                this.ISnapshot_getOnlineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getOnlineOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getOnline", new object[] {
                    _this}, this.ISnapshot_getOnlineOperationCompleted, userState);
        }

        private void OnISnapshot_getOnlineOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getOnlineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getOnlineCompleted(this, new ISnapshot_getOnlineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISnapshot_getMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getMachine", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getMachine(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getMachine", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISnapshot_getMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getMachineAsync(string _this)
        {
            this.ISnapshot_getMachineAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getMachineAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getMachineOperationCompleted == null))
            {
                this.ISnapshot_getMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getMachineOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getMachine", new object[] {
                    _this}, this.ISnapshot_getMachineOperationCompleted, userState);
        }

        private void OnISnapshot_getMachineOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getMachineCompleted(this, new ISnapshot_getMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISnapshot_getParent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getParent", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getParent(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getParent", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISnapshot_getParent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getParentAsync(string _this)
        {
            this.ISnapshot_getParentAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getParentAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getParentOperationCompleted == null))
            {
                this.ISnapshot_getParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getParentOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getParent", new object[] {
                    _this}, this.ISnapshot_getParentOperationCompleted, userState);
        }

        private void OnISnapshot_getParentOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getParentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getParentCompleted(this, new ISnapshot_getParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] ISnapshot_getChildren([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISnapshot_getChildren", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISnapshot_getChildren(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISnapshot_getChildren", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndISnapshot_getChildren(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void ISnapshot_getChildrenAsync(string _this)
        {
            this.ISnapshot_getChildrenAsync(_this, null);
        }

        /// <remarks/>
        public void ISnapshot_getChildrenAsync(string _this, object userState)
        {
            if ((this.ISnapshot_getChildrenOperationCompleted == null))
            {
                this.ISnapshot_getChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISnapshot_getChildrenOperationCompleted);
            }
            this.InvokeAsync("ISnapshot_getChildren", new object[] {
                    _this}, this.ISnapshot_getChildrenOperationCompleted, userState);
        }

        private void OnISnapshot_getChildrenOperationCompleted(object arg)
        {
            if ((this.ISnapshot_getChildrenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISnapshot_getChildrenCompleted(this, new ISnapshot_getChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getIdAsync(string _this)
        {
            this.IHardDisk_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getIdAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getIdOperationCompleted == null))
            {
                this.IHardDisk_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getIdOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getId", new object[] {
                    _this}, this.IHardDisk_getIdOperationCompleted, userState);
        }

        private void OnIHardDisk_getIdOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getIdCompleted(this, new IHardDisk_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getDescriptionAsync(string _this)
        {
            this.IHardDisk_getDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getDescriptionAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getDescriptionOperationCompleted == null))
            {
                this.IHardDisk_getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getDescriptionOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getDescription", new object[] {
                    _this}, this.IHardDisk_getDescriptionOperationCompleted, userState);
        }

        private void OnIHardDisk_getDescriptionOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getDescriptionCompleted(this, new IHardDisk_getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IHardDisk_setDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string description)
        {
            this.Invoke("IHardDisk_setDescription", new object[] {
                    _this,
                    description});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_setDescription(string _this, string description, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_setDescription", new object[] {
                    _this,
                    description}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIHardDisk_setDescription(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IHardDisk_setDescriptionAsync(string _this, string description)
        {
            this.IHardDisk_setDescriptionAsync(_this, description, null);
        }

        /// <remarks/>
        public void IHardDisk_setDescriptionAsync(string _this, string description, object userState)
        {
            if ((this.IHardDisk_setDescriptionOperationCompleted == null))
            {
                this.IHardDisk_setDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_setDescriptionOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_setDescription", new object[] {
                    _this,
                    description}, this.IHardDisk_setDescriptionOperationCompleted, userState);
        }

        private void OnIHardDisk_setDescriptionOperationCompleted(object arg)
        {
            if ((this.IHardDisk_setDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_setDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public HardDiskStorageType IHardDisk_getStorageType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getStorageType", new object[] {
                    _this});
            return ((HardDiskStorageType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getStorageType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getStorageType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public HardDiskStorageType EndIHardDisk_getStorageType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((HardDiskStorageType)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getStorageTypeAsync(string _this)
        {
            this.IHardDisk_getStorageTypeAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getStorageTypeAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getStorageTypeOperationCompleted == null))
            {
                this.IHardDisk_getStorageTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getStorageTypeOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getStorageType", new object[] {
                    _this}, this.IHardDisk_getStorageTypeOperationCompleted, userState);
        }

        private void OnIHardDisk_getStorageTypeOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getStorageTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getStorageTypeCompleted(this, new IHardDisk_getStorageTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getLocation([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getLocation", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getLocation(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getLocation", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getLocation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getLocationAsync(string _this)
        {
            this.IHardDisk_getLocationAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getLocationAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getLocationOperationCompleted == null))
            {
                this.IHardDisk_getLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getLocationOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getLocation", new object[] {
                    _this}, this.IHardDisk_getLocationOperationCompleted, userState);
        }

        private void OnIHardDisk_getLocationOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getLocationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getLocationCompleted(this, new IHardDisk_getLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public HardDiskType IHardDisk_getType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getType", new object[] {
                    _this});
            return ((HardDiskType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public HardDiskType EndIHardDisk_getType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((HardDiskType)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getTypeAsync(string _this)
        {
            this.IHardDisk_getTypeAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getTypeAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getTypeOperationCompleted == null))
            {
                this.IHardDisk_getTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getTypeOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getType", new object[] {
                    _this}, this.IHardDisk_getTypeOperationCompleted, userState);
        }

        private void OnIHardDisk_getTypeOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getTypeCompleted(this, new IHardDisk_getTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IHardDisk_setType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] HardDiskType type)
        {
            this.Invoke("IHardDisk_setType", new object[] {
                    _this,
                    type});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_setType(string _this, HardDiskType type, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_setType", new object[] {
                    _this,
                    type}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIHardDisk_setType(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IHardDisk_setTypeAsync(string _this, HardDiskType type)
        {
            this.IHardDisk_setTypeAsync(_this, type, null);
        }

        /// <remarks/>
        public void IHardDisk_setTypeAsync(string _this, HardDiskType type, object userState)
        {
            if ((this.IHardDisk_setTypeOperationCompleted == null))
            {
                this.IHardDisk_setTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_setTypeOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_setType", new object[] {
                    _this,
                    type}, this.IHardDisk_setTypeOperationCompleted, userState);
        }

        private void OnIHardDisk_setTypeOperationCompleted(object arg)
        {
            if ((this.IHardDisk_setTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_setTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getParent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getParent", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getParent(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getParent", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getParent(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getParentAsync(string _this)
        {
            this.IHardDisk_getParentAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getParentAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getParentOperationCompleted == null))
            {
                this.IHardDisk_getParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getParentOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getParent", new object[] {
                    _this}, this.IHardDisk_getParentOperationCompleted, userState);
        }

        private void OnIHardDisk_getParentOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getParentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getParentCompleted(this, new IHardDisk_getParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IHardDisk_getChildren([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getChildren", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getChildren(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getChildren", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIHardDisk_getChildren(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getChildrenAsync(string _this)
        {
            this.IHardDisk_getChildrenAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getChildrenAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getChildrenOperationCompleted == null))
            {
                this.IHardDisk_getChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getChildrenOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getChildren", new object[] {
                    _this}, this.IHardDisk_getChildrenOperationCompleted, userState);
        }

        private void OnIHardDisk_getChildrenOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getChildrenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getChildrenCompleted(this, new IHardDisk_getChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getRoot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getRoot", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getRoot(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getRoot", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getRoot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getRootAsync(string _this)
        {
            this.IHardDisk_getRootAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getRootAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getRootOperationCompleted == null))
            {
                this.IHardDisk_getRootOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getRootOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getRoot", new object[] {
                    _this}, this.IHardDisk_getRootOperationCompleted, userState);
        }

        private void OnIHardDisk_getRootOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getRootCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getRootCompleted(this, new IHardDisk_getRootCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IHardDisk_getAccessible([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getAccessible", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getAccessible(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getAccessible", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIHardDisk_getAccessible(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getAccessibleAsync(string _this)
        {
            this.IHardDisk_getAccessibleAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getAccessibleAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getAccessibleOperationCompleted == null))
            {
                this.IHardDisk_getAccessibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getAccessibleOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getAccessible", new object[] {
                    _this}, this.IHardDisk_getAccessibleOperationCompleted, userState);
        }

        private void OnIHardDisk_getAccessibleOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getAccessibleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getAccessibleCompleted(this, new IHardDisk_getAccessibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IHardDisk_getAllAccessible([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getAllAccessible", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getAllAccessible(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getAllAccessible", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIHardDisk_getAllAccessible(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getAllAccessibleAsync(string _this)
        {
            this.IHardDisk_getAllAccessibleAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getAllAccessibleAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getAllAccessibleOperationCompleted == null))
            {
                this.IHardDisk_getAllAccessibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getAllAccessibleOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getAllAccessible", new object[] {
                    _this}, this.IHardDisk_getAllAccessibleOperationCompleted, userState);
        }

        private void OnIHardDisk_getAllAccessibleOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getAllAccessibleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getAllAccessibleCompleted(this, new IHardDisk_getAllAccessibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getLastAccessError([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getLastAccessError", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getLastAccessError(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getLastAccessError", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getLastAccessError(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getLastAccessErrorAsync(string _this)
        {
            this.IHardDisk_getLastAccessErrorAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getLastAccessErrorAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getLastAccessErrorOperationCompleted == null))
            {
                this.IHardDisk_getLastAccessErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getLastAccessErrorOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getLastAccessError", new object[] {
                    _this}, this.IHardDisk_getLastAccessErrorOperationCompleted, userState);
        }

        private void OnIHardDisk_getLastAccessErrorOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getLastAccessErrorCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getLastAccessErrorCompleted(this, new IHardDisk_getLastAccessErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong IHardDisk_getSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getSize", new object[] {
                    _this});
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getSize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getSize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ulong EndIHardDisk_getSize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getSizeAsync(string _this)
        {
            this.IHardDisk_getSizeAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getSizeAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getSizeOperationCompleted == null))
            {
                this.IHardDisk_getSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getSizeOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getSize", new object[] {
                    _this}, this.IHardDisk_getSizeOperationCompleted, userState);
        }

        private void OnIHardDisk_getSizeOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getSizeCompleted(this, new IHardDisk_getSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong IHardDisk_getActualSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getActualSize", new object[] {
                    _this});
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getActualSize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getActualSize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ulong EndIHardDisk_getActualSize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getActualSizeAsync(string _this)
        {
            this.IHardDisk_getActualSizeAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getActualSizeAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getActualSizeOperationCompleted == null))
            {
                this.IHardDisk_getActualSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getActualSizeOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getActualSize", new object[] {
                    _this}, this.IHardDisk_getActualSizeOperationCompleted, userState);
        }

        private void OnIHardDisk_getActualSizeOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getActualSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getActualSizeCompleted(this, new IHardDisk_getActualSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getMachineId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getMachineId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getMachineId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getMachineId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getMachineId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getMachineIdAsync(string _this)
        {
            this.IHardDisk_getMachineIdAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getMachineIdAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getMachineIdOperationCompleted == null))
            {
                this.IHardDisk_getMachineIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getMachineIdOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getMachineId", new object[] {
                    _this}, this.IHardDisk_getMachineIdOperationCompleted, userState);
        }

        private void OnIHardDisk_getMachineIdOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getMachineIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getMachineIdCompleted(this, new IHardDisk_getMachineIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_getSnapshotId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHardDisk_getSnapshotId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_getSnapshotId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_getSnapshotId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_getSnapshotId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_getSnapshotIdAsync(string _this)
        {
            this.IHardDisk_getSnapshotIdAsync(_this, null);
        }

        /// <remarks/>
        public void IHardDisk_getSnapshotIdAsync(string _this, object userState)
        {
            if ((this.IHardDisk_getSnapshotIdOperationCompleted == null))
            {
                this.IHardDisk_getSnapshotIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_getSnapshotIdOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_getSnapshotId", new object[] {
                    _this}, this.IHardDisk_getSnapshotIdOperationCompleted, userState);
        }

        private void OnIHardDisk_getSnapshotIdOperationCompleted(object arg)
        {
            if ((this.IHardDisk_getSnapshotIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_getSnapshotIdCompleted(this, new IHardDisk_getSnapshotIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("image", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IHardDisk_cloneToImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string returnval)
        {
            object[] results = this.Invoke("IHardDisk_cloneToImage", new object[] {
                    _this,
                    filePath});
            returnval = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHardDisk_cloneToImage(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHardDisk_cloneToImage", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIHardDisk_cloneToImage(System.IAsyncResult asyncResult, out string returnval)
        {
            object[] results = this.EndInvoke(asyncResult);
            returnval = ((string)(results[1]));
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IHardDisk_cloneToImageAsync(string _this, string filePath)
        {
            this.IHardDisk_cloneToImageAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IHardDisk_cloneToImageAsync(string _this, string filePath, object userState)
        {
            if ((this.IHardDisk_cloneToImageOperationCompleted == null))
            {
                this.IHardDisk_cloneToImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHardDisk_cloneToImageOperationCompleted);
            }
            this.InvokeAsync("IHardDisk_cloneToImage", new object[] {
                    _this,
                    filePath}, this.IHardDisk_cloneToImageOperationCompleted, userState);
        }

        private void OnIHardDisk_cloneToImageOperationCompleted(object arg)
        {
            if ((this.IHardDisk_cloneToImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHardDisk_cloneToImageCompleted(this, new IHardDisk_cloneToImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualDiskImage_getFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualDiskImage_getFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualDiskImage_getFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualDiskImage_getFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualDiskImage_getFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualDiskImage_getFilePathAsync(string _this)
        {
            this.IVirtualDiskImage_getFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualDiskImage_getFilePathAsync(string _this, object userState)
        {
            if ((this.IVirtualDiskImage_getFilePathOperationCompleted == null))
            {
                this.IVirtualDiskImage_getFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualDiskImage_getFilePathOperationCompleted);
            }
            this.InvokeAsync("IVirtualDiskImage_getFilePath", new object[] {
                    _this}, this.IVirtualDiskImage_getFilePathOperationCompleted, userState);
        }

        private void OnIVirtualDiskImage_getFilePathOperationCompleted(object arg)
        {
            if ((this.IVirtualDiskImage_getFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualDiskImage_getFilePathCompleted(this, new IVirtualDiskImage_getFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualDiskImage_setFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath)
        {
            this.Invoke("IVirtualDiskImage_setFilePath", new object[] {
                    _this,
                    filePath});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualDiskImage_setFilePath(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualDiskImage_setFilePath", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualDiskImage_setFilePath(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualDiskImage_setFilePathAsync(string _this, string filePath)
        {
            this.IVirtualDiskImage_setFilePathAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IVirtualDiskImage_setFilePathAsync(string _this, string filePath, object userState)
        {
            if ((this.IVirtualDiskImage_setFilePathOperationCompleted == null))
            {
                this.IVirtualDiskImage_setFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualDiskImage_setFilePathOperationCompleted);
            }
            this.InvokeAsync("IVirtualDiskImage_setFilePath", new object[] {
                    _this,
                    filePath}, this.IVirtualDiskImage_setFilePathOperationCompleted, userState);
        }

        private void OnIVirtualDiskImage_setFilePathOperationCompleted(object arg)
        {
            if ((this.IVirtualDiskImage_setFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualDiskImage_setFilePathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IVirtualDiskImage_getCreated([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVirtualDiskImage_getCreated", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualDiskImage_getCreated(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualDiskImage_getCreated", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIVirtualDiskImage_getCreated(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IVirtualDiskImage_getCreatedAsync(string _this)
        {
            this.IVirtualDiskImage_getCreatedAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualDiskImage_getCreatedAsync(string _this, object userState)
        {
            if ((this.IVirtualDiskImage_getCreatedOperationCompleted == null))
            {
                this.IVirtualDiskImage_getCreatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualDiskImage_getCreatedOperationCompleted);
            }
            this.InvokeAsync("IVirtualDiskImage_getCreated", new object[] {
                    _this}, this.IVirtualDiskImage_getCreatedOperationCompleted, userState);
        }

        private void OnIVirtualDiskImage_getCreatedOperationCompleted(object arg)
        {
            if ((this.IVirtualDiskImage_getCreatedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualDiskImage_getCreatedCompleted(this, new IVirtualDiskImage_getCreatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualDiskImage_createDynamicImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("IVirtualDiskImage_createDynamicImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualDiskImage_createDynamicImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualDiskImage_createDynamicImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualDiskImage_createDynamicImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualDiskImage_createDynamicImageAsync(string _this, ulong size)
        {
            this.IVirtualDiskImage_createDynamicImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void IVirtualDiskImage_createDynamicImageAsync(string _this, ulong size, object userState)
        {
            if ((this.IVirtualDiskImage_createDynamicImageOperationCompleted == null))
            {
                this.IVirtualDiskImage_createDynamicImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualDiskImage_createDynamicImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualDiskImage_createDynamicImage", new object[] {
                    _this,
                    size}, this.IVirtualDiskImage_createDynamicImageOperationCompleted, userState);
        }

        private void OnIVirtualDiskImage_createDynamicImageOperationCompleted(object arg)
        {
            if ((this.IVirtualDiskImage_createDynamicImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualDiskImage_createDynamicImageCompleted(this, new IVirtualDiskImage_createDynamicImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVirtualDiskImage_createFixedImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("IVirtualDiskImage_createFixedImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualDiskImage_createFixedImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualDiskImage_createFixedImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVirtualDiskImage_createFixedImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVirtualDiskImage_createFixedImageAsync(string _this, ulong size)
        {
            this.IVirtualDiskImage_createFixedImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void IVirtualDiskImage_createFixedImageAsync(string _this, ulong size, object userState)
        {
            if ((this.IVirtualDiskImage_createFixedImageOperationCompleted == null))
            {
                this.IVirtualDiskImage_createFixedImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualDiskImage_createFixedImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualDiskImage_createFixedImage", new object[] {
                    _this,
                    size}, this.IVirtualDiskImage_createFixedImageOperationCompleted, userState);
        }

        private void OnIVirtualDiskImage_createFixedImageOperationCompleted(object arg)
        {
            if ((this.IVirtualDiskImage_createFixedImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualDiskImage_createFixedImageCompleted(this, new IVirtualDiskImage_createFixedImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVirtualDiskImage_deleteImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IVirtualDiskImage_deleteImage", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVirtualDiskImage_deleteImage(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVirtualDiskImage_deleteImage", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVirtualDiskImage_deleteImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVirtualDiskImage_deleteImageAsync(string _this)
        {
            this.IVirtualDiskImage_deleteImageAsync(_this, null);
        }

        /// <remarks/>
        public void IVirtualDiskImage_deleteImageAsync(string _this, object userState)
        {
            if ((this.IVirtualDiskImage_deleteImageOperationCompleted == null))
            {
                this.IVirtualDiskImage_deleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVirtualDiskImage_deleteImageOperationCompleted);
            }
            this.InvokeAsync("IVirtualDiskImage_deleteImage", new object[] {
                    _this}, this.IVirtualDiskImage_deleteImageOperationCompleted, userState);
        }

        private void OnIVirtualDiskImage_deleteImageOperationCompleted(object arg)
        {
            if ((this.IVirtualDiskImage_deleteImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVirtualDiskImage_deleteImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IISCSIHardDisk_getServer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IISCSIHardDisk_getServer", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_getServer(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_getServer", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIISCSIHardDisk_getServer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IISCSIHardDisk_getServerAsync(string _this)
        {
            this.IISCSIHardDisk_getServerAsync(_this, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_getServerAsync(string _this, object userState)
        {
            if ((this.IISCSIHardDisk_getServerOperationCompleted == null))
            {
                this.IISCSIHardDisk_getServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_getServerOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_getServer", new object[] {
                    _this}, this.IISCSIHardDisk_getServerOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_getServerOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_getServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_getServerCompleted(this, new IISCSIHardDisk_getServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IISCSIHardDisk_setServer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string server)
        {
            this.Invoke("IISCSIHardDisk_setServer", new object[] {
                    _this,
                    server});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_setServer(string _this, string server, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_setServer", new object[] {
                    _this,
                    server}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIISCSIHardDisk_setServer(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setServerAsync(string _this, string server)
        {
            this.IISCSIHardDisk_setServerAsync(_this, server, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setServerAsync(string _this, string server, object userState)
        {
            if ((this.IISCSIHardDisk_setServerOperationCompleted == null))
            {
                this.IISCSIHardDisk_setServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_setServerOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_setServer", new object[] {
                    _this,
                    server}, this.IISCSIHardDisk_setServerOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_setServerOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_setServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_setServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IISCSIHardDisk_getPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IISCSIHardDisk_getPort", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_getPort(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_getPort", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIISCSIHardDisk_getPort(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IISCSIHardDisk_getPortAsync(string _this)
        {
            this.IISCSIHardDisk_getPortAsync(_this, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_getPortAsync(string _this, object userState)
        {
            if ((this.IISCSIHardDisk_getPortOperationCompleted == null))
            {
                this.IISCSIHardDisk_getPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_getPortOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_getPort", new object[] {
                    _this}, this.IISCSIHardDisk_getPortOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_getPortOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_getPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_getPortCompleted(this, new IISCSIHardDisk_getPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IISCSIHardDisk_setPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ushort port)
        {
            this.Invoke("IISCSIHardDisk_setPort", new object[] {
                    _this,
                    port});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_setPort(string _this, ushort port, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_setPort", new object[] {
                    _this,
                    port}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIISCSIHardDisk_setPort(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setPortAsync(string _this, ushort port)
        {
            this.IISCSIHardDisk_setPortAsync(_this, port, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setPortAsync(string _this, ushort port, object userState)
        {
            if ((this.IISCSIHardDisk_setPortOperationCompleted == null))
            {
                this.IISCSIHardDisk_setPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_setPortOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_setPort", new object[] {
                    _this,
                    port}, this.IISCSIHardDisk_setPortOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_setPortOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_setPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_setPortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IISCSIHardDisk_getTarget([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IISCSIHardDisk_getTarget", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_getTarget(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_getTarget", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIISCSIHardDisk_getTarget(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IISCSIHardDisk_getTargetAsync(string _this)
        {
            this.IISCSIHardDisk_getTargetAsync(_this, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_getTargetAsync(string _this, object userState)
        {
            if ((this.IISCSIHardDisk_getTargetOperationCompleted == null))
            {
                this.IISCSIHardDisk_getTargetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_getTargetOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_getTarget", new object[] {
                    _this}, this.IISCSIHardDisk_getTargetOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_getTargetOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_getTargetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_getTargetCompleted(this, new IISCSIHardDisk_getTargetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IISCSIHardDisk_setTarget([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string target)
        {
            this.Invoke("IISCSIHardDisk_setTarget", new object[] {
                    _this,
                    target});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_setTarget(string _this, string target, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_setTarget", new object[] {
                    _this,
                    target}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIISCSIHardDisk_setTarget(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setTargetAsync(string _this, string target)
        {
            this.IISCSIHardDisk_setTargetAsync(_this, target, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setTargetAsync(string _this, string target, object userState)
        {
            if ((this.IISCSIHardDisk_setTargetOperationCompleted == null))
            {
                this.IISCSIHardDisk_setTargetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_setTargetOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_setTarget", new object[] {
                    _this,
                    target}, this.IISCSIHardDisk_setTargetOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_setTargetOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_setTargetCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_setTargetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong IISCSIHardDisk_getLun([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IISCSIHardDisk_getLun", new object[] {
                    _this});
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_getLun(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_getLun", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ulong EndIISCSIHardDisk_getLun(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public void IISCSIHardDisk_getLunAsync(string _this)
        {
            this.IISCSIHardDisk_getLunAsync(_this, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_getLunAsync(string _this, object userState)
        {
            if ((this.IISCSIHardDisk_getLunOperationCompleted == null))
            {
                this.IISCSIHardDisk_getLunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_getLunOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_getLun", new object[] {
                    _this}, this.IISCSIHardDisk_getLunOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_getLunOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_getLunCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_getLunCompleted(this, new IISCSIHardDisk_getLunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IISCSIHardDisk_setLun([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong lun)
        {
            this.Invoke("IISCSIHardDisk_setLun", new object[] {
                    _this,
                    lun});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_setLun(string _this, ulong lun, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_setLun", new object[] {
                    _this,
                    lun}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIISCSIHardDisk_setLun(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setLunAsync(string _this, ulong lun)
        {
            this.IISCSIHardDisk_setLunAsync(_this, lun, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setLunAsync(string _this, ulong lun, object userState)
        {
            if ((this.IISCSIHardDisk_setLunOperationCompleted == null))
            {
                this.IISCSIHardDisk_setLunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_setLunOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_setLun", new object[] {
                    _this,
                    lun}, this.IISCSIHardDisk_setLunOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_setLunOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_setLunCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_setLunCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IISCSIHardDisk_getUserName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IISCSIHardDisk_getUserName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_getUserName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_getUserName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIISCSIHardDisk_getUserName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IISCSIHardDisk_getUserNameAsync(string _this)
        {
            this.IISCSIHardDisk_getUserNameAsync(_this, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_getUserNameAsync(string _this, object userState)
        {
            if ((this.IISCSIHardDisk_getUserNameOperationCompleted == null))
            {
                this.IISCSIHardDisk_getUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_getUserNameOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_getUserName", new object[] {
                    _this}, this.IISCSIHardDisk_getUserNameOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_getUserNameOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_getUserNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_getUserNameCompleted(this, new IISCSIHardDisk_getUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IISCSIHardDisk_setUserName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName)
        {
            this.Invoke("IISCSIHardDisk_setUserName", new object[] {
                    _this,
                    userName});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_setUserName(string _this, string userName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_setUserName", new object[] {
                    _this,
                    userName}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIISCSIHardDisk_setUserName(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setUserNameAsync(string _this, string userName)
        {
            this.IISCSIHardDisk_setUserNameAsync(_this, userName, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setUserNameAsync(string _this, string userName, object userState)
        {
            if ((this.IISCSIHardDisk_setUserNameOperationCompleted == null))
            {
                this.IISCSIHardDisk_setUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_setUserNameOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_setUserName", new object[] {
                    _this,
                    userName}, this.IISCSIHardDisk_setUserNameOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_setUserNameOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_setUserNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_setUserNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IISCSIHardDisk_getPassword([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IISCSIHardDisk_getPassword", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_getPassword(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_getPassword", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIISCSIHardDisk_getPassword(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IISCSIHardDisk_getPasswordAsync(string _this)
        {
            this.IISCSIHardDisk_getPasswordAsync(_this, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_getPasswordAsync(string _this, object userState)
        {
            if ((this.IISCSIHardDisk_getPasswordOperationCompleted == null))
            {
                this.IISCSIHardDisk_getPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_getPasswordOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_getPassword", new object[] {
                    _this}, this.IISCSIHardDisk_getPasswordOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_getPasswordOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_getPasswordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_getPasswordCompleted(this, new IISCSIHardDisk_getPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IISCSIHardDisk_setPassword([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string password)
        {
            this.Invoke("IISCSIHardDisk_setPassword", new object[] {
                    _this,
                    password});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIISCSIHardDisk_setPassword(string _this, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IISCSIHardDisk_setPassword", new object[] {
                    _this,
                    password}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIISCSIHardDisk_setPassword(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setPasswordAsync(string _this, string password)
        {
            this.IISCSIHardDisk_setPasswordAsync(_this, password, null);
        }

        /// <remarks/>
        public void IISCSIHardDisk_setPasswordAsync(string _this, string password, object userState)
        {
            if ((this.IISCSIHardDisk_setPasswordOperationCompleted == null))
            {
                this.IISCSIHardDisk_setPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIISCSIHardDisk_setPasswordOperationCompleted);
            }
            this.InvokeAsync("IISCSIHardDisk_setPassword", new object[] {
                    _this,
                    password}, this.IISCSIHardDisk_setPasswordOperationCompleted, userState);
        }

        private void OnIISCSIHardDisk_setPasswordOperationCompleted(object arg)
        {
            if ((this.IISCSIHardDisk_setPasswordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IISCSIHardDisk_setPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVMDKImage_getFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVMDKImage_getFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVMDKImage_getFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVMDKImage_getFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVMDKImage_getFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVMDKImage_getFilePathAsync(string _this)
        {
            this.IVMDKImage_getFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IVMDKImage_getFilePathAsync(string _this, object userState)
        {
            if ((this.IVMDKImage_getFilePathOperationCompleted == null))
            {
                this.IVMDKImage_getFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVMDKImage_getFilePathOperationCompleted);
            }
            this.InvokeAsync("IVMDKImage_getFilePath", new object[] {
                    _this}, this.IVMDKImage_getFilePathOperationCompleted, userState);
        }

        private void OnIVMDKImage_getFilePathOperationCompleted(object arg)
        {
            if ((this.IVMDKImage_getFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVMDKImage_getFilePathCompleted(this, new IVMDKImage_getFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVMDKImage_setFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath)
        {
            this.Invoke("IVMDKImage_setFilePath", new object[] {
                    _this,
                    filePath});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVMDKImage_setFilePath(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVMDKImage_setFilePath", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVMDKImage_setFilePath(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVMDKImage_setFilePathAsync(string _this, string filePath)
        {
            this.IVMDKImage_setFilePathAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IVMDKImage_setFilePathAsync(string _this, string filePath, object userState)
        {
            if ((this.IVMDKImage_setFilePathOperationCompleted == null))
            {
                this.IVMDKImage_setFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVMDKImage_setFilePathOperationCompleted);
            }
            this.InvokeAsync("IVMDKImage_setFilePath", new object[] {
                    _this,
                    filePath}, this.IVMDKImage_setFilePathOperationCompleted, userState);
        }

        private void OnIVMDKImage_setFilePathOperationCompleted(object arg)
        {
            if ((this.IVMDKImage_setFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVMDKImage_setFilePathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IVMDKImage_getCreated([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVMDKImage_getCreated", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVMDKImage_getCreated(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVMDKImage_getCreated", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIVMDKImage_getCreated(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IVMDKImage_getCreatedAsync(string _this)
        {
            this.IVMDKImage_getCreatedAsync(_this, null);
        }

        /// <remarks/>
        public void IVMDKImage_getCreatedAsync(string _this, object userState)
        {
            if ((this.IVMDKImage_getCreatedOperationCompleted == null))
            {
                this.IVMDKImage_getCreatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVMDKImage_getCreatedOperationCompleted);
            }
            this.InvokeAsync("IVMDKImage_getCreated", new object[] {
                    _this}, this.IVMDKImage_getCreatedOperationCompleted, userState);
        }

        private void OnIVMDKImage_getCreatedOperationCompleted(object arg)
        {
            if ((this.IVMDKImage_getCreatedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVMDKImage_getCreatedCompleted(this, new IVMDKImage_getCreatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVMDKImage_createDynamicImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("IVMDKImage_createDynamicImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVMDKImage_createDynamicImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVMDKImage_createDynamicImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVMDKImage_createDynamicImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVMDKImage_createDynamicImageAsync(string _this, ulong size)
        {
            this.IVMDKImage_createDynamicImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void IVMDKImage_createDynamicImageAsync(string _this, ulong size, object userState)
        {
            if ((this.IVMDKImage_createDynamicImageOperationCompleted == null))
            {
                this.IVMDKImage_createDynamicImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVMDKImage_createDynamicImageOperationCompleted);
            }
            this.InvokeAsync("IVMDKImage_createDynamicImage", new object[] {
                    _this,
                    size}, this.IVMDKImage_createDynamicImageOperationCompleted, userState);
        }

        private void OnIVMDKImage_createDynamicImageOperationCompleted(object arg)
        {
            if ((this.IVMDKImage_createDynamicImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVMDKImage_createDynamicImageCompleted(this, new IVMDKImage_createDynamicImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVMDKImage_createFixedImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("IVMDKImage_createFixedImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVMDKImage_createFixedImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVMDKImage_createFixedImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVMDKImage_createFixedImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVMDKImage_createFixedImageAsync(string _this, ulong size)
        {
            this.IVMDKImage_createFixedImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void IVMDKImage_createFixedImageAsync(string _this, ulong size, object userState)
        {
            if ((this.IVMDKImage_createFixedImageOperationCompleted == null))
            {
                this.IVMDKImage_createFixedImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVMDKImage_createFixedImageOperationCompleted);
            }
            this.InvokeAsync("IVMDKImage_createFixedImage", new object[] {
                    _this,
                    size}, this.IVMDKImage_createFixedImageOperationCompleted, userState);
        }

        private void OnIVMDKImage_createFixedImageOperationCompleted(object arg)
        {
            if ((this.IVMDKImage_createFixedImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVMDKImage_createFixedImageCompleted(this, new IVMDKImage_createFixedImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVMDKImage_deleteImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IVMDKImage_deleteImage", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVMDKImage_deleteImage(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVMDKImage_deleteImage", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVMDKImage_deleteImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVMDKImage_deleteImageAsync(string _this)
        {
            this.IVMDKImage_deleteImageAsync(_this, null);
        }

        /// <remarks/>
        public void IVMDKImage_deleteImageAsync(string _this, object userState)
        {
            if ((this.IVMDKImage_deleteImageOperationCompleted == null))
            {
                this.IVMDKImage_deleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVMDKImage_deleteImageOperationCompleted);
            }
            this.InvokeAsync("IVMDKImage_deleteImage", new object[] {
                    _this}, this.IVMDKImage_deleteImageOperationCompleted, userState);
        }

        private void OnIVMDKImage_deleteImageOperationCompleted(object arg)
        {
            if ((this.IVMDKImage_deleteImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVMDKImage_deleteImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ICustomHardDisk_getLocation([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ICustomHardDisk_getLocation", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginICustomHardDisk_getLocation(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ICustomHardDisk_getLocation", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndICustomHardDisk_getLocation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ICustomHardDisk_getLocationAsync(string _this)
        {
            this.ICustomHardDisk_getLocationAsync(_this, null);
        }

        /// <remarks/>
        public void ICustomHardDisk_getLocationAsync(string _this, object userState)
        {
            if ((this.ICustomHardDisk_getLocationOperationCompleted == null))
            {
                this.ICustomHardDisk_getLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnICustomHardDisk_getLocationOperationCompleted);
            }
            this.InvokeAsync("ICustomHardDisk_getLocation", new object[] {
                    _this}, this.ICustomHardDisk_getLocationOperationCompleted, userState);
        }

        private void OnICustomHardDisk_getLocationOperationCompleted(object arg)
        {
            if ((this.ICustomHardDisk_getLocationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ICustomHardDisk_getLocationCompleted(this, new ICustomHardDisk_getLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ICustomHardDisk_setLocation([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string location)
        {
            this.Invoke("ICustomHardDisk_setLocation", new object[] {
                    _this,
                    location});
        }

        /// <remarks/>
        public System.IAsyncResult BeginICustomHardDisk_setLocation(string _this, string location, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ICustomHardDisk_setLocation", new object[] {
                    _this,
                    location}, callback, asyncState);
        }

        /// <remarks/>
        public void EndICustomHardDisk_setLocation(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ICustomHardDisk_setLocationAsync(string _this, string location)
        {
            this.ICustomHardDisk_setLocationAsync(_this, location, null);
        }

        /// <remarks/>
        public void ICustomHardDisk_setLocationAsync(string _this, string location, object userState)
        {
            if ((this.ICustomHardDisk_setLocationOperationCompleted == null))
            {
                this.ICustomHardDisk_setLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnICustomHardDisk_setLocationOperationCompleted);
            }
            this.InvokeAsync("ICustomHardDisk_setLocation", new object[] {
                    _this,
                    location}, this.ICustomHardDisk_setLocationOperationCompleted, userState);
        }

        private void OnICustomHardDisk_setLocationOperationCompleted(object arg)
        {
            if ((this.ICustomHardDisk_setLocationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ICustomHardDisk_setLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ICustomHardDisk_getFormat([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ICustomHardDisk_getFormat", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginICustomHardDisk_getFormat(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ICustomHardDisk_getFormat", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndICustomHardDisk_getFormat(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ICustomHardDisk_getFormatAsync(string _this)
        {
            this.ICustomHardDisk_getFormatAsync(_this, null);
        }

        /// <remarks/>
        public void ICustomHardDisk_getFormatAsync(string _this, object userState)
        {
            if ((this.ICustomHardDisk_getFormatOperationCompleted == null))
            {
                this.ICustomHardDisk_getFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnICustomHardDisk_getFormatOperationCompleted);
            }
            this.InvokeAsync("ICustomHardDisk_getFormat", new object[] {
                    _this}, this.ICustomHardDisk_getFormatOperationCompleted, userState);
        }

        private void OnICustomHardDisk_getFormatOperationCompleted(object arg)
        {
            if ((this.ICustomHardDisk_getFormatCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ICustomHardDisk_getFormatCompleted(this, new ICustomHardDisk_getFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ICustomHardDisk_getCreated([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ICustomHardDisk_getCreated", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginICustomHardDisk_getCreated(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ICustomHardDisk_getCreated", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndICustomHardDisk_getCreated(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ICustomHardDisk_getCreatedAsync(string _this)
        {
            this.ICustomHardDisk_getCreatedAsync(_this, null);
        }

        /// <remarks/>
        public void ICustomHardDisk_getCreatedAsync(string _this, object userState)
        {
            if ((this.ICustomHardDisk_getCreatedOperationCompleted == null))
            {
                this.ICustomHardDisk_getCreatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnICustomHardDisk_getCreatedOperationCompleted);
            }
            this.InvokeAsync("ICustomHardDisk_getCreated", new object[] {
                    _this}, this.ICustomHardDisk_getCreatedOperationCompleted, userState);
        }

        private void OnICustomHardDisk_getCreatedOperationCompleted(object arg)
        {
            if ((this.ICustomHardDisk_getCreatedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ICustomHardDisk_getCreatedCompleted(this, new ICustomHardDisk_getCreatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ICustomHardDisk_createDynamicImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("ICustomHardDisk_createDynamicImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginICustomHardDisk_createDynamicImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ICustomHardDisk_createDynamicImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndICustomHardDisk_createDynamicImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ICustomHardDisk_createDynamicImageAsync(string _this, ulong size)
        {
            this.ICustomHardDisk_createDynamicImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void ICustomHardDisk_createDynamicImageAsync(string _this, ulong size, object userState)
        {
            if ((this.ICustomHardDisk_createDynamicImageOperationCompleted == null))
            {
                this.ICustomHardDisk_createDynamicImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnICustomHardDisk_createDynamicImageOperationCompleted);
            }
            this.InvokeAsync("ICustomHardDisk_createDynamicImage", new object[] {
                    _this,
                    size}, this.ICustomHardDisk_createDynamicImageOperationCompleted, userState);
        }

        private void OnICustomHardDisk_createDynamicImageOperationCompleted(object arg)
        {
            if ((this.ICustomHardDisk_createDynamicImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ICustomHardDisk_createDynamicImageCompleted(this, new ICustomHardDisk_createDynamicImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ICustomHardDisk_createFixedImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("ICustomHardDisk_createFixedImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginICustomHardDisk_createFixedImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ICustomHardDisk_createFixedImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndICustomHardDisk_createFixedImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ICustomHardDisk_createFixedImageAsync(string _this, ulong size)
        {
            this.ICustomHardDisk_createFixedImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void ICustomHardDisk_createFixedImageAsync(string _this, ulong size, object userState)
        {
            if ((this.ICustomHardDisk_createFixedImageOperationCompleted == null))
            {
                this.ICustomHardDisk_createFixedImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnICustomHardDisk_createFixedImageOperationCompleted);
            }
            this.InvokeAsync("ICustomHardDisk_createFixedImage", new object[] {
                    _this,
                    size}, this.ICustomHardDisk_createFixedImageOperationCompleted, userState);
        }

        private void OnICustomHardDisk_createFixedImageOperationCompleted(object arg)
        {
            if ((this.ICustomHardDisk_createFixedImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ICustomHardDisk_createFixedImageCompleted(this, new ICustomHardDisk_createFixedImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ICustomHardDisk_deleteImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("ICustomHardDisk_deleteImage", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginICustomHardDisk_deleteImage(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ICustomHardDisk_deleteImage", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndICustomHardDisk_deleteImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ICustomHardDisk_deleteImageAsync(string _this)
        {
            this.ICustomHardDisk_deleteImageAsync(_this, null);
        }

        /// <remarks/>
        public void ICustomHardDisk_deleteImageAsync(string _this, object userState)
        {
            if ((this.ICustomHardDisk_deleteImageOperationCompleted == null))
            {
                this.ICustomHardDisk_deleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnICustomHardDisk_deleteImageOperationCompleted);
            }
            this.InvokeAsync("ICustomHardDisk_deleteImage", new object[] {
                    _this}, this.ICustomHardDisk_deleteImageOperationCompleted, userState);
        }

        private void OnICustomHardDisk_deleteImageOperationCompleted(object arg)
        {
            if ((this.ICustomHardDisk_deleteImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ICustomHardDisk_deleteImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVHDImage_getFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVHDImage_getFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVHDImage_getFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVHDImage_getFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVHDImage_getFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVHDImage_getFilePathAsync(string _this)
        {
            this.IVHDImage_getFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IVHDImage_getFilePathAsync(string _this, object userState)
        {
            if ((this.IVHDImage_getFilePathOperationCompleted == null))
            {
                this.IVHDImage_getFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVHDImage_getFilePathOperationCompleted);
            }
            this.InvokeAsync("IVHDImage_getFilePath", new object[] {
                    _this}, this.IVHDImage_getFilePathOperationCompleted, userState);
        }

        private void OnIVHDImage_getFilePathOperationCompleted(object arg)
        {
            if ((this.IVHDImage_getFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVHDImage_getFilePathCompleted(this, new IVHDImage_getFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVHDImage_setFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filePath)
        {
            this.Invoke("IVHDImage_setFilePath", new object[] {
                    _this,
                    filePath});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVHDImage_setFilePath(string _this, string filePath, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVHDImage_setFilePath", new object[] {
                    _this,
                    filePath}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVHDImage_setFilePath(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVHDImage_setFilePathAsync(string _this, string filePath)
        {
            this.IVHDImage_setFilePathAsync(_this, filePath, null);
        }

        /// <remarks/>
        public void IVHDImage_setFilePathAsync(string _this, string filePath, object userState)
        {
            if ((this.IVHDImage_setFilePathOperationCompleted == null))
            {
                this.IVHDImage_setFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVHDImage_setFilePathOperationCompleted);
            }
            this.InvokeAsync("IVHDImage_setFilePath", new object[] {
                    _this,
                    filePath}, this.IVHDImage_setFilePathOperationCompleted, userState);
        }

        private void OnIVHDImage_setFilePathOperationCompleted(object arg)
        {
            if ((this.IVHDImage_setFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVHDImage_setFilePathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IVHDImage_getCreated([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVHDImage_getCreated", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVHDImage_getCreated(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVHDImage_getCreated", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIVHDImage_getCreated(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IVHDImage_getCreatedAsync(string _this)
        {
            this.IVHDImage_getCreatedAsync(_this, null);
        }

        /// <remarks/>
        public void IVHDImage_getCreatedAsync(string _this, object userState)
        {
            if ((this.IVHDImage_getCreatedOperationCompleted == null))
            {
                this.IVHDImage_getCreatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVHDImage_getCreatedOperationCompleted);
            }
            this.InvokeAsync("IVHDImage_getCreated", new object[] {
                    _this}, this.IVHDImage_getCreatedOperationCompleted, userState);
        }

        private void OnIVHDImage_getCreatedOperationCompleted(object arg)
        {
            if ((this.IVHDImage_getCreatedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVHDImage_getCreatedCompleted(this, new IVHDImage_getCreatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVHDImage_createDynamicImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("IVHDImage_createDynamicImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVHDImage_createDynamicImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVHDImage_createDynamicImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVHDImage_createDynamicImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVHDImage_createDynamicImageAsync(string _this, ulong size)
        {
            this.IVHDImage_createDynamicImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void IVHDImage_createDynamicImageAsync(string _this, ulong size, object userState)
        {
            if ((this.IVHDImage_createDynamicImageOperationCompleted == null))
            {
                this.IVHDImage_createDynamicImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVHDImage_createDynamicImageOperationCompleted);
            }
            this.InvokeAsync("IVHDImage_createDynamicImage", new object[] {
                    _this,
                    size}, this.IVHDImage_createDynamicImageOperationCompleted, userState);
        }

        private void OnIVHDImage_createDynamicImageOperationCompleted(object arg)
        {
            if ((this.IVHDImage_createDynamicImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVHDImage_createDynamicImageCompleted(this, new IVHDImage_createDynamicImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVHDImage_createFixedImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] ulong size)
        {
            object[] results = this.Invoke("IVHDImage_createFixedImage", new object[] {
                    _this,
                    size});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVHDImage_createFixedImage(string _this, ulong size, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVHDImage_createFixedImage", new object[] {
                    _this,
                    size}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVHDImage_createFixedImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVHDImage_createFixedImageAsync(string _this, ulong size)
        {
            this.IVHDImage_createFixedImageAsync(_this, size, null);
        }

        /// <remarks/>
        public void IVHDImage_createFixedImageAsync(string _this, ulong size, object userState)
        {
            if ((this.IVHDImage_createFixedImageOperationCompleted == null))
            {
                this.IVHDImage_createFixedImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVHDImage_createFixedImageOperationCompleted);
            }
            this.InvokeAsync("IVHDImage_createFixedImage", new object[] {
                    _this,
                    size}, this.IVHDImage_createFixedImageOperationCompleted, userState);
        }

        private void OnIVHDImage_createFixedImageOperationCompleted(object arg)
        {
            if ((this.IVHDImage_createFixedImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVHDImage_createFixedImageCompleted(this, new IVHDImage_createFixedImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVHDImage_deleteImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IVHDImage_deleteImage", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVHDImage_deleteImage(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVHDImage_deleteImage", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVHDImage_deleteImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVHDImage_deleteImageAsync(string _this)
        {
            this.IVHDImage_deleteImageAsync(_this, null);
        }

        /// <remarks/>
        public void IVHDImage_deleteImageAsync(string _this, object userState)
        {
            if ((this.IVHDImage_deleteImageOperationCompleted == null))
            {
                this.IVHDImage_deleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVHDImage_deleteImageOperationCompleted);
            }
            this.InvokeAsync("IVHDImage_deleteImage", new object[] {
                    _this}, this.IVHDImage_deleteImageOperationCompleted, userState);
        }

        private void OnIVHDImage_deleteImageOperationCompleted(object arg)
        {
            if ((this.IVHDImage_deleteImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVHDImage_deleteImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IDVDImage_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDImage_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDImage_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDImage_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIDVDImage_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IDVDImage_getIdAsync(string _this)
        {
            this.IDVDImage_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDImage_getIdAsync(string _this, object userState)
        {
            if ((this.IDVDImage_getIdOperationCompleted == null))
            {
                this.IDVDImage_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDImage_getIdOperationCompleted);
            }
            this.InvokeAsync("IDVDImage_getId", new object[] {
                    _this}, this.IDVDImage_getIdOperationCompleted, userState);
        }

        private void OnIDVDImage_getIdOperationCompleted(object arg)
        {
            if ((this.IDVDImage_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDImage_getIdCompleted(this, new IDVDImage_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IDVDImage_getFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDImage_getFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDImage_getFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDImage_getFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIDVDImage_getFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IDVDImage_getFilePathAsync(string _this)
        {
            this.IDVDImage_getFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDImage_getFilePathAsync(string _this, object userState)
        {
            if ((this.IDVDImage_getFilePathOperationCompleted == null))
            {
                this.IDVDImage_getFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDImage_getFilePathOperationCompleted);
            }
            this.InvokeAsync("IDVDImage_getFilePath", new object[] {
                    _this}, this.IDVDImage_getFilePathOperationCompleted, userState);
        }

        private void OnIDVDImage_getFilePathOperationCompleted(object arg)
        {
            if ((this.IDVDImage_getFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDImage_getFilePathCompleted(this, new IDVDImage_getFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IDVDImage_getAccessible([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDImage_getAccessible", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDImage_getAccessible(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDImage_getAccessible", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIDVDImage_getAccessible(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IDVDImage_getAccessibleAsync(string _this)
        {
            this.IDVDImage_getAccessibleAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDImage_getAccessibleAsync(string _this, object userState)
        {
            if ((this.IDVDImage_getAccessibleOperationCompleted == null))
            {
                this.IDVDImage_getAccessibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDImage_getAccessibleOperationCompleted);
            }
            this.InvokeAsync("IDVDImage_getAccessible", new object[] {
                    _this}, this.IDVDImage_getAccessibleOperationCompleted, userState);
        }

        private void OnIDVDImage_getAccessibleOperationCompleted(object arg)
        {
            if ((this.IDVDImage_getAccessibleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDImage_getAccessibleCompleted(this, new IDVDImage_getAccessibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong IDVDImage_getSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDImage_getSize", new object[] {
                    _this});
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDImage_getSize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDImage_getSize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ulong EndIDVDImage_getSize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ulong)(results[0]));
        }

        /// <remarks/>
        public void IDVDImage_getSizeAsync(string _this)
        {
            this.IDVDImage_getSizeAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDImage_getSizeAsync(string _this, object userState)
        {
            if ((this.IDVDImage_getSizeOperationCompleted == null))
            {
                this.IDVDImage_getSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDImage_getSizeOperationCompleted);
            }
            this.InvokeAsync("IDVDImage_getSize", new object[] {
                    _this}, this.IDVDImage_getSizeOperationCompleted, userState);
        }

        private void OnIDVDImage_getSizeOperationCompleted(object arg)
        {
            if ((this.IDVDImage_getSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDImage_getSizeCompleted(this, new IDVDImage_getSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DriveState IDVDDrive_getState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDDrive_getState", new object[] {
                    _this});
            return ((DriveState)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_getState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_getState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public DriveState EndIDVDDrive_getState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DriveState)(results[0]));
        }

        /// <remarks/>
        public void IDVDDrive_getStateAsync(string _this)
        {
            this.IDVDDrive_getStateAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDDrive_getStateAsync(string _this, object userState)
        {
            if ((this.IDVDDrive_getStateOperationCompleted == null))
            {
                this.IDVDDrive_getStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_getStateOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_getState", new object[] {
                    _this}, this.IDVDDrive_getStateOperationCompleted, userState);
        }

        private void OnIDVDDrive_getStateOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_getStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_getStateCompleted(this, new IDVDDrive_getStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IDVDDrive_getPassthrough([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDDrive_getPassthrough", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_getPassthrough(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_getPassthrough", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIDVDDrive_getPassthrough(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IDVDDrive_getPassthroughAsync(string _this)
        {
            this.IDVDDrive_getPassthroughAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDDrive_getPassthroughAsync(string _this, object userState)
        {
            if ((this.IDVDDrive_getPassthroughOperationCompleted == null))
            {
                this.IDVDDrive_getPassthroughOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_getPassthroughOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_getPassthrough", new object[] {
                    _this}, this.IDVDDrive_getPassthroughOperationCompleted, userState);
        }

        private void OnIDVDDrive_getPassthroughOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_getPassthroughCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_getPassthroughCompleted(this, new IDVDDrive_getPassthroughCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IDVDDrive_setPassthrough([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool passthrough)
        {
            this.Invoke("IDVDDrive_setPassthrough", new object[] {
                    _this,
                    passthrough});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_setPassthrough(string _this, bool passthrough, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_setPassthrough", new object[] {
                    _this,
                    passthrough}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIDVDDrive_setPassthrough(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IDVDDrive_setPassthroughAsync(string _this, bool passthrough)
        {
            this.IDVDDrive_setPassthroughAsync(_this, passthrough, null);
        }

        /// <remarks/>
        public void IDVDDrive_setPassthroughAsync(string _this, bool passthrough, object userState)
        {
            if ((this.IDVDDrive_setPassthroughOperationCompleted == null))
            {
                this.IDVDDrive_setPassthroughOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_setPassthroughOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_setPassthrough", new object[] {
                    _this,
                    passthrough}, this.IDVDDrive_setPassthroughOperationCompleted, userState);
        }

        private void OnIDVDDrive_setPassthroughOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_setPassthroughCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_setPassthroughCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IDVDDrive_mountImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string imageId)
        {
            this.Invoke("IDVDDrive_mountImage", new object[] {
                    _this,
                    imageId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_mountImage(string _this, string imageId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_mountImage", new object[] {
                    _this,
                    imageId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIDVDDrive_mountImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IDVDDrive_mountImageAsync(string _this, string imageId)
        {
            this.IDVDDrive_mountImageAsync(_this, imageId, null);
        }

        /// <remarks/>
        public void IDVDDrive_mountImageAsync(string _this, string imageId, object userState)
        {
            if ((this.IDVDDrive_mountImageOperationCompleted == null))
            {
                this.IDVDDrive_mountImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_mountImageOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_mountImage", new object[] {
                    _this,
                    imageId}, this.IDVDDrive_mountImageOperationCompleted, userState);
        }

        private void OnIDVDDrive_mountImageOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_mountImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_mountImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IDVDDrive_captureHostDrive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string drive)
        {
            this.Invoke("IDVDDrive_captureHostDrive", new object[] {
                    _this,
                    drive});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_captureHostDrive(string _this, string drive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_captureHostDrive", new object[] {
                    _this,
                    drive}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIDVDDrive_captureHostDrive(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IDVDDrive_captureHostDriveAsync(string _this, string drive)
        {
            this.IDVDDrive_captureHostDriveAsync(_this, drive, null);
        }

        /// <remarks/>
        public void IDVDDrive_captureHostDriveAsync(string _this, string drive, object userState)
        {
            if ((this.IDVDDrive_captureHostDriveOperationCompleted == null))
            {
                this.IDVDDrive_captureHostDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_captureHostDriveOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_captureHostDrive", new object[] {
                    _this,
                    drive}, this.IDVDDrive_captureHostDriveOperationCompleted, userState);
        }

        private void OnIDVDDrive_captureHostDriveOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_captureHostDriveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_captureHostDriveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IDVDDrive_unmount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IDVDDrive_unmount", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_unmount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_unmount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIDVDDrive_unmount(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IDVDDrive_unmountAsync(string _this)
        {
            this.IDVDDrive_unmountAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDDrive_unmountAsync(string _this, object userState)
        {
            if ((this.IDVDDrive_unmountOperationCompleted == null))
            {
                this.IDVDDrive_unmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_unmountOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_unmount", new object[] {
                    _this}, this.IDVDDrive_unmountOperationCompleted, userState);
        }

        private void OnIDVDDrive_unmountOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_unmountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_unmountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IDVDDrive_getImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDDrive_getImage", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_getImage(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_getImage", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIDVDDrive_getImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IDVDDrive_getImageAsync(string _this)
        {
            this.IDVDDrive_getImageAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDDrive_getImageAsync(string _this, object userState)
        {
            if ((this.IDVDDrive_getImageOperationCompleted == null))
            {
                this.IDVDDrive_getImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_getImageOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_getImage", new object[] {
                    _this}, this.IDVDDrive_getImageOperationCompleted, userState);
        }

        private void OnIDVDDrive_getImageOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_getImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_getImageCompleted(this, new IDVDDrive_getImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IDVDDrive_getHostDrive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IDVDDrive_getHostDrive", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIDVDDrive_getHostDrive(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IDVDDrive_getHostDrive", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIDVDDrive_getHostDrive(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IDVDDrive_getHostDriveAsync(string _this)
        {
            this.IDVDDrive_getHostDriveAsync(_this, null);
        }

        /// <remarks/>
        public void IDVDDrive_getHostDriveAsync(string _this, object userState)
        {
            if ((this.IDVDDrive_getHostDriveOperationCompleted == null))
            {
                this.IDVDDrive_getHostDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIDVDDrive_getHostDriveOperationCompleted);
            }
            this.InvokeAsync("IDVDDrive_getHostDrive", new object[] {
                    _this}, this.IDVDDrive_getHostDriveOperationCompleted, userState);
        }

        private void OnIDVDDrive_getHostDriveOperationCompleted(object arg)
        {
            if ((this.IDVDDrive_getHostDriveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IDVDDrive_getHostDriveCompleted(this, new IDVDDrive_getHostDriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IFloppyImage_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyImage_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyImage_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyImage_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIFloppyImage_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IFloppyImage_getIdAsync(string _this)
        {
            this.IFloppyImage_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyImage_getIdAsync(string _this, object userState)
        {
            if ((this.IFloppyImage_getIdOperationCompleted == null))
            {
                this.IFloppyImage_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyImage_getIdOperationCompleted);
            }
            this.InvokeAsync("IFloppyImage_getId", new object[] {
                    _this}, this.IFloppyImage_getIdOperationCompleted, userState);
        }

        private void OnIFloppyImage_getIdOperationCompleted(object arg)
        {
            if ((this.IFloppyImage_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyImage_getIdCompleted(this, new IFloppyImage_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IFloppyImage_getFilePath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyImage_getFilePath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyImage_getFilePath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyImage_getFilePath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIFloppyImage_getFilePath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IFloppyImage_getFilePathAsync(string _this)
        {
            this.IFloppyImage_getFilePathAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyImage_getFilePathAsync(string _this, object userState)
        {
            if ((this.IFloppyImage_getFilePathOperationCompleted == null))
            {
                this.IFloppyImage_getFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyImage_getFilePathOperationCompleted);
            }
            this.InvokeAsync("IFloppyImage_getFilePath", new object[] {
                    _this}, this.IFloppyImage_getFilePathOperationCompleted, userState);
        }

        private void OnIFloppyImage_getFilePathOperationCompleted(object arg)
        {
            if ((this.IFloppyImage_getFilePathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyImage_getFilePathCompleted(this, new IFloppyImage_getFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IFloppyImage_getAccessible([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyImage_getAccessible", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyImage_getAccessible(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyImage_getAccessible", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIFloppyImage_getAccessible(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IFloppyImage_getAccessibleAsync(string _this)
        {
            this.IFloppyImage_getAccessibleAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyImage_getAccessibleAsync(string _this, object userState)
        {
            if ((this.IFloppyImage_getAccessibleOperationCompleted == null))
            {
                this.IFloppyImage_getAccessibleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyImage_getAccessibleOperationCompleted);
            }
            this.InvokeAsync("IFloppyImage_getAccessible", new object[] {
                    _this}, this.IFloppyImage_getAccessibleOperationCompleted, userState);
        }

        private void OnIFloppyImage_getAccessibleOperationCompleted(object arg)
        {
            if ((this.IFloppyImage_getAccessibleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyImage_getAccessibleCompleted(this, new IFloppyImage_getAccessibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IFloppyImage_getSize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyImage_getSize", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyImage_getSize(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyImage_getSize", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIFloppyImage_getSize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IFloppyImage_getSizeAsync(string _this)
        {
            this.IFloppyImage_getSizeAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyImage_getSizeAsync(string _this, object userState)
        {
            if ((this.IFloppyImage_getSizeOperationCompleted == null))
            {
                this.IFloppyImage_getSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyImage_getSizeOperationCompleted);
            }
            this.InvokeAsync("IFloppyImage_getSize", new object[] {
                    _this}, this.IFloppyImage_getSizeOperationCompleted, userState);
        }

        private void OnIFloppyImage_getSizeOperationCompleted(object arg)
        {
            if ((this.IFloppyImage_getSizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyImage_getSizeCompleted(this, new IFloppyImage_getSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IFloppyDrive_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyDrive_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIFloppyDrive_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IFloppyDrive_getEnabledAsync(string _this)
        {
            this.IFloppyDrive_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyDrive_getEnabledAsync(string _this, object userState)
        {
            if ((this.IFloppyDrive_getEnabledOperationCompleted == null))
            {
                this.IFloppyDrive_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_getEnabledOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_getEnabled", new object[] {
                    _this}, this.IFloppyDrive_getEnabledOperationCompleted, userState);
        }

        private void OnIFloppyDrive_getEnabledOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_getEnabledCompleted(this, new IFloppyDrive_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IFloppyDrive_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("IFloppyDrive_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIFloppyDrive_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IFloppyDrive_setEnabledAsync(string _this, bool enabled)
        {
            this.IFloppyDrive_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void IFloppyDrive_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.IFloppyDrive_setEnabledOperationCompleted == null))
            {
                this.IFloppyDrive_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_setEnabledOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_setEnabled", new object[] {
                    _this,
                    enabled}, this.IFloppyDrive_setEnabledOperationCompleted, userState);
        }

        private void OnIFloppyDrive_setEnabledOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DriveState IFloppyDrive_getState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyDrive_getState", new object[] {
                    _this});
            return ((DriveState)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_getState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_getState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public DriveState EndIFloppyDrive_getState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((DriveState)(results[0]));
        }

        /// <remarks/>
        public void IFloppyDrive_getStateAsync(string _this)
        {
            this.IFloppyDrive_getStateAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyDrive_getStateAsync(string _this, object userState)
        {
            if ((this.IFloppyDrive_getStateOperationCompleted == null))
            {
                this.IFloppyDrive_getStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_getStateOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_getState", new object[] {
                    _this}, this.IFloppyDrive_getStateOperationCompleted, userState);
        }

        private void OnIFloppyDrive_getStateOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_getStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_getStateCompleted(this, new IFloppyDrive_getStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IFloppyDrive_mountImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string imageId)
        {
            this.Invoke("IFloppyDrive_mountImage", new object[] {
                    _this,
                    imageId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_mountImage(string _this, string imageId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_mountImage", new object[] {
                    _this,
                    imageId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIFloppyDrive_mountImage(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IFloppyDrive_mountImageAsync(string _this, string imageId)
        {
            this.IFloppyDrive_mountImageAsync(_this, imageId, null);
        }

        /// <remarks/>
        public void IFloppyDrive_mountImageAsync(string _this, string imageId, object userState)
        {
            if ((this.IFloppyDrive_mountImageOperationCompleted == null))
            {
                this.IFloppyDrive_mountImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_mountImageOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_mountImage", new object[] {
                    _this,
                    imageId}, this.IFloppyDrive_mountImageOperationCompleted, userState);
        }

        private void OnIFloppyDrive_mountImageOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_mountImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_mountImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IFloppyDrive_captureHostDrive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string drive)
        {
            this.Invoke("IFloppyDrive_captureHostDrive", new object[] {
                    _this,
                    drive});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_captureHostDrive(string _this, string drive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_captureHostDrive", new object[] {
                    _this,
                    drive}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIFloppyDrive_captureHostDrive(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IFloppyDrive_captureHostDriveAsync(string _this, string drive)
        {
            this.IFloppyDrive_captureHostDriveAsync(_this, drive, null);
        }

        /// <remarks/>
        public void IFloppyDrive_captureHostDriveAsync(string _this, string drive, object userState)
        {
            if ((this.IFloppyDrive_captureHostDriveOperationCompleted == null))
            {
                this.IFloppyDrive_captureHostDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_captureHostDriveOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_captureHostDrive", new object[] {
                    _this,
                    drive}, this.IFloppyDrive_captureHostDriveOperationCompleted, userState);
        }

        private void OnIFloppyDrive_captureHostDriveOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_captureHostDriveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_captureHostDriveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IFloppyDrive_unmount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IFloppyDrive_unmount", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_unmount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_unmount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIFloppyDrive_unmount(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IFloppyDrive_unmountAsync(string _this)
        {
            this.IFloppyDrive_unmountAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyDrive_unmountAsync(string _this, object userState)
        {
            if ((this.IFloppyDrive_unmountOperationCompleted == null))
            {
                this.IFloppyDrive_unmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_unmountOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_unmount", new object[] {
                    _this}, this.IFloppyDrive_unmountOperationCompleted, userState);
        }

        private void OnIFloppyDrive_unmountOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_unmountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_unmountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IFloppyDrive_getImage([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyDrive_getImage", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_getImage(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_getImage", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIFloppyDrive_getImage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IFloppyDrive_getImageAsync(string _this)
        {
            this.IFloppyDrive_getImageAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyDrive_getImageAsync(string _this, object userState)
        {
            if ((this.IFloppyDrive_getImageOperationCompleted == null))
            {
                this.IFloppyDrive_getImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_getImageOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_getImage", new object[] {
                    _this}, this.IFloppyDrive_getImageOperationCompleted, userState);
        }

        private void OnIFloppyDrive_getImageOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_getImageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_getImageCompleted(this, new IFloppyDrive_getImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IFloppyDrive_getHostDrive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IFloppyDrive_getHostDrive", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIFloppyDrive_getHostDrive(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IFloppyDrive_getHostDrive", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIFloppyDrive_getHostDrive(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IFloppyDrive_getHostDriveAsync(string _this)
        {
            this.IFloppyDrive_getHostDriveAsync(_this, null);
        }

        /// <remarks/>
        public void IFloppyDrive_getHostDriveAsync(string _this, object userState)
        {
            if ((this.IFloppyDrive_getHostDriveOperationCompleted == null))
            {
                this.IFloppyDrive_getHostDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIFloppyDrive_getHostDriveOperationCompleted);
            }
            this.InvokeAsync("IFloppyDrive_getHostDrive", new object[] {
                    _this}, this.IFloppyDrive_getHostDriveOperationCompleted, userState);
        }

        private void OnIFloppyDrive_getHostDriveOperationCompleted(object arg)
        {
            if ((this.IFloppyDrive_getHostDriveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IFloppyDrive_getHostDriveCompleted(this, new IFloppyDrive_getHostDriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IKeyboard_putScancode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int scancode)
        {
            this.Invoke("IKeyboard_putScancode", new object[] {
                    _this,
                    scancode});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIKeyboard_putScancode(string _this, int scancode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IKeyboard_putScancode", new object[] {
                    _this,
                    scancode}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIKeyboard_putScancode(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IKeyboard_putScancodeAsync(string _this, int scancode)
        {
            this.IKeyboard_putScancodeAsync(_this, scancode, null);
        }

        /// <remarks/>
        public void IKeyboard_putScancodeAsync(string _this, int scancode, object userState)
        {
            if ((this.IKeyboard_putScancodeOperationCompleted == null))
            {
                this.IKeyboard_putScancodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIKeyboard_putScancodeOperationCompleted);
            }
            this.InvokeAsync("IKeyboard_putScancode", new object[] {
                    _this,
                    scancode}, this.IKeyboard_putScancodeOperationCompleted, userState);
        }

        private void OnIKeyboard_putScancodeOperationCompleted(object arg)
        {
            if ((this.IKeyboard_putScancodeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IKeyboard_putScancodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IKeyboard_putScancodes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute("scancodes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int[] scancodes)
        {
            object[] results = this.Invoke("IKeyboard_putScancodes", new object[] {
                    _this,
                    scancodes});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIKeyboard_putScancodes(string _this, int[] scancodes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IKeyboard_putScancodes", new object[] {
                    _this,
                    scancodes}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIKeyboard_putScancodes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IKeyboard_putScancodesAsync(string _this, int[] scancodes)
        {
            this.IKeyboard_putScancodesAsync(_this, scancodes, null);
        }

        /// <remarks/>
        public void IKeyboard_putScancodesAsync(string _this, int[] scancodes, object userState)
        {
            if ((this.IKeyboard_putScancodesOperationCompleted == null))
            {
                this.IKeyboard_putScancodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIKeyboard_putScancodesOperationCompleted);
            }
            this.InvokeAsync("IKeyboard_putScancodes", new object[] {
                    _this,
                    scancodes}, this.IKeyboard_putScancodesOperationCompleted, userState);
        }

        private void OnIKeyboard_putScancodesOperationCompleted(object arg)
        {
            if ((this.IKeyboard_putScancodesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IKeyboard_putScancodesCompleted(this, new IKeyboard_putScancodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IKeyboard_putCAD([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IKeyboard_putCAD", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIKeyboard_putCAD(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IKeyboard_putCAD", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIKeyboard_putCAD(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IKeyboard_putCADAsync(string _this)
        {
            this.IKeyboard_putCADAsync(_this, null);
        }

        /// <remarks/>
        public void IKeyboard_putCADAsync(string _this, object userState)
        {
            if ((this.IKeyboard_putCADOperationCompleted == null))
            {
                this.IKeyboard_putCADOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIKeyboard_putCADOperationCompleted);
            }
            this.InvokeAsync("IKeyboard_putCAD", new object[] {
                    _this}, this.IKeyboard_putCADOperationCompleted, userState);
        }

        private void OnIKeyboard_putCADOperationCompleted(object arg)
        {
            if ((this.IKeyboard_putCADCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IKeyboard_putCADCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IMouse_getAbsoluteSupported([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IMouse_getAbsoluteSupported", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMouse_getAbsoluteSupported(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMouse_getAbsoluteSupported", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIMouse_getAbsoluteSupported(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IMouse_getAbsoluteSupportedAsync(string _this)
        {
            this.IMouse_getAbsoluteSupportedAsync(_this, null);
        }

        /// <remarks/>
        public void IMouse_getAbsoluteSupportedAsync(string _this, object userState)
        {
            if ((this.IMouse_getAbsoluteSupportedOperationCompleted == null))
            {
                this.IMouse_getAbsoluteSupportedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMouse_getAbsoluteSupportedOperationCompleted);
            }
            this.InvokeAsync("IMouse_getAbsoluteSupported", new object[] {
                    _this}, this.IMouse_getAbsoluteSupportedOperationCompleted, userState);
        }

        private void OnIMouse_getAbsoluteSupportedOperationCompleted(object arg)
        {
            if ((this.IMouse_getAbsoluteSupportedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMouse_getAbsoluteSupportedCompleted(this, new IMouse_getAbsoluteSupportedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMouse_putMouseEvent([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int dx, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int dy, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int dz, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int buttonState)
        {
            this.Invoke("IMouse_putMouseEvent", new object[] {
                    _this,
                    dx,
                    dy,
                    dz,
                    buttonState});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMouse_putMouseEvent(string _this, int dx, int dy, int dz, int buttonState, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMouse_putMouseEvent", new object[] {
                    _this,
                    dx,
                    dy,
                    dz,
                    buttonState}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMouse_putMouseEvent(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMouse_putMouseEventAsync(string _this, int dx, int dy, int dz, int buttonState)
        {
            this.IMouse_putMouseEventAsync(_this, dx, dy, dz, buttonState, null);
        }

        /// <remarks/>
        public void IMouse_putMouseEventAsync(string _this, int dx, int dy, int dz, int buttonState, object userState)
        {
            if ((this.IMouse_putMouseEventOperationCompleted == null))
            {
                this.IMouse_putMouseEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMouse_putMouseEventOperationCompleted);
            }
            this.InvokeAsync("IMouse_putMouseEvent", new object[] {
                    _this,
                    dx,
                    dy,
                    dz,
                    buttonState}, this.IMouse_putMouseEventOperationCompleted, userState);
        }

        private void OnIMouse_putMouseEventOperationCompleted(object arg)
        {
            if ((this.IMouse_putMouseEventCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMouse_putMouseEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IMouse_putMouseEventAbsolute([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int x, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int y, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int dz, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int buttonState)
        {
            this.Invoke("IMouse_putMouseEventAbsolute", new object[] {
                    _this,
                    x,
                    y,
                    dz,
                    buttonState});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIMouse_putMouseEventAbsolute(string _this, int x, int y, int dz, int buttonState, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IMouse_putMouseEventAbsolute", new object[] {
                    _this,
                    x,
                    y,
                    dz,
                    buttonState}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIMouse_putMouseEventAbsolute(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IMouse_putMouseEventAbsoluteAsync(string _this, int x, int y, int dz, int buttonState)
        {
            this.IMouse_putMouseEventAbsoluteAsync(_this, x, y, dz, buttonState, null);
        }

        /// <remarks/>
        public void IMouse_putMouseEventAbsoluteAsync(string _this, int x, int y, int dz, int buttonState, object userState)
        {
            if ((this.IMouse_putMouseEventAbsoluteOperationCompleted == null))
            {
                this.IMouse_putMouseEventAbsoluteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIMouse_putMouseEventAbsoluteOperationCompleted);
            }
            this.InvokeAsync("IMouse_putMouseEventAbsolute", new object[] {
                    _this,
                    x,
                    y,
                    dz,
                    buttonState}, this.IMouse_putMouseEventAbsoluteOperationCompleted, userState);
        }

        private void OnIMouse_putMouseEventAbsoluteOperationCompleted(object arg)
        {
            if ((this.IMouse_putMouseEventAbsoluteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IMouse_putMouseEventAbsoluteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public NetworkAdapterType INetworkAdapter_getAdapterType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getAdapterType", new object[] {
                    _this});
            return ((NetworkAdapterType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getAdapterType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getAdapterType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public NetworkAdapterType EndINetworkAdapter_getAdapterType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((NetworkAdapterType)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getAdapterTypeAsync(string _this)
        {
            this.INetworkAdapter_getAdapterTypeAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getAdapterTypeAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getAdapterTypeOperationCompleted == null))
            {
                this.INetworkAdapter_getAdapterTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getAdapterTypeOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getAdapterType", new object[] {
                    _this}, this.INetworkAdapter_getAdapterTypeOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getAdapterTypeOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getAdapterTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getAdapterTypeCompleted(this, new INetworkAdapter_getAdapterTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setAdapterType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] NetworkAdapterType adapterType)
        {
            this.Invoke("INetworkAdapter_setAdapterType", new object[] {
                    _this,
                    adapterType});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setAdapterType(string _this, NetworkAdapterType adapterType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setAdapterType", new object[] {
                    _this,
                    adapterType}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setAdapterType(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setAdapterTypeAsync(string _this, NetworkAdapterType adapterType)
        {
            this.INetworkAdapter_setAdapterTypeAsync(_this, adapterType, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setAdapterTypeAsync(string _this, NetworkAdapterType adapterType, object userState)
        {
            if ((this.INetworkAdapter_setAdapterTypeOperationCompleted == null))
            {
                this.INetworkAdapter_setAdapterTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setAdapterTypeOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setAdapterType", new object[] {
                    _this,
                    adapterType}, this.INetworkAdapter_setAdapterTypeOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setAdapterTypeOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setAdapterTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setAdapterTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint INetworkAdapter_getSlot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getSlot", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getSlot(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getSlot", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndINetworkAdapter_getSlot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getSlotAsync(string _this)
        {
            this.INetworkAdapter_getSlotAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getSlotAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getSlotOperationCompleted == null))
            {
                this.INetworkAdapter_getSlotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getSlotOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getSlot", new object[] {
                    _this}, this.INetworkAdapter_getSlotOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getSlotOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getSlotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getSlotCompleted(this, new INetworkAdapter_getSlotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool INetworkAdapter_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndINetworkAdapter_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getEnabledAsync(string _this)
        {
            this.INetworkAdapter_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getEnabledAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getEnabledOperationCompleted == null))
            {
                this.INetworkAdapter_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getEnabledOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getEnabled", new object[] {
                    _this}, this.INetworkAdapter_getEnabledOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getEnabledOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getEnabledCompleted(this, new INetworkAdapter_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("INetworkAdapter_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setEnabledAsync(string _this, bool enabled)
        {
            this.INetworkAdapter_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.INetworkAdapter_setEnabledOperationCompleted == null))
            {
                this.INetworkAdapter_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setEnabledOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setEnabled", new object[] {
                    _this,
                    enabled}, this.INetworkAdapter_setEnabledOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setEnabledOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string INetworkAdapter_getMACAddress([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getMACAddress", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getMACAddress(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getMACAddress", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndINetworkAdapter_getMACAddress(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getMACAddressAsync(string _this)
        {
            this.INetworkAdapter_getMACAddressAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getMACAddressAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getMACAddressOperationCompleted == null))
            {
                this.INetworkAdapter_getMACAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getMACAddressOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getMACAddress", new object[] {
                    _this}, this.INetworkAdapter_getMACAddressOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getMACAddressOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getMACAddressCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getMACAddressCompleted(this, new INetworkAdapter_getMACAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setMACAddress([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string MACAddress)
        {
            this.Invoke("INetworkAdapter_setMACAddress", new object[] {
                    _this,
                    MACAddress});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setMACAddress(string _this, string MACAddress, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setMACAddress", new object[] {
                    _this,
                    MACAddress}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setMACAddress(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setMACAddressAsync(string _this, string MACAddress)
        {
            this.INetworkAdapter_setMACAddressAsync(_this, MACAddress, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setMACAddressAsync(string _this, string MACAddress, object userState)
        {
            if ((this.INetworkAdapter_setMACAddressOperationCompleted == null))
            {
                this.INetworkAdapter_setMACAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setMACAddressOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setMACAddress", new object[] {
                    _this,
                    MACAddress}, this.INetworkAdapter_setMACAddressOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setMACAddressOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setMACAddressCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setMACAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public NetworkAttachmentType INetworkAdapter_getAttachmentType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getAttachmentType", new object[] {
                    _this});
            return ((NetworkAttachmentType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getAttachmentType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getAttachmentType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public NetworkAttachmentType EndINetworkAdapter_getAttachmentType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((NetworkAttachmentType)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getAttachmentTypeAsync(string _this)
        {
            this.INetworkAdapter_getAttachmentTypeAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getAttachmentTypeAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getAttachmentTypeOperationCompleted == null))
            {
                this.INetworkAdapter_getAttachmentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getAttachmentTypeOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getAttachmentType", new object[] {
                    _this}, this.INetworkAdapter_getAttachmentTypeOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getAttachmentTypeOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getAttachmentTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getAttachmentTypeCompleted(this, new INetworkAdapter_getAttachmentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string INetworkAdapter_getHostInterface([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getHostInterface", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getHostInterface(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getHostInterface", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndINetworkAdapter_getHostInterface(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getHostInterfaceAsync(string _this)
        {
            this.INetworkAdapter_getHostInterfaceAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getHostInterfaceAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getHostInterfaceOperationCompleted == null))
            {
                this.INetworkAdapter_getHostInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getHostInterfaceOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getHostInterface", new object[] {
                    _this}, this.INetworkAdapter_getHostInterfaceOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getHostInterfaceOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getHostInterfaceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getHostInterfaceCompleted(this, new INetworkAdapter_getHostInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setHostInterface([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string hostInterface)
        {
            this.Invoke("INetworkAdapter_setHostInterface", new object[] {
                    _this,
                    hostInterface});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setHostInterface(string _this, string hostInterface, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setHostInterface", new object[] {
                    _this,
                    hostInterface}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setHostInterface(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setHostInterfaceAsync(string _this, string hostInterface)
        {
            this.INetworkAdapter_setHostInterfaceAsync(_this, hostInterface, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setHostInterfaceAsync(string _this, string hostInterface, object userState)
        {
            if ((this.INetworkAdapter_setHostInterfaceOperationCompleted == null))
            {
                this.INetworkAdapter_setHostInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setHostInterfaceOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setHostInterface", new object[] {
                    _this,
                    hostInterface}, this.INetworkAdapter_setHostInterfaceOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setHostInterfaceOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setHostInterfaceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setHostInterfaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string INetworkAdapter_getInternalNetwork([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getInternalNetwork", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getInternalNetwork(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getInternalNetwork", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndINetworkAdapter_getInternalNetwork(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getInternalNetworkAsync(string _this)
        {
            this.INetworkAdapter_getInternalNetworkAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getInternalNetworkAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getInternalNetworkOperationCompleted == null))
            {
                this.INetworkAdapter_getInternalNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getInternalNetworkOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getInternalNetwork", new object[] {
                    _this}, this.INetworkAdapter_getInternalNetworkOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getInternalNetworkOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getInternalNetworkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getInternalNetworkCompleted(this, new INetworkAdapter_getInternalNetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setInternalNetwork([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string internalNetwork)
        {
            this.Invoke("INetworkAdapter_setInternalNetwork", new object[] {
                    _this,
                    internalNetwork});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setInternalNetwork(string _this, string internalNetwork, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setInternalNetwork", new object[] {
                    _this,
                    internalNetwork}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setInternalNetwork(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setInternalNetworkAsync(string _this, string internalNetwork)
        {
            this.INetworkAdapter_setInternalNetworkAsync(_this, internalNetwork, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setInternalNetworkAsync(string _this, string internalNetwork, object userState)
        {
            if ((this.INetworkAdapter_setInternalNetworkOperationCompleted == null))
            {
                this.INetworkAdapter_setInternalNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setInternalNetworkOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setInternalNetwork", new object[] {
                    _this,
                    internalNetwork}, this.INetworkAdapter_setInternalNetworkOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setInternalNetworkOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setInternalNetworkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setInternalNetworkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string INetworkAdapter_getNATNetwork([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getNATNetwork", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getNATNetwork(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getNATNetwork", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndINetworkAdapter_getNATNetwork(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getNATNetworkAsync(string _this)
        {
            this.INetworkAdapter_getNATNetworkAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getNATNetworkAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getNATNetworkOperationCompleted == null))
            {
                this.INetworkAdapter_getNATNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getNATNetworkOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getNATNetwork", new object[] {
                    _this}, this.INetworkAdapter_getNATNetworkOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getNATNetworkOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getNATNetworkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getNATNetworkCompleted(this, new INetworkAdapter_getNATNetworkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setNATNetwork([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string NATNetwork)
        {
            this.Invoke("INetworkAdapter_setNATNetwork", new object[] {
                    _this,
                    NATNetwork});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setNATNetwork(string _this, string NATNetwork, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setNATNetwork", new object[] {
                    _this,
                    NATNetwork}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setNATNetwork(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setNATNetworkAsync(string _this, string NATNetwork)
        {
            this.INetworkAdapter_setNATNetworkAsync(_this, NATNetwork, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setNATNetworkAsync(string _this, string NATNetwork, object userState)
        {
            if ((this.INetworkAdapter_setNATNetworkOperationCompleted == null))
            {
                this.INetworkAdapter_setNATNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setNATNetworkOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setNATNetwork", new object[] {
                    _this,
                    NATNetwork}, this.INetworkAdapter_setNATNetworkOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setNATNetworkOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setNATNetworkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setNATNetworkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool INetworkAdapter_getCableConnected([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getCableConnected", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getCableConnected(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getCableConnected", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndINetworkAdapter_getCableConnected(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getCableConnectedAsync(string _this)
        {
            this.INetworkAdapter_getCableConnectedAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getCableConnectedAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getCableConnectedOperationCompleted == null))
            {
                this.INetworkAdapter_getCableConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getCableConnectedOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getCableConnected", new object[] {
                    _this}, this.INetworkAdapter_getCableConnectedOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getCableConnectedOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getCableConnectedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getCableConnectedCompleted(this, new INetworkAdapter_getCableConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setCableConnected([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool cableConnected)
        {
            this.Invoke("INetworkAdapter_setCableConnected", new object[] {
                    _this,
                    cableConnected});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setCableConnected(string _this, bool cableConnected, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setCableConnected", new object[] {
                    _this,
                    cableConnected}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setCableConnected(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setCableConnectedAsync(string _this, bool cableConnected)
        {
            this.INetworkAdapter_setCableConnectedAsync(_this, cableConnected, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setCableConnectedAsync(string _this, bool cableConnected, object userState)
        {
            if ((this.INetworkAdapter_setCableConnectedOperationCompleted == null))
            {
                this.INetworkAdapter_setCableConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setCableConnectedOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setCableConnected", new object[] {
                    _this,
                    cableConnected}, this.INetworkAdapter_setCableConnectedOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setCableConnectedOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setCableConnectedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setCableConnectedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint INetworkAdapter_getLineSpeed([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getLineSpeed", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getLineSpeed(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getLineSpeed", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndINetworkAdapter_getLineSpeed(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getLineSpeedAsync(string _this)
        {
            this.INetworkAdapter_getLineSpeedAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getLineSpeedAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getLineSpeedOperationCompleted == null))
            {
                this.INetworkAdapter_getLineSpeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getLineSpeedOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getLineSpeed", new object[] {
                    _this}, this.INetworkAdapter_getLineSpeedOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getLineSpeedOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getLineSpeedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getLineSpeedCompleted(this, new INetworkAdapter_getLineSpeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setLineSpeed([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint lineSpeed)
        {
            this.Invoke("INetworkAdapter_setLineSpeed", new object[] {
                    _this,
                    lineSpeed});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setLineSpeed(string _this, uint lineSpeed, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setLineSpeed", new object[] {
                    _this,
                    lineSpeed}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setLineSpeed(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setLineSpeedAsync(string _this, uint lineSpeed)
        {
            this.INetworkAdapter_setLineSpeedAsync(_this, lineSpeed, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setLineSpeedAsync(string _this, uint lineSpeed, object userState)
        {
            if ((this.INetworkAdapter_setLineSpeedOperationCompleted == null))
            {
                this.INetworkAdapter_setLineSpeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setLineSpeedOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setLineSpeed", new object[] {
                    _this,
                    lineSpeed}, this.INetworkAdapter_setLineSpeedOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setLineSpeedOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setLineSpeedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setLineSpeedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool INetworkAdapter_getTraceEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getTraceEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getTraceEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getTraceEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndINetworkAdapter_getTraceEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getTraceEnabledAsync(string _this)
        {
            this.INetworkAdapter_getTraceEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getTraceEnabledAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getTraceEnabledOperationCompleted == null))
            {
                this.INetworkAdapter_getTraceEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getTraceEnabledOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getTraceEnabled", new object[] {
                    _this}, this.INetworkAdapter_getTraceEnabledOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getTraceEnabledOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getTraceEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getTraceEnabledCompleted(this, new INetworkAdapter_getTraceEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setTraceEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool traceEnabled)
        {
            this.Invoke("INetworkAdapter_setTraceEnabled", new object[] {
                    _this,
                    traceEnabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setTraceEnabled(string _this, bool traceEnabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setTraceEnabled", new object[] {
                    _this,
                    traceEnabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setTraceEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setTraceEnabledAsync(string _this, bool traceEnabled)
        {
            this.INetworkAdapter_setTraceEnabledAsync(_this, traceEnabled, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setTraceEnabledAsync(string _this, bool traceEnabled, object userState)
        {
            if ((this.INetworkAdapter_setTraceEnabledOperationCompleted == null))
            {
                this.INetworkAdapter_setTraceEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setTraceEnabledOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setTraceEnabled", new object[] {
                    _this,
                    traceEnabled}, this.INetworkAdapter_setTraceEnabledOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setTraceEnabledOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setTraceEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setTraceEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string INetworkAdapter_getTraceFile([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("INetworkAdapter_getTraceFile", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_getTraceFile(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_getTraceFile", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndINetworkAdapter_getTraceFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void INetworkAdapter_getTraceFileAsync(string _this)
        {
            this.INetworkAdapter_getTraceFileAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_getTraceFileAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_getTraceFileOperationCompleted == null))
            {
                this.INetworkAdapter_getTraceFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_getTraceFileOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_getTraceFile", new object[] {
                    _this}, this.INetworkAdapter_getTraceFileOperationCompleted, userState);
        }

        private void OnINetworkAdapter_getTraceFileOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_getTraceFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_getTraceFileCompleted(this, new INetworkAdapter_getTraceFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_setTraceFile([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string traceFile)
        {
            this.Invoke("INetworkAdapter_setTraceFile", new object[] {
                    _this,
                    traceFile});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_setTraceFile(string _this, string traceFile, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_setTraceFile", new object[] {
                    _this,
                    traceFile}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_setTraceFile(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_setTraceFileAsync(string _this, string traceFile)
        {
            this.INetworkAdapter_setTraceFileAsync(_this, traceFile, null);
        }

        /// <remarks/>
        public void INetworkAdapter_setTraceFileAsync(string _this, string traceFile, object userState)
        {
            if ((this.INetworkAdapter_setTraceFileOperationCompleted == null))
            {
                this.INetworkAdapter_setTraceFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_setTraceFileOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_setTraceFile", new object[] {
                    _this,
                    traceFile}, this.INetworkAdapter_setTraceFileOperationCompleted, userState);
        }

        private void OnINetworkAdapter_setTraceFileOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_setTraceFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_setTraceFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_attachToNAT([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("INetworkAdapter_attachToNAT", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_attachToNAT(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_attachToNAT", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_attachToNAT(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_attachToNATAsync(string _this)
        {
            this.INetworkAdapter_attachToNATAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_attachToNATAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_attachToNATOperationCompleted == null))
            {
                this.INetworkAdapter_attachToNATOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_attachToNATOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_attachToNAT", new object[] {
                    _this}, this.INetworkAdapter_attachToNATOperationCompleted, userState);
        }

        private void OnINetworkAdapter_attachToNATOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_attachToNATCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_attachToNATCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_attachToHostInterface([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("INetworkAdapter_attachToHostInterface", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_attachToHostInterface(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_attachToHostInterface", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_attachToHostInterface(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_attachToHostInterfaceAsync(string _this)
        {
            this.INetworkAdapter_attachToHostInterfaceAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_attachToHostInterfaceAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_attachToHostInterfaceOperationCompleted == null))
            {
                this.INetworkAdapter_attachToHostInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_attachToHostInterfaceOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_attachToHostInterface", new object[] {
                    _this}, this.INetworkAdapter_attachToHostInterfaceOperationCompleted, userState);
        }

        private void OnINetworkAdapter_attachToHostInterfaceOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_attachToHostInterfaceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_attachToHostInterfaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_attachToInternalNetwork([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("INetworkAdapter_attachToInternalNetwork", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_attachToInternalNetwork(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_attachToInternalNetwork", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_attachToInternalNetwork(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_attachToInternalNetworkAsync(string _this)
        {
            this.INetworkAdapter_attachToInternalNetworkAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_attachToInternalNetworkAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_attachToInternalNetworkOperationCompleted == null))
            {
                this.INetworkAdapter_attachToInternalNetworkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_attachToInternalNetworkOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_attachToInternalNetwork", new object[] {
                    _this}, this.INetworkAdapter_attachToInternalNetworkOperationCompleted, userState);
        }

        private void OnINetworkAdapter_attachToInternalNetworkOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_attachToInternalNetworkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_attachToInternalNetworkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void INetworkAdapter_detach([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("INetworkAdapter_detach", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginINetworkAdapter_detach(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("INetworkAdapter_detach", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndINetworkAdapter_detach(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void INetworkAdapter_detachAsync(string _this)
        {
            this.INetworkAdapter_detachAsync(_this, null);
        }

        /// <remarks/>
        public void INetworkAdapter_detachAsync(string _this, object userState)
        {
            if ((this.INetworkAdapter_detachOperationCompleted == null))
            {
                this.INetworkAdapter_detachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINetworkAdapter_detachOperationCompleted);
            }
            this.InvokeAsync("INetworkAdapter_detach", new object[] {
                    _this}, this.INetworkAdapter_detachOperationCompleted, userState);
        }

        private void OnINetworkAdapter_detachOperationCompleted(object arg)
        {
            if ((this.INetworkAdapter_detachCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INetworkAdapter_detachCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISerialPort_getSlot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISerialPort_getSlot", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_getSlot(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_getSlot", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISerialPort_getSlot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISerialPort_getSlotAsync(string _this)
        {
            this.ISerialPort_getSlotAsync(_this, null);
        }

        /// <remarks/>
        public void ISerialPort_getSlotAsync(string _this, object userState)
        {
            if ((this.ISerialPort_getSlotOperationCompleted == null))
            {
                this.ISerialPort_getSlotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_getSlotOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_getSlot", new object[] {
                    _this}, this.ISerialPort_getSlotOperationCompleted, userState);
        }

        private void OnISerialPort_getSlotOperationCompleted(object arg)
        {
            if ((this.ISerialPort_getSlotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_getSlotCompleted(this, new ISerialPort_getSlotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ISerialPort_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISerialPort_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndISerialPort_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ISerialPort_getEnabledAsync(string _this)
        {
            this.ISerialPort_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void ISerialPort_getEnabledAsync(string _this, object userState)
        {
            if ((this.ISerialPort_getEnabledOperationCompleted == null))
            {
                this.ISerialPort_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_getEnabledOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_getEnabled", new object[] {
                    _this}, this.ISerialPort_getEnabledOperationCompleted, userState);
        }

        private void OnISerialPort_getEnabledOperationCompleted(object arg)
        {
            if ((this.ISerialPort_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_getEnabledCompleted(this, new ISerialPort_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISerialPort_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("ISerialPort_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISerialPort_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISerialPort_setEnabledAsync(string _this, bool enabled)
        {
            this.ISerialPort_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void ISerialPort_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.ISerialPort_setEnabledOperationCompleted == null))
            {
                this.ISerialPort_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_setEnabledOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_setEnabled", new object[] {
                    _this,
                    enabled}, this.ISerialPort_setEnabledOperationCompleted, userState);
        }

        private void OnISerialPort_setEnabledOperationCompleted(object arg)
        {
            if ((this.ISerialPort_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISerialPort_getIOBase([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISerialPort_getIOBase", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_getIOBase(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_getIOBase", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISerialPort_getIOBase(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISerialPort_getIOBaseAsync(string _this)
        {
            this.ISerialPort_getIOBaseAsync(_this, null);
        }

        /// <remarks/>
        public void ISerialPort_getIOBaseAsync(string _this, object userState)
        {
            if ((this.ISerialPort_getIOBaseOperationCompleted == null))
            {
                this.ISerialPort_getIOBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_getIOBaseOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_getIOBase", new object[] {
                    _this}, this.ISerialPort_getIOBaseOperationCompleted, userState);
        }

        private void OnISerialPort_getIOBaseOperationCompleted(object arg)
        {
            if ((this.ISerialPort_getIOBaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_getIOBaseCompleted(this, new ISerialPort_getIOBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISerialPort_setIOBase([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint IOBase)
        {
            this.Invoke("ISerialPort_setIOBase", new object[] {
                    _this,
                    IOBase});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_setIOBase(string _this, uint IOBase, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_setIOBase", new object[] {
                    _this,
                    IOBase}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISerialPort_setIOBase(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISerialPort_setIOBaseAsync(string _this, uint IOBase)
        {
            this.ISerialPort_setIOBaseAsync(_this, IOBase, null);
        }

        /// <remarks/>
        public void ISerialPort_setIOBaseAsync(string _this, uint IOBase, object userState)
        {
            if ((this.ISerialPort_setIOBaseOperationCompleted == null))
            {
                this.ISerialPort_setIOBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_setIOBaseOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_setIOBase", new object[] {
                    _this,
                    IOBase}, this.ISerialPort_setIOBaseOperationCompleted, userState);
        }

        private void OnISerialPort_setIOBaseOperationCompleted(object arg)
        {
            if ((this.ISerialPort_setIOBaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_setIOBaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISerialPort_getIRQ([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISerialPort_getIRQ", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_getIRQ(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_getIRQ", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISerialPort_getIRQ(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISerialPort_getIRQAsync(string _this)
        {
            this.ISerialPort_getIRQAsync(_this, null);
        }

        /// <remarks/>
        public void ISerialPort_getIRQAsync(string _this, object userState)
        {
            if ((this.ISerialPort_getIRQOperationCompleted == null))
            {
                this.ISerialPort_getIRQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_getIRQOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_getIRQ", new object[] {
                    _this}, this.ISerialPort_getIRQOperationCompleted, userState);
        }

        private void OnISerialPort_getIRQOperationCompleted(object arg)
        {
            if ((this.ISerialPort_getIRQCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_getIRQCompleted(this, new ISerialPort_getIRQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISerialPort_setIRQ([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint IRQ)
        {
            this.Invoke("ISerialPort_setIRQ", new object[] {
                    _this,
                    IRQ});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_setIRQ(string _this, uint IRQ, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_setIRQ", new object[] {
                    _this,
                    IRQ}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISerialPort_setIRQ(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISerialPort_setIRQAsync(string _this, uint IRQ)
        {
            this.ISerialPort_setIRQAsync(_this, IRQ, null);
        }

        /// <remarks/>
        public void ISerialPort_setIRQAsync(string _this, uint IRQ, object userState)
        {
            if ((this.ISerialPort_setIRQOperationCompleted == null))
            {
                this.ISerialPort_setIRQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_setIRQOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_setIRQ", new object[] {
                    _this,
                    IRQ}, this.ISerialPort_setIRQOperationCompleted, userState);
        }

        private void OnISerialPort_setIRQOperationCompleted(object arg)
        {
            if ((this.ISerialPort_setIRQCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_setIRQCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PortMode ISerialPort_getHostMode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISerialPort_getHostMode", new object[] {
                    _this});
            return ((PortMode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_getHostMode(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_getHostMode", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public PortMode EndISerialPort_getHostMode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((PortMode)(results[0]));
        }

        /// <remarks/>
        public void ISerialPort_getHostModeAsync(string _this)
        {
            this.ISerialPort_getHostModeAsync(_this, null);
        }

        /// <remarks/>
        public void ISerialPort_getHostModeAsync(string _this, object userState)
        {
            if ((this.ISerialPort_getHostModeOperationCompleted == null))
            {
                this.ISerialPort_getHostModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_getHostModeOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_getHostMode", new object[] {
                    _this}, this.ISerialPort_getHostModeOperationCompleted, userState);
        }

        private void OnISerialPort_getHostModeOperationCompleted(object arg)
        {
            if ((this.ISerialPort_getHostModeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_getHostModeCompleted(this, new ISerialPort_getHostModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISerialPort_setHostMode([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] PortMode hostMode)
        {
            this.Invoke("ISerialPort_setHostMode", new object[] {
                    _this,
                    hostMode});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_setHostMode(string _this, PortMode hostMode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_setHostMode", new object[] {
                    _this,
                    hostMode}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISerialPort_setHostMode(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISerialPort_setHostModeAsync(string _this, PortMode hostMode)
        {
            this.ISerialPort_setHostModeAsync(_this, hostMode, null);
        }

        /// <remarks/>
        public void ISerialPort_setHostModeAsync(string _this, PortMode hostMode, object userState)
        {
            if ((this.ISerialPort_setHostModeOperationCompleted == null))
            {
                this.ISerialPort_setHostModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_setHostModeOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_setHostMode", new object[] {
                    _this,
                    hostMode}, this.ISerialPort_setHostModeOperationCompleted, userState);
        }

        private void OnISerialPort_setHostModeOperationCompleted(object arg)
        {
            if ((this.ISerialPort_setHostModeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_setHostModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ISerialPort_getServer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISerialPort_getServer", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_getServer(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_getServer", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndISerialPort_getServer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ISerialPort_getServerAsync(string _this)
        {
            this.ISerialPort_getServerAsync(_this, null);
        }

        /// <remarks/>
        public void ISerialPort_getServerAsync(string _this, object userState)
        {
            if ((this.ISerialPort_getServerOperationCompleted == null))
            {
                this.ISerialPort_getServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_getServerOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_getServer", new object[] {
                    _this}, this.ISerialPort_getServerOperationCompleted, userState);
        }

        private void OnISerialPort_getServerOperationCompleted(object arg)
        {
            if ((this.ISerialPort_getServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_getServerCompleted(this, new ISerialPort_getServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISerialPort_setServer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool server)
        {
            this.Invoke("ISerialPort_setServer", new object[] {
                    _this,
                    server});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_setServer(string _this, bool server, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_setServer", new object[] {
                    _this,
                    server}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISerialPort_setServer(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISerialPort_setServerAsync(string _this, bool server)
        {
            this.ISerialPort_setServerAsync(_this, server, null);
        }

        /// <remarks/>
        public void ISerialPort_setServerAsync(string _this, bool server, object userState)
        {
            if ((this.ISerialPort_setServerOperationCompleted == null))
            {
                this.ISerialPort_setServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_setServerOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_setServer", new object[] {
                    _this,
                    server}, this.ISerialPort_setServerOperationCompleted, userState);
        }

        private void OnISerialPort_setServerOperationCompleted(object arg)
        {
            if ((this.ISerialPort_setServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_setServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISerialPort_getPath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISerialPort_getPath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_getPath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_getPath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISerialPort_getPath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISerialPort_getPathAsync(string _this)
        {
            this.ISerialPort_getPathAsync(_this, null);
        }

        /// <remarks/>
        public void ISerialPort_getPathAsync(string _this, object userState)
        {
            if ((this.ISerialPort_getPathOperationCompleted == null))
            {
                this.ISerialPort_getPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_getPathOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_getPath", new object[] {
                    _this}, this.ISerialPort_getPathOperationCompleted, userState);
        }

        private void OnISerialPort_getPathOperationCompleted(object arg)
        {
            if ((this.ISerialPort_getPathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_getPathCompleted(this, new ISerialPort_getPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISerialPort_setPath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string path)
        {
            this.Invoke("ISerialPort_setPath", new object[] {
                    _this,
                    path});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISerialPort_setPath(string _this, string path, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISerialPort_setPath", new object[] {
                    _this,
                    path}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISerialPort_setPath(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISerialPort_setPathAsync(string _this, string path)
        {
            this.ISerialPort_setPathAsync(_this, path, null);
        }

        /// <remarks/>
        public void ISerialPort_setPathAsync(string _this, string path, object userState)
        {
            if ((this.ISerialPort_setPathOperationCompleted == null))
            {
                this.ISerialPort_setPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISerialPort_setPathOperationCompleted);
            }
            this.InvokeAsync("ISerialPort_setPath", new object[] {
                    _this,
                    path}, this.ISerialPort_setPathOperationCompleted, userState);
        }

        private void OnISerialPort_setPathOperationCompleted(object arg)
        {
            if ((this.ISerialPort_setPathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISerialPort_setPathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IParallelPort_getSlot([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IParallelPort_getSlot", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_getSlot(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_getSlot", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIParallelPort_getSlot(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IParallelPort_getSlotAsync(string _this)
        {
            this.IParallelPort_getSlotAsync(_this, null);
        }

        /// <remarks/>
        public void IParallelPort_getSlotAsync(string _this, object userState)
        {
            if ((this.IParallelPort_getSlotOperationCompleted == null))
            {
                this.IParallelPort_getSlotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_getSlotOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_getSlot", new object[] {
                    _this}, this.IParallelPort_getSlotOperationCompleted, userState);
        }

        private void OnIParallelPort_getSlotOperationCompleted(object arg)
        {
            if ((this.IParallelPort_getSlotCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_getSlotCompleted(this, new IParallelPort_getSlotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IParallelPort_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IParallelPort_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIParallelPort_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IParallelPort_getEnabledAsync(string _this)
        {
            this.IParallelPort_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IParallelPort_getEnabledAsync(string _this, object userState)
        {
            if ((this.IParallelPort_getEnabledOperationCompleted == null))
            {
                this.IParallelPort_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_getEnabledOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_getEnabled", new object[] {
                    _this}, this.IParallelPort_getEnabledOperationCompleted, userState);
        }

        private void OnIParallelPort_getEnabledOperationCompleted(object arg)
        {
            if ((this.IParallelPort_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_getEnabledCompleted(this, new IParallelPort_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IParallelPort_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("IParallelPort_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIParallelPort_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IParallelPort_setEnabledAsync(string _this, bool enabled)
        {
            this.IParallelPort_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void IParallelPort_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.IParallelPort_setEnabledOperationCompleted == null))
            {
                this.IParallelPort_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_setEnabledOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_setEnabled", new object[] {
                    _this,
                    enabled}, this.IParallelPort_setEnabledOperationCompleted, userState);
        }

        private void OnIParallelPort_setEnabledOperationCompleted(object arg)
        {
            if ((this.IParallelPort_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IParallelPort_getIOBase([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IParallelPort_getIOBase", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_getIOBase(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_getIOBase", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIParallelPort_getIOBase(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IParallelPort_getIOBaseAsync(string _this)
        {
            this.IParallelPort_getIOBaseAsync(_this, null);
        }

        /// <remarks/>
        public void IParallelPort_getIOBaseAsync(string _this, object userState)
        {
            if ((this.IParallelPort_getIOBaseOperationCompleted == null))
            {
                this.IParallelPort_getIOBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_getIOBaseOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_getIOBase", new object[] {
                    _this}, this.IParallelPort_getIOBaseOperationCompleted, userState);
        }

        private void OnIParallelPort_getIOBaseOperationCompleted(object arg)
        {
            if ((this.IParallelPort_getIOBaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_getIOBaseCompleted(this, new IParallelPort_getIOBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IParallelPort_setIOBase([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint IOBase)
        {
            this.Invoke("IParallelPort_setIOBase", new object[] {
                    _this,
                    IOBase});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_setIOBase(string _this, uint IOBase, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_setIOBase", new object[] {
                    _this,
                    IOBase}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIParallelPort_setIOBase(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IParallelPort_setIOBaseAsync(string _this, uint IOBase)
        {
            this.IParallelPort_setIOBaseAsync(_this, IOBase, null);
        }

        /// <remarks/>
        public void IParallelPort_setIOBaseAsync(string _this, uint IOBase, object userState)
        {
            if ((this.IParallelPort_setIOBaseOperationCompleted == null))
            {
                this.IParallelPort_setIOBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_setIOBaseOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_setIOBase", new object[] {
                    _this,
                    IOBase}, this.IParallelPort_setIOBaseOperationCompleted, userState);
        }

        private void OnIParallelPort_setIOBaseOperationCompleted(object arg)
        {
            if ((this.IParallelPort_setIOBaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_setIOBaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IParallelPort_getIRQ([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IParallelPort_getIRQ", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_getIRQ(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_getIRQ", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIParallelPort_getIRQ(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IParallelPort_getIRQAsync(string _this)
        {
            this.IParallelPort_getIRQAsync(_this, null);
        }

        /// <remarks/>
        public void IParallelPort_getIRQAsync(string _this, object userState)
        {
            if ((this.IParallelPort_getIRQOperationCompleted == null))
            {
                this.IParallelPort_getIRQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_getIRQOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_getIRQ", new object[] {
                    _this}, this.IParallelPort_getIRQOperationCompleted, userState);
        }

        private void OnIParallelPort_getIRQOperationCompleted(object arg)
        {
            if ((this.IParallelPort_getIRQCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_getIRQCompleted(this, new IParallelPort_getIRQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IParallelPort_setIRQ([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint IRQ)
        {
            this.Invoke("IParallelPort_setIRQ", new object[] {
                    _this,
                    IRQ});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_setIRQ(string _this, uint IRQ, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_setIRQ", new object[] {
                    _this,
                    IRQ}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIParallelPort_setIRQ(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IParallelPort_setIRQAsync(string _this, uint IRQ)
        {
            this.IParallelPort_setIRQAsync(_this, IRQ, null);
        }

        /// <remarks/>
        public void IParallelPort_setIRQAsync(string _this, uint IRQ, object userState)
        {
            if ((this.IParallelPort_setIRQOperationCompleted == null))
            {
                this.IParallelPort_setIRQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_setIRQOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_setIRQ", new object[] {
                    _this,
                    IRQ}, this.IParallelPort_setIRQOperationCompleted, userState);
        }

        private void OnIParallelPort_setIRQOperationCompleted(object arg)
        {
            if ((this.IParallelPort_setIRQCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_setIRQCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IParallelPort_getPath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IParallelPort_getPath", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_getPath(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_getPath", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIParallelPort_getPath(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IParallelPort_getPathAsync(string _this)
        {
            this.IParallelPort_getPathAsync(_this, null);
        }

        /// <remarks/>
        public void IParallelPort_getPathAsync(string _this, object userState)
        {
            if ((this.IParallelPort_getPathOperationCompleted == null))
            {
                this.IParallelPort_getPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_getPathOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_getPath", new object[] {
                    _this}, this.IParallelPort_getPathOperationCompleted, userState);
        }

        private void OnIParallelPort_getPathOperationCompleted(object arg)
        {
            if ((this.IParallelPort_getPathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_getPathCompleted(this, new IParallelPort_getPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IParallelPort_setPath([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string path)
        {
            this.Invoke("IParallelPort_setPath", new object[] {
                    _this,
                    path});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIParallelPort_setPath(string _this, string path, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IParallelPort_setPath", new object[] {
                    _this,
                    path}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIParallelPort_setPath(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IParallelPort_setPathAsync(string _this, string path)
        {
            this.IParallelPort_setPathAsync(_this, path, null);
        }

        /// <remarks/>
        public void IParallelPort_setPathAsync(string _this, string path, object userState)
        {
            if ((this.IParallelPort_setPathOperationCompleted == null))
            {
                this.IParallelPort_setPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIParallelPort_setPathOperationCompleted);
            }
            this.InvokeAsync("IParallelPort_setPath", new object[] {
                    _this,
                    path}, this.IParallelPort_setPathOperationCompleted, userState);
        }

        private void OnIParallelPort_setPathOperationCompleted(object arg)
        {
            if ((this.IParallelPort_setPathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IParallelPort_setPathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IUSBController_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBController_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIUSBController_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IUSBController_getEnabledAsync(string _this)
        {
            this.IUSBController_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBController_getEnabledAsync(string _this, object userState)
        {
            if ((this.IUSBController_getEnabledOperationCompleted == null))
            {
                this.IUSBController_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_getEnabledOperationCompleted);
            }
            this.InvokeAsync("IUSBController_getEnabled", new object[] {
                    _this}, this.IUSBController_getEnabledOperationCompleted, userState);
        }

        private void OnIUSBController_getEnabledOperationCompleted(object arg)
        {
            if ((this.IUSBController_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_getEnabledCompleted(this, new IUSBController_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBController_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("IUSBController_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBController_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBController_setEnabledAsync(string _this, bool enabled)
        {
            this.IUSBController_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void IUSBController_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.IUSBController_setEnabledOperationCompleted == null))
            {
                this.IUSBController_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_setEnabledOperationCompleted);
            }
            this.InvokeAsync("IUSBController_setEnabled", new object[] {
                    _this,
                    enabled}, this.IUSBController_setEnabledOperationCompleted, userState);
        }

        private void OnIUSBController_setEnabledOperationCompleted(object arg)
        {
            if ((this.IUSBController_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IUSBController_getEnabledEhci([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBController_getEnabledEhci", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_getEnabledEhci(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_getEnabledEhci", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIUSBController_getEnabledEhci(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IUSBController_getEnabledEhciAsync(string _this)
        {
            this.IUSBController_getEnabledEhciAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBController_getEnabledEhciAsync(string _this, object userState)
        {
            if ((this.IUSBController_getEnabledEhciOperationCompleted == null))
            {
                this.IUSBController_getEnabledEhciOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_getEnabledEhciOperationCompleted);
            }
            this.InvokeAsync("IUSBController_getEnabledEhci", new object[] {
                    _this}, this.IUSBController_getEnabledEhciOperationCompleted, userState);
        }

        private void OnIUSBController_getEnabledEhciOperationCompleted(object arg)
        {
            if ((this.IUSBController_getEnabledEhciCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_getEnabledEhciCompleted(this, new IUSBController_getEnabledEhciCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBController_setEnabledEhci([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabledEhci)
        {
            this.Invoke("IUSBController_setEnabledEhci", new object[] {
                    _this,
                    enabledEhci});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_setEnabledEhci(string _this, bool enabledEhci, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_setEnabledEhci", new object[] {
                    _this,
                    enabledEhci}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBController_setEnabledEhci(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBController_setEnabledEhciAsync(string _this, bool enabledEhci)
        {
            this.IUSBController_setEnabledEhciAsync(_this, enabledEhci, null);
        }

        /// <remarks/>
        public void IUSBController_setEnabledEhciAsync(string _this, bool enabledEhci, object userState)
        {
            if ((this.IUSBController_setEnabledEhciOperationCompleted == null))
            {
                this.IUSBController_setEnabledEhciOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_setEnabledEhciOperationCompleted);
            }
            this.InvokeAsync("IUSBController_setEnabledEhci", new object[] {
                    _this,
                    enabledEhci}, this.IUSBController_setEnabledEhciOperationCompleted, userState);
        }

        private void OnIUSBController_setEnabledEhciOperationCompleted(object arg)
        {
            if ((this.IUSBController_setEnabledEhciCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_setEnabledEhciCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IUSBController_getUSBStandard([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBController_getUSBStandard", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_getUSBStandard(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_getUSBStandard", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIUSBController_getUSBStandard(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IUSBController_getUSBStandardAsync(string _this)
        {
            this.IUSBController_getUSBStandardAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBController_getUSBStandardAsync(string _this, object userState)
        {
            if ((this.IUSBController_getUSBStandardOperationCompleted == null))
            {
                this.IUSBController_getUSBStandardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_getUSBStandardOperationCompleted);
            }
            this.InvokeAsync("IUSBController_getUSBStandard", new object[] {
                    _this}, this.IUSBController_getUSBStandardOperationCompleted, userState);
        }

        private void OnIUSBController_getUSBStandardOperationCompleted(object arg)
        {
            if ((this.IUSBController_getUSBStandardCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_getUSBStandardCompleted(this, new IUSBController_getUSBStandardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("array", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = false)]
        public string[] IUSBController_getDeviceFilters([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBController_getDeviceFilters", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_getDeviceFilters(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_getDeviceFilters", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIUSBController_getDeviceFilters(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IUSBController_getDeviceFiltersAsync(string _this)
        {
            this.IUSBController_getDeviceFiltersAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBController_getDeviceFiltersAsync(string _this, object userState)
        {
            if ((this.IUSBController_getDeviceFiltersOperationCompleted == null))
            {
                this.IUSBController_getDeviceFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_getDeviceFiltersOperationCompleted);
            }
            this.InvokeAsync("IUSBController_getDeviceFilters", new object[] {
                    _this}, this.IUSBController_getDeviceFiltersOperationCompleted, userState);
        }

        private void OnIUSBController_getDeviceFiltersOperationCompleted(object arg)
        {
            if ((this.IUSBController_getDeviceFiltersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_getDeviceFiltersCompleted(this, new IUSBController_getDeviceFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBController_createDeviceFilter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            object[] results = this.Invoke("IUSBController_createDeviceFilter", new object[] {
                    _this,
                    name});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_createDeviceFilter(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_createDeviceFilter", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBController_createDeviceFilter(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBController_createDeviceFilterAsync(string _this, string name)
        {
            this.IUSBController_createDeviceFilterAsync(_this, name, null);
        }

        /// <remarks/>
        public void IUSBController_createDeviceFilterAsync(string _this, string name, object userState)
        {
            if ((this.IUSBController_createDeviceFilterOperationCompleted == null))
            {
                this.IUSBController_createDeviceFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_createDeviceFilterOperationCompleted);
            }
            this.InvokeAsync("IUSBController_createDeviceFilter", new object[] {
                    _this,
                    name}, this.IUSBController_createDeviceFilterOperationCompleted, userState);
        }

        private void OnIUSBController_createDeviceFilterOperationCompleted(object arg)
        {
            if ((this.IUSBController_createDeviceFilterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_createDeviceFilterCompleted(this, new IUSBController_createDeviceFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBController_insertDeviceFilter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint position, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filter)
        {
            this.Invoke("IUSBController_insertDeviceFilter", new object[] {
                    _this,
                    position,
                    filter});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_insertDeviceFilter(string _this, uint position, string filter, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_insertDeviceFilter", new object[] {
                    _this,
                    position,
                    filter}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBController_insertDeviceFilter(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBController_insertDeviceFilterAsync(string _this, uint position, string filter)
        {
            this.IUSBController_insertDeviceFilterAsync(_this, position, filter, null);
        }

        /// <remarks/>
        public void IUSBController_insertDeviceFilterAsync(string _this, uint position, string filter, object userState)
        {
            if ((this.IUSBController_insertDeviceFilterOperationCompleted == null))
            {
                this.IUSBController_insertDeviceFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_insertDeviceFilterOperationCompleted);
            }
            this.InvokeAsync("IUSBController_insertDeviceFilter", new object[] {
                    _this,
                    position,
                    filter}, this.IUSBController_insertDeviceFilterOperationCompleted, userState);
        }

        private void OnIUSBController_insertDeviceFilterOperationCompleted(object arg)
        {
            if ((this.IUSBController_insertDeviceFilterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_insertDeviceFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBController_removeDeviceFilter([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint position)
        {
            object[] results = this.Invoke("IUSBController_removeDeviceFilter", new object[] {
                    _this,
                    position});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBController_removeDeviceFilter(string _this, uint position, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBController_removeDeviceFilter", new object[] {
                    _this,
                    position}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBController_removeDeviceFilter(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBController_removeDeviceFilterAsync(string _this, uint position)
        {
            this.IUSBController_removeDeviceFilterAsync(_this, position, null);
        }

        /// <remarks/>
        public void IUSBController_removeDeviceFilterAsync(string _this, uint position, object userState)
        {
            if ((this.IUSBController_removeDeviceFilterOperationCompleted == null))
            {
                this.IUSBController_removeDeviceFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBController_removeDeviceFilterOperationCompleted);
            }
            this.InvokeAsync("IUSBController_removeDeviceFilter", new object[] {
                    _this,
                    position}, this.IUSBController_removeDeviceFilterOperationCompleted, userState);
        }

        private void OnIUSBController_removeDeviceFilterOperationCompleted(object arg)
        {
            if ((this.IUSBController_removeDeviceFilterCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBController_removeDeviceFilterCompleted(this, new IUSBController_removeDeviceFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDevice_getId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDevice_getId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getIdAsync(string _this)
        {
            this.IUSBDevice_getIdAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getIdAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getIdOperationCompleted == null))
            {
                this.IUSBDevice_getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getIdOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getId", new object[] {
                    _this}, this.IUSBDevice_getIdOperationCompleted, userState);
        }

        private void OnIUSBDevice_getIdOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getIdCompleted(this, new IUSBDevice_getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IUSBDevice_getVendorId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getVendorId", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getVendorId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getVendorId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIUSBDevice_getVendorId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getVendorIdAsync(string _this)
        {
            this.IUSBDevice_getVendorIdAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getVendorIdAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getVendorIdOperationCompleted == null))
            {
                this.IUSBDevice_getVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getVendorIdOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getVendorId", new object[] {
                    _this}, this.IUSBDevice_getVendorIdOperationCompleted, userState);
        }

        private void OnIUSBDevice_getVendorIdOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getVendorIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getVendorIdCompleted(this, new IUSBDevice_getVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IUSBDevice_getProductId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getProductId", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getProductId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getProductId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIUSBDevice_getProductId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getProductIdAsync(string _this)
        {
            this.IUSBDevice_getProductIdAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getProductIdAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getProductIdOperationCompleted == null))
            {
                this.IUSBDevice_getProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getProductIdOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getProductId", new object[] {
                    _this}, this.IUSBDevice_getProductIdOperationCompleted, userState);
        }

        private void OnIUSBDevice_getProductIdOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getProductIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getProductIdCompleted(this, new IUSBDevice_getProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IUSBDevice_getRevision([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getRevision", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getRevision(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getRevision", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIUSBDevice_getRevision(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getRevisionAsync(string _this)
        {
            this.IUSBDevice_getRevisionAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getRevisionAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getRevisionOperationCompleted == null))
            {
                this.IUSBDevice_getRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getRevisionOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getRevision", new object[] {
                    _this}, this.IUSBDevice_getRevisionOperationCompleted, userState);
        }

        private void OnIUSBDevice_getRevisionOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getRevisionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getRevisionCompleted(this, new IUSBDevice_getRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDevice_getManufacturer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getManufacturer", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getManufacturer(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getManufacturer", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDevice_getManufacturer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getManufacturerAsync(string _this)
        {
            this.IUSBDevice_getManufacturerAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getManufacturerAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getManufacturerOperationCompleted == null))
            {
                this.IUSBDevice_getManufacturerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getManufacturerOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getManufacturer", new object[] {
                    _this}, this.IUSBDevice_getManufacturerOperationCompleted, userState);
        }

        private void OnIUSBDevice_getManufacturerOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getManufacturerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getManufacturerCompleted(this, new IUSBDevice_getManufacturerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDevice_getProduct([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getProduct", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getProduct(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getProduct", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDevice_getProduct(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getProductAsync(string _this)
        {
            this.IUSBDevice_getProductAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getProductAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getProductOperationCompleted == null))
            {
                this.IUSBDevice_getProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getProductOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getProduct", new object[] {
                    _this}, this.IUSBDevice_getProductOperationCompleted, userState);
        }

        private void OnIUSBDevice_getProductOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getProductCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getProductCompleted(this, new IUSBDevice_getProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDevice_getSerialNumber([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getSerialNumber", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getSerialNumber(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getSerialNumber", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDevice_getSerialNumber(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getSerialNumberAsync(string _this)
        {
            this.IUSBDevice_getSerialNumberAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getSerialNumberAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getSerialNumberOperationCompleted == null))
            {
                this.IUSBDevice_getSerialNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getSerialNumberOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getSerialNumber", new object[] {
                    _this}, this.IUSBDevice_getSerialNumberOperationCompleted, userState);
        }

        private void OnIUSBDevice_getSerialNumberOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getSerialNumberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getSerialNumberCompleted(this, new IUSBDevice_getSerialNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDevice_getAddress([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getAddress", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getAddress(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getAddress", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDevice_getAddress(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getAddressAsync(string _this)
        {
            this.IUSBDevice_getAddressAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getAddressAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getAddressOperationCompleted == null))
            {
                this.IUSBDevice_getAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getAddressOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getAddress", new object[] {
                    _this}, this.IUSBDevice_getAddressOperationCompleted, userState);
        }

        private void OnIUSBDevice_getAddressOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getAddressCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getAddressCompleted(this, new IUSBDevice_getAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IUSBDevice_getPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getPort", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getPort(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getPort", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIUSBDevice_getPort(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getPortAsync(string _this)
        {
            this.IUSBDevice_getPortAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getPortAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getPortOperationCompleted == null))
            {
                this.IUSBDevice_getPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getPortOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getPort", new object[] {
                    _this}, this.IUSBDevice_getPortOperationCompleted, userState);
        }

        private void OnIUSBDevice_getPortOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getPortCompleted(this, new IUSBDevice_getPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IUSBDevice_getVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getVersion", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getVersion(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getVersion", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIUSBDevice_getVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getVersionAsync(string _this)
        {
            this.IUSBDevice_getVersionAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getVersionAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getVersionOperationCompleted == null))
            {
                this.IUSBDevice_getVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getVersionOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getVersion", new object[] {
                    _this}, this.IUSBDevice_getVersionOperationCompleted, userState);
        }

        private void OnIUSBDevice_getVersionOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getVersionCompleted(this, new IUSBDevice_getVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ushort IUSBDevice_getPortVersion([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getPortVersion", new object[] {
                    _this});
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getPortVersion(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getPortVersion", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public ushort EndIUSBDevice_getPortVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ushort)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getPortVersionAsync(string _this)
        {
            this.IUSBDevice_getPortVersionAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getPortVersionAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getPortVersionOperationCompleted == null))
            {
                this.IUSBDevice_getPortVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getPortVersionOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getPortVersion", new object[] {
                    _this}, this.IUSBDevice_getPortVersionOperationCompleted, userState);
        }

        private void OnIUSBDevice_getPortVersionOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getPortVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getPortVersionCompleted(this, new IUSBDevice_getPortVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IUSBDevice_getRemote([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDevice_getRemote", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDevice_getRemote(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDevice_getRemote", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIUSBDevice_getRemote(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IUSBDevice_getRemoteAsync(string _this)
        {
            this.IUSBDevice_getRemoteAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDevice_getRemoteAsync(string _this, object userState)
        {
            if ((this.IUSBDevice_getRemoteOperationCompleted == null))
            {
                this.IUSBDevice_getRemoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDevice_getRemoteOperationCompleted);
            }
            this.InvokeAsync("IUSBDevice_getRemote", new object[] {
                    _this}, this.IUSBDevice_getRemoteOperationCompleted, userState);
        }

        private void OnIUSBDevice_getRemoteOperationCompleted(object arg)
        {
            if ((this.IUSBDevice_getRemoteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDevice_getRemoteCompleted(this, new IUSBDevice_getRemoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getNameAsync(string _this)
        {
            this.IUSBDeviceFilter_getNameAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getNameAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getNameOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getNameOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getName", new object[] {
                    _this}, this.IUSBDeviceFilter_getNameOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getNameOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getNameCompleted(this, new IUSBDeviceFilter_getNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            this.Invoke("IUSBDeviceFilter_setName", new object[] {
                    _this,
                    name});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setName(string _this, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setName", new object[] {
                    _this,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setName(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setNameAsync(string _this, string name)
        {
            this.IUSBDeviceFilter_setNameAsync(_this, name, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setNameAsync(string _this, string name, object userState)
        {
            if ((this.IUSBDeviceFilter_setNameOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setNameOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setName", new object[] {
                    _this,
                    name}, this.IUSBDeviceFilter_setNameOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setNameOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IUSBDeviceFilter_getActive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getActive", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getActive(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getActive", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIUSBDeviceFilter_getActive(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getActiveAsync(string _this)
        {
            this.IUSBDeviceFilter_getActiveAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getActiveAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getActiveOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getActiveOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getActive", new object[] {
                    _this}, this.IUSBDeviceFilter_getActiveOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getActiveOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getActiveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getActiveCompleted(this, new IUSBDeviceFilter_getActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setActive([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool active)
        {
            this.Invoke("IUSBDeviceFilter_setActive", new object[] {
                    _this,
                    active});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setActive(string _this, bool active, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setActive", new object[] {
                    _this,
                    active}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setActive(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setActiveAsync(string _this, bool active)
        {
            this.IUSBDeviceFilter_setActiveAsync(_this, active, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setActiveAsync(string _this, bool active, object userState)
        {
            if ((this.IUSBDeviceFilter_setActiveOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setActiveOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setActive", new object[] {
                    _this,
                    active}, this.IUSBDeviceFilter_setActiveOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setActiveOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setActiveCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setActiveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getVendorId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getVendorId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getVendorId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getVendorId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getVendorId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getVendorIdAsync(string _this)
        {
            this.IUSBDeviceFilter_getVendorIdAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getVendorIdAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getVendorIdOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getVendorIdOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getVendorId", new object[] {
                    _this}, this.IUSBDeviceFilter_getVendorIdOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getVendorIdOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getVendorIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getVendorIdCompleted(this, new IUSBDeviceFilter_getVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setVendorId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string vendorId)
        {
            this.Invoke("IUSBDeviceFilter_setVendorId", new object[] {
                    _this,
                    vendorId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setVendorId(string _this, string vendorId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setVendorId", new object[] {
                    _this,
                    vendorId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setVendorId(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setVendorIdAsync(string _this, string vendorId)
        {
            this.IUSBDeviceFilter_setVendorIdAsync(_this, vendorId, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setVendorIdAsync(string _this, string vendorId, object userState)
        {
            if ((this.IUSBDeviceFilter_setVendorIdOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setVendorIdOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setVendorId", new object[] {
                    _this,
                    vendorId}, this.IUSBDeviceFilter_setVendorIdOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setVendorIdOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setVendorIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setVendorIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getProductId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getProductId", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getProductId(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getProductId", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getProductId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getProductIdAsync(string _this)
        {
            this.IUSBDeviceFilter_getProductIdAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getProductIdAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getProductIdOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getProductIdOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getProductId", new object[] {
                    _this}, this.IUSBDeviceFilter_getProductIdOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getProductIdOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getProductIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getProductIdCompleted(this, new IUSBDeviceFilter_getProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setProductId([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string productId)
        {
            this.Invoke("IUSBDeviceFilter_setProductId", new object[] {
                    _this,
                    productId});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setProductId(string _this, string productId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setProductId", new object[] {
                    _this,
                    productId}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setProductId(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setProductIdAsync(string _this, string productId)
        {
            this.IUSBDeviceFilter_setProductIdAsync(_this, productId, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setProductIdAsync(string _this, string productId, object userState)
        {
            if ((this.IUSBDeviceFilter_setProductIdOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setProductIdOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setProductId", new object[] {
                    _this,
                    productId}, this.IUSBDeviceFilter_setProductIdOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setProductIdOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setProductIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setProductIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getRevision([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getRevision", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getRevision(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getRevision", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getRevision(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getRevisionAsync(string _this)
        {
            this.IUSBDeviceFilter_getRevisionAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getRevisionAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getRevisionOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getRevisionOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getRevision", new object[] {
                    _this}, this.IUSBDeviceFilter_getRevisionOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getRevisionOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getRevisionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getRevisionCompleted(this, new IUSBDeviceFilter_getRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setRevision([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string revision)
        {
            this.Invoke("IUSBDeviceFilter_setRevision", new object[] {
                    _this,
                    revision});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setRevision(string _this, string revision, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setRevision", new object[] {
                    _this,
                    revision}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setRevision(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setRevisionAsync(string _this, string revision)
        {
            this.IUSBDeviceFilter_setRevisionAsync(_this, revision, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setRevisionAsync(string _this, string revision, object userState)
        {
            if ((this.IUSBDeviceFilter_setRevisionOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setRevisionOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setRevision", new object[] {
                    _this,
                    revision}, this.IUSBDeviceFilter_setRevisionOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setRevisionOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setRevisionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setRevisionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getManufacturer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getManufacturer", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getManufacturer(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getManufacturer", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getManufacturer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getManufacturerAsync(string _this)
        {
            this.IUSBDeviceFilter_getManufacturerAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getManufacturerAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getManufacturerOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getManufacturerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getManufacturerOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getManufacturer", new object[] {
                    _this}, this.IUSBDeviceFilter_getManufacturerOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getManufacturerOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getManufacturerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getManufacturerCompleted(this, new IUSBDeviceFilter_getManufacturerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setManufacturer([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string manufacturer)
        {
            this.Invoke("IUSBDeviceFilter_setManufacturer", new object[] {
                    _this,
                    manufacturer});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setManufacturer(string _this, string manufacturer, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setManufacturer", new object[] {
                    _this,
                    manufacturer}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setManufacturer(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setManufacturerAsync(string _this, string manufacturer)
        {
            this.IUSBDeviceFilter_setManufacturerAsync(_this, manufacturer, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setManufacturerAsync(string _this, string manufacturer, object userState)
        {
            if ((this.IUSBDeviceFilter_setManufacturerOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setManufacturerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setManufacturerOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setManufacturer", new object[] {
                    _this,
                    manufacturer}, this.IUSBDeviceFilter_setManufacturerOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setManufacturerOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setManufacturerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setManufacturerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getProduct([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getProduct", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getProduct(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getProduct", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getProduct(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getProductAsync(string _this)
        {
            this.IUSBDeviceFilter_getProductAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getProductAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getProductOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getProductOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getProduct", new object[] {
                    _this}, this.IUSBDeviceFilter_getProductOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getProductOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getProductCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getProductCompleted(this, new IUSBDeviceFilter_getProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setProduct([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string product)
        {
            this.Invoke("IUSBDeviceFilter_setProduct", new object[] {
                    _this,
                    product});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setProduct(string _this, string product, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setProduct", new object[] {
                    _this,
                    product}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setProduct(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setProductAsync(string _this, string product)
        {
            this.IUSBDeviceFilter_setProductAsync(_this, product, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setProductAsync(string _this, string product, object userState)
        {
            if ((this.IUSBDeviceFilter_setProductOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setProductOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setProduct", new object[] {
                    _this,
                    product}, this.IUSBDeviceFilter_setProductOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setProductOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setProductCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getSerialNumber([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getSerialNumber", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getSerialNumber(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getSerialNumber", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getSerialNumber(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getSerialNumberAsync(string _this)
        {
            this.IUSBDeviceFilter_getSerialNumberAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getSerialNumberAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getSerialNumberOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getSerialNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getSerialNumberOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getSerialNumber", new object[] {
                    _this}, this.IUSBDeviceFilter_getSerialNumberOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getSerialNumberOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getSerialNumberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getSerialNumberCompleted(this, new IUSBDeviceFilter_getSerialNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setSerialNumber([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string serialNumber)
        {
            this.Invoke("IUSBDeviceFilter_setSerialNumber", new object[] {
                    _this,
                    serialNumber});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setSerialNumber(string _this, string serialNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setSerialNumber", new object[] {
                    _this,
                    serialNumber}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setSerialNumber(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setSerialNumberAsync(string _this, string serialNumber)
        {
            this.IUSBDeviceFilter_setSerialNumberAsync(_this, serialNumber, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setSerialNumberAsync(string _this, string serialNumber, object userState)
        {
            if ((this.IUSBDeviceFilter_setSerialNumberOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setSerialNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setSerialNumberOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setSerialNumber", new object[] {
                    _this,
                    serialNumber}, this.IUSBDeviceFilter_setSerialNumberOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setSerialNumberOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setSerialNumberCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setSerialNumberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getPort", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getPort(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getPort", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getPort(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getPortAsync(string _this)
        {
            this.IUSBDeviceFilter_getPortAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getPortAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getPortOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getPortOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getPort", new object[] {
                    _this}, this.IUSBDeviceFilter_getPortOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getPortOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getPortCompleted(this, new IUSBDeviceFilter_getPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string port)
        {
            this.Invoke("IUSBDeviceFilter_setPort", new object[] {
                    _this,
                    port});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setPort(string _this, string port, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setPort", new object[] {
                    _this,
                    port}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setPort(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setPortAsync(string _this, string port)
        {
            this.IUSBDeviceFilter_setPortAsync(_this, port, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setPortAsync(string _this, string port, object userState)
        {
            if ((this.IUSBDeviceFilter_setPortOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setPortOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setPort", new object[] {
                    _this,
                    port}, this.IUSBDeviceFilter_setPortOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setPortOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setPortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IUSBDeviceFilter_getRemote([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getRemote", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getRemote(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getRemote", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIUSBDeviceFilter_getRemote(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getRemoteAsync(string _this)
        {
            this.IUSBDeviceFilter_getRemoteAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getRemoteAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getRemoteOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getRemoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getRemoteOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getRemote", new object[] {
                    _this}, this.IUSBDeviceFilter_getRemoteOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getRemoteOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getRemoteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getRemoteCompleted(this, new IUSBDeviceFilter_getRemoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setRemote([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string remote)
        {
            this.Invoke("IUSBDeviceFilter_setRemote", new object[] {
                    _this,
                    remote});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setRemote(string _this, string remote, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setRemote", new object[] {
                    _this,
                    remote}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setRemote(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setRemoteAsync(string _this, string remote)
        {
            this.IUSBDeviceFilter_setRemoteAsync(_this, remote, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setRemoteAsync(string _this, string remote, object userState)
        {
            if ((this.IUSBDeviceFilter_setRemoteOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setRemoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setRemoteOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setRemote", new object[] {
                    _this,
                    remote}, this.IUSBDeviceFilter_setRemoteOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setRemoteOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setRemoteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setRemoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IUSBDeviceFilter_getMaskedInterfaces([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IUSBDeviceFilter_getMaskedInterfaces", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_getMaskedInterfaces(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_getMaskedInterfaces", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIUSBDeviceFilter_getMaskedInterfaces(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getMaskedInterfacesAsync(string _this)
        {
            this.IUSBDeviceFilter_getMaskedInterfacesAsync(_this, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_getMaskedInterfacesAsync(string _this, object userState)
        {
            if ((this.IUSBDeviceFilter_getMaskedInterfacesOperationCompleted == null))
            {
                this.IUSBDeviceFilter_getMaskedInterfacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_getMaskedInterfacesOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_getMaskedInterfaces", new object[] {
                    _this}, this.IUSBDeviceFilter_getMaskedInterfacesOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_getMaskedInterfacesOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_getMaskedInterfacesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_getMaskedInterfacesCompleted(this, new IUSBDeviceFilter_getMaskedInterfacesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IUSBDeviceFilter_setMaskedInterfaces([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint maskedInterfaces)
        {
            this.Invoke("IUSBDeviceFilter_setMaskedInterfaces", new object[] {
                    _this,
                    maskedInterfaces});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIUSBDeviceFilter_setMaskedInterfaces(string _this, uint maskedInterfaces, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IUSBDeviceFilter_setMaskedInterfaces", new object[] {
                    _this,
                    maskedInterfaces}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIUSBDeviceFilter_setMaskedInterfaces(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setMaskedInterfacesAsync(string _this, uint maskedInterfaces)
        {
            this.IUSBDeviceFilter_setMaskedInterfacesAsync(_this, maskedInterfaces, null);
        }

        /// <remarks/>
        public void IUSBDeviceFilter_setMaskedInterfacesAsync(string _this, uint maskedInterfaces, object userState)
        {
            if ((this.IUSBDeviceFilter_setMaskedInterfacesOperationCompleted == null))
            {
                this.IUSBDeviceFilter_setMaskedInterfacesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIUSBDeviceFilter_setMaskedInterfacesOperationCompleted);
            }
            this.InvokeAsync("IUSBDeviceFilter_setMaskedInterfaces", new object[] {
                    _this,
                    maskedInterfaces}, this.IUSBDeviceFilter_setMaskedInterfacesOperationCompleted, userState);
        }

        private void OnIUSBDeviceFilter_setMaskedInterfacesOperationCompleted(object arg)
        {
            if ((this.IUSBDeviceFilter_setMaskedInterfacesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IUSBDeviceFilter_setMaskedInterfacesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public USBDeviceState IHostUSBDevice_getState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostUSBDevice_getState", new object[] {
                    _this});
            return ((USBDeviceState)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostUSBDevice_getState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostUSBDevice_getState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public USBDeviceState EndIHostUSBDevice_getState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((USBDeviceState)(results[0]));
        }

        /// <remarks/>
        public void IHostUSBDevice_getStateAsync(string _this)
        {
            this.IHostUSBDevice_getStateAsync(_this, null);
        }

        /// <remarks/>
        public void IHostUSBDevice_getStateAsync(string _this, object userState)
        {
            if ((this.IHostUSBDevice_getStateOperationCompleted == null))
            {
                this.IHostUSBDevice_getStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostUSBDevice_getStateOperationCompleted);
            }
            this.InvokeAsync("IHostUSBDevice_getState", new object[] {
                    _this}, this.IHostUSBDevice_getStateOperationCompleted, userState);
        }

        private void OnIHostUSBDevice_getStateOperationCompleted(object arg)
        {
            if ((this.IHostUSBDevice_getStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostUSBDevice_getStateCompleted(this, new IHostUSBDevice_getStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public USBDeviceFilterAction IHostUSBDeviceFilter_getAction([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IHostUSBDeviceFilter_getAction", new object[] {
                    _this});
            return ((USBDeviceFilterAction)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostUSBDeviceFilter_getAction(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostUSBDeviceFilter_getAction", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public USBDeviceFilterAction EndIHostUSBDeviceFilter_getAction(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((USBDeviceFilterAction)(results[0]));
        }

        /// <remarks/>
        public void IHostUSBDeviceFilter_getActionAsync(string _this)
        {
            this.IHostUSBDeviceFilter_getActionAsync(_this, null);
        }

        /// <remarks/>
        public void IHostUSBDeviceFilter_getActionAsync(string _this, object userState)
        {
            if ((this.IHostUSBDeviceFilter_getActionOperationCompleted == null))
            {
                this.IHostUSBDeviceFilter_getActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostUSBDeviceFilter_getActionOperationCompleted);
            }
            this.InvokeAsync("IHostUSBDeviceFilter_getAction", new object[] {
                    _this}, this.IHostUSBDeviceFilter_getActionOperationCompleted, userState);
        }

        private void OnIHostUSBDeviceFilter_getActionOperationCompleted(object arg)
        {
            if ((this.IHostUSBDeviceFilter_getActionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostUSBDeviceFilter_getActionCompleted(this, new IHostUSBDeviceFilter_getActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IHostUSBDeviceFilter_setAction([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] USBDeviceFilterAction action)
        {
            this.Invoke("IHostUSBDeviceFilter_setAction", new object[] {
                    _this,
                    action});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIHostUSBDeviceFilter_setAction(string _this, USBDeviceFilterAction action, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IHostUSBDeviceFilter_setAction", new object[] {
                    _this,
                    action}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIHostUSBDeviceFilter_setAction(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IHostUSBDeviceFilter_setActionAsync(string _this, USBDeviceFilterAction action)
        {
            this.IHostUSBDeviceFilter_setActionAsync(_this, action, null);
        }

        /// <remarks/>
        public void IHostUSBDeviceFilter_setActionAsync(string _this, USBDeviceFilterAction action, object userState)
        {
            if ((this.IHostUSBDeviceFilter_setActionOperationCompleted == null))
            {
                this.IHostUSBDeviceFilter_setActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIHostUSBDeviceFilter_setActionOperationCompleted);
            }
            this.InvokeAsync("IHostUSBDeviceFilter_setAction", new object[] {
                    _this,
                    action}, this.IHostUSBDeviceFilter_setActionOperationCompleted, userState);
        }

        private void OnIHostUSBDeviceFilter_setActionOperationCompleted(object arg)
        {
            if ((this.IHostUSBDeviceFilter_setActionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IHostUSBDeviceFilter_setActionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IAudioAdapter_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IAudioAdapter_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIAudioAdapter_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IAudioAdapter_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIAudioAdapter_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IAudioAdapter_getEnabledAsync(string _this)
        {
            this.IAudioAdapter_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IAudioAdapter_getEnabledAsync(string _this, object userState)
        {
            if ((this.IAudioAdapter_getEnabledOperationCompleted == null))
            {
                this.IAudioAdapter_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIAudioAdapter_getEnabledOperationCompleted);
            }
            this.InvokeAsync("IAudioAdapter_getEnabled", new object[] {
                    _this}, this.IAudioAdapter_getEnabledOperationCompleted, userState);
        }

        private void OnIAudioAdapter_getEnabledOperationCompleted(object arg)
        {
            if ((this.IAudioAdapter_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IAudioAdapter_getEnabledCompleted(this, new IAudioAdapter_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IAudioAdapter_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("IAudioAdapter_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIAudioAdapter_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IAudioAdapter_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIAudioAdapter_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IAudioAdapter_setEnabledAsync(string _this, bool enabled)
        {
            this.IAudioAdapter_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void IAudioAdapter_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.IAudioAdapter_setEnabledOperationCompleted == null))
            {
                this.IAudioAdapter_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIAudioAdapter_setEnabledOperationCompleted);
            }
            this.InvokeAsync("IAudioAdapter_setEnabled", new object[] {
                    _this,
                    enabled}, this.IAudioAdapter_setEnabledOperationCompleted, userState);
        }

        private void OnIAudioAdapter_setEnabledOperationCompleted(object arg)
        {
            if ((this.IAudioAdapter_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IAudioAdapter_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioControllerType IAudioAdapter_getAudioController([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IAudioAdapter_getAudioController", new object[] {
                    _this});
            return ((AudioControllerType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIAudioAdapter_getAudioController(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IAudioAdapter_getAudioController", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public AudioControllerType EndIAudioAdapter_getAudioController(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AudioControllerType)(results[0]));
        }

        /// <remarks/>
        public void IAudioAdapter_getAudioControllerAsync(string _this)
        {
            this.IAudioAdapter_getAudioControllerAsync(_this, null);
        }

        /// <remarks/>
        public void IAudioAdapter_getAudioControllerAsync(string _this, object userState)
        {
            if ((this.IAudioAdapter_getAudioControllerOperationCompleted == null))
            {
                this.IAudioAdapter_getAudioControllerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIAudioAdapter_getAudioControllerOperationCompleted);
            }
            this.InvokeAsync("IAudioAdapter_getAudioController", new object[] {
                    _this}, this.IAudioAdapter_getAudioControllerOperationCompleted, userState);
        }

        private void OnIAudioAdapter_getAudioControllerOperationCompleted(object arg)
        {
            if ((this.IAudioAdapter_getAudioControllerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IAudioAdapter_getAudioControllerCompleted(this, new IAudioAdapter_getAudioControllerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IAudioAdapter_setAudioController([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] AudioControllerType audioController)
        {
            this.Invoke("IAudioAdapter_setAudioController", new object[] {
                    _this,
                    audioController});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIAudioAdapter_setAudioController(string _this, AudioControllerType audioController, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IAudioAdapter_setAudioController", new object[] {
                    _this,
                    audioController}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIAudioAdapter_setAudioController(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IAudioAdapter_setAudioControllerAsync(string _this, AudioControllerType audioController)
        {
            this.IAudioAdapter_setAudioControllerAsync(_this, audioController, null);
        }

        /// <remarks/>
        public void IAudioAdapter_setAudioControllerAsync(string _this, AudioControllerType audioController, object userState)
        {
            if ((this.IAudioAdapter_setAudioControllerOperationCompleted == null))
            {
                this.IAudioAdapter_setAudioControllerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIAudioAdapter_setAudioControllerOperationCompleted);
            }
            this.InvokeAsync("IAudioAdapter_setAudioController", new object[] {
                    _this,
                    audioController}, this.IAudioAdapter_setAudioControllerOperationCompleted, userState);
        }

        private void OnIAudioAdapter_setAudioControllerOperationCompleted(object arg)
        {
            if ((this.IAudioAdapter_setAudioControllerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IAudioAdapter_setAudioControllerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public AudioDriverType IAudioAdapter_getAudioDriver([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IAudioAdapter_getAudioDriver", new object[] {
                    _this});
            return ((AudioDriverType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIAudioAdapter_getAudioDriver(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IAudioAdapter_getAudioDriver", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public AudioDriverType EndIAudioAdapter_getAudioDriver(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AudioDriverType)(results[0]));
        }

        /// <remarks/>
        public void IAudioAdapter_getAudioDriverAsync(string _this)
        {
            this.IAudioAdapter_getAudioDriverAsync(_this, null);
        }

        /// <remarks/>
        public void IAudioAdapter_getAudioDriverAsync(string _this, object userState)
        {
            if ((this.IAudioAdapter_getAudioDriverOperationCompleted == null))
            {
                this.IAudioAdapter_getAudioDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIAudioAdapter_getAudioDriverOperationCompleted);
            }
            this.InvokeAsync("IAudioAdapter_getAudioDriver", new object[] {
                    _this}, this.IAudioAdapter_getAudioDriverOperationCompleted, userState);
        }

        private void OnIAudioAdapter_getAudioDriverOperationCompleted(object arg)
        {
            if ((this.IAudioAdapter_getAudioDriverCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IAudioAdapter_getAudioDriverCompleted(this, new IAudioAdapter_getAudioDriverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IAudioAdapter_setAudioDriver([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] AudioDriverType audioDriver)
        {
            this.Invoke("IAudioAdapter_setAudioDriver", new object[] {
                    _this,
                    audioDriver});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIAudioAdapter_setAudioDriver(string _this, AudioDriverType audioDriver, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IAudioAdapter_setAudioDriver", new object[] {
                    _this,
                    audioDriver}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIAudioAdapter_setAudioDriver(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IAudioAdapter_setAudioDriverAsync(string _this, AudioDriverType audioDriver)
        {
            this.IAudioAdapter_setAudioDriverAsync(_this, audioDriver, null);
        }

        /// <remarks/>
        public void IAudioAdapter_setAudioDriverAsync(string _this, AudioDriverType audioDriver, object userState)
        {
            if ((this.IAudioAdapter_setAudioDriverOperationCompleted == null))
            {
                this.IAudioAdapter_setAudioDriverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIAudioAdapter_setAudioDriverOperationCompleted);
            }
            this.InvokeAsync("IAudioAdapter_setAudioDriver", new object[] {
                    _this,
                    audioDriver}, this.IAudioAdapter_setAudioDriverOperationCompleted, userState);
        }

        private void OnIAudioAdapter_setAudioDriverOperationCompleted(object arg)
        {
            if ((this.IAudioAdapter_setAudioDriverCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IAudioAdapter_setAudioDriverCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IVRDPServer_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVRDPServer_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIVRDPServer_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IVRDPServer_getEnabledAsync(string _this)
        {
            this.IVRDPServer_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void IVRDPServer_getEnabledAsync(string _this, object userState)
        {
            if ((this.IVRDPServer_getEnabledOperationCompleted == null))
            {
                this.IVRDPServer_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_getEnabledOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_getEnabled", new object[] {
                    _this}, this.IVRDPServer_getEnabledOperationCompleted, userState);
        }

        private void OnIVRDPServer_getEnabledOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_getEnabledCompleted(this, new IVRDPServer_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVRDPServer_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("IVRDPServer_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVRDPServer_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVRDPServer_setEnabledAsync(string _this, bool enabled)
        {
            this.IVRDPServer_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void IVRDPServer_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.IVRDPServer_setEnabledOperationCompleted == null))
            {
                this.IVRDPServer_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_setEnabledOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_setEnabled", new object[] {
                    _this,
                    enabled}, this.IVRDPServer_setEnabledOperationCompleted, userState);
        }

        private void OnIVRDPServer_setEnabledOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IVRDPServer_getPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVRDPServer_getPort", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_getPort(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_getPort", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIVRDPServer_getPort(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IVRDPServer_getPortAsync(string _this)
        {
            this.IVRDPServer_getPortAsync(_this, null);
        }

        /// <remarks/>
        public void IVRDPServer_getPortAsync(string _this, object userState)
        {
            if ((this.IVRDPServer_getPortOperationCompleted == null))
            {
                this.IVRDPServer_getPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_getPortOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_getPort", new object[] {
                    _this}, this.IVRDPServer_getPortOperationCompleted, userState);
        }

        private void OnIVRDPServer_getPortOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_getPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_getPortCompleted(this, new IVRDPServer_getPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVRDPServer_setPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint port)
        {
            this.Invoke("IVRDPServer_setPort", new object[] {
                    _this,
                    port});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_setPort(string _this, uint port, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_setPort", new object[] {
                    _this,
                    port}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVRDPServer_setPort(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVRDPServer_setPortAsync(string _this, uint port)
        {
            this.IVRDPServer_setPortAsync(_this, port, null);
        }

        /// <remarks/>
        public void IVRDPServer_setPortAsync(string _this, uint port, object userState)
        {
            if ((this.IVRDPServer_setPortOperationCompleted == null))
            {
                this.IVRDPServer_setPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_setPortOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_setPort", new object[] {
                    _this,
                    port}, this.IVRDPServer_setPortOperationCompleted, userState);
        }

        private void OnIVRDPServer_setPortOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_setPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_setPortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IVRDPServer_getNetAddress([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVRDPServer_getNetAddress", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_getNetAddress(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_getNetAddress", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIVRDPServer_getNetAddress(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IVRDPServer_getNetAddressAsync(string _this)
        {
            this.IVRDPServer_getNetAddressAsync(_this, null);
        }

        /// <remarks/>
        public void IVRDPServer_getNetAddressAsync(string _this, object userState)
        {
            if ((this.IVRDPServer_getNetAddressOperationCompleted == null))
            {
                this.IVRDPServer_getNetAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_getNetAddressOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_getNetAddress", new object[] {
                    _this}, this.IVRDPServer_getNetAddressOperationCompleted, userState);
        }

        private void OnIVRDPServer_getNetAddressOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_getNetAddressCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_getNetAddressCompleted(this, new IVRDPServer_getNetAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVRDPServer_setNetAddress([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string netAddress)
        {
            this.Invoke("IVRDPServer_setNetAddress", new object[] {
                    _this,
                    netAddress});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_setNetAddress(string _this, string netAddress, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_setNetAddress", new object[] {
                    _this,
                    netAddress}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVRDPServer_setNetAddress(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVRDPServer_setNetAddressAsync(string _this, string netAddress)
        {
            this.IVRDPServer_setNetAddressAsync(_this, netAddress, null);
        }

        /// <remarks/>
        public void IVRDPServer_setNetAddressAsync(string _this, string netAddress, object userState)
        {
            if ((this.IVRDPServer_setNetAddressOperationCompleted == null))
            {
                this.IVRDPServer_setNetAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_setNetAddressOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_setNetAddress", new object[] {
                    _this,
                    netAddress}, this.IVRDPServer_setNetAddressOperationCompleted, userState);
        }

        private void OnIVRDPServer_setNetAddressOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_setNetAddressCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_setNetAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VRDPAuthType IVRDPServer_getAuthType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVRDPServer_getAuthType", new object[] {
                    _this});
            return ((VRDPAuthType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_getAuthType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_getAuthType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public VRDPAuthType EndIVRDPServer_getAuthType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((VRDPAuthType)(results[0]));
        }

        /// <remarks/>
        public void IVRDPServer_getAuthTypeAsync(string _this)
        {
            this.IVRDPServer_getAuthTypeAsync(_this, null);
        }

        /// <remarks/>
        public void IVRDPServer_getAuthTypeAsync(string _this, object userState)
        {
            if ((this.IVRDPServer_getAuthTypeOperationCompleted == null))
            {
                this.IVRDPServer_getAuthTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_getAuthTypeOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_getAuthType", new object[] {
                    _this}, this.IVRDPServer_getAuthTypeOperationCompleted, userState);
        }

        private void OnIVRDPServer_getAuthTypeOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_getAuthTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_getAuthTypeCompleted(this, new IVRDPServer_getAuthTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVRDPServer_setAuthType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] VRDPAuthType authType)
        {
            this.Invoke("IVRDPServer_setAuthType", new object[] {
                    _this,
                    authType});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_setAuthType(string _this, VRDPAuthType authType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_setAuthType", new object[] {
                    _this,
                    authType}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVRDPServer_setAuthType(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVRDPServer_setAuthTypeAsync(string _this, VRDPAuthType authType)
        {
            this.IVRDPServer_setAuthTypeAsync(_this, authType, null);
        }

        /// <remarks/>
        public void IVRDPServer_setAuthTypeAsync(string _this, VRDPAuthType authType, object userState)
        {
            if ((this.IVRDPServer_setAuthTypeOperationCompleted == null))
            {
                this.IVRDPServer_setAuthTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_setAuthTypeOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_setAuthType", new object[] {
                    _this,
                    authType}, this.IVRDPServer_setAuthTypeOperationCompleted, userState);
        }

        private void OnIVRDPServer_setAuthTypeOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_setAuthTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_setAuthTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IVRDPServer_getAuthTimeout([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVRDPServer_getAuthTimeout", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_getAuthTimeout(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_getAuthTimeout", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIVRDPServer_getAuthTimeout(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IVRDPServer_getAuthTimeoutAsync(string _this)
        {
            this.IVRDPServer_getAuthTimeoutAsync(_this, null);
        }

        /// <remarks/>
        public void IVRDPServer_getAuthTimeoutAsync(string _this, object userState)
        {
            if ((this.IVRDPServer_getAuthTimeoutOperationCompleted == null))
            {
                this.IVRDPServer_getAuthTimeoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_getAuthTimeoutOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_getAuthTimeout", new object[] {
                    _this}, this.IVRDPServer_getAuthTimeoutOperationCompleted, userState);
        }

        private void OnIVRDPServer_getAuthTimeoutOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_getAuthTimeoutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_getAuthTimeoutCompleted(this, new IVRDPServer_getAuthTimeoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVRDPServer_setAuthTimeout([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint authTimeout)
        {
            this.Invoke("IVRDPServer_setAuthTimeout", new object[] {
                    _this,
                    authTimeout});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_setAuthTimeout(string _this, uint authTimeout, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_setAuthTimeout", new object[] {
                    _this,
                    authTimeout}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVRDPServer_setAuthTimeout(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVRDPServer_setAuthTimeoutAsync(string _this, uint authTimeout)
        {
            this.IVRDPServer_setAuthTimeoutAsync(_this, authTimeout, null);
        }

        /// <remarks/>
        public void IVRDPServer_setAuthTimeoutAsync(string _this, uint authTimeout, object userState)
        {
            if ((this.IVRDPServer_setAuthTimeoutOperationCompleted == null))
            {
                this.IVRDPServer_setAuthTimeoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_setAuthTimeoutOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_setAuthTimeout", new object[] {
                    _this,
                    authTimeout}, this.IVRDPServer_setAuthTimeoutOperationCompleted, userState);
        }

        private void OnIVRDPServer_setAuthTimeoutOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_setAuthTimeoutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_setAuthTimeoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IVRDPServer_getAllowMultiConnection([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVRDPServer_getAllowMultiConnection", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_getAllowMultiConnection(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_getAllowMultiConnection", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIVRDPServer_getAllowMultiConnection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IVRDPServer_getAllowMultiConnectionAsync(string _this)
        {
            this.IVRDPServer_getAllowMultiConnectionAsync(_this, null);
        }

        /// <remarks/>
        public void IVRDPServer_getAllowMultiConnectionAsync(string _this, object userState)
        {
            if ((this.IVRDPServer_getAllowMultiConnectionOperationCompleted == null))
            {
                this.IVRDPServer_getAllowMultiConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_getAllowMultiConnectionOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_getAllowMultiConnection", new object[] {
                    _this}, this.IVRDPServer_getAllowMultiConnectionOperationCompleted, userState);
        }

        private void OnIVRDPServer_getAllowMultiConnectionOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_getAllowMultiConnectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_getAllowMultiConnectionCompleted(this, new IVRDPServer_getAllowMultiConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVRDPServer_setAllowMultiConnection([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool allowMultiConnection)
        {
            this.Invoke("IVRDPServer_setAllowMultiConnection", new object[] {
                    _this,
                    allowMultiConnection});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_setAllowMultiConnection(string _this, bool allowMultiConnection, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_setAllowMultiConnection", new object[] {
                    _this,
                    allowMultiConnection}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVRDPServer_setAllowMultiConnection(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVRDPServer_setAllowMultiConnectionAsync(string _this, bool allowMultiConnection)
        {
            this.IVRDPServer_setAllowMultiConnectionAsync(_this, allowMultiConnection, null);
        }

        /// <remarks/>
        public void IVRDPServer_setAllowMultiConnectionAsync(string _this, bool allowMultiConnection, object userState)
        {
            if ((this.IVRDPServer_setAllowMultiConnectionOperationCompleted == null))
            {
                this.IVRDPServer_setAllowMultiConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_setAllowMultiConnectionOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_setAllowMultiConnection", new object[] {
                    _this,
                    allowMultiConnection}, this.IVRDPServer_setAllowMultiConnectionOperationCompleted, userState);
        }

        private void OnIVRDPServer_setAllowMultiConnectionOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_setAllowMultiConnectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_setAllowMultiConnectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool IVRDPServer_getReuseSingleConnection([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IVRDPServer_getReuseSingleConnection", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_getReuseSingleConnection(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_getReuseSingleConnection", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIVRDPServer_getReuseSingleConnection(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IVRDPServer_getReuseSingleConnectionAsync(string _this)
        {
            this.IVRDPServer_getReuseSingleConnectionAsync(_this, null);
        }

        /// <remarks/>
        public void IVRDPServer_getReuseSingleConnectionAsync(string _this, object userState)
        {
            if ((this.IVRDPServer_getReuseSingleConnectionOperationCompleted == null))
            {
                this.IVRDPServer_getReuseSingleConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_getReuseSingleConnectionOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_getReuseSingleConnection", new object[] {
                    _this}, this.IVRDPServer_getReuseSingleConnectionOperationCompleted, userState);
        }

        private void OnIVRDPServer_getReuseSingleConnectionOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_getReuseSingleConnectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_getReuseSingleConnectionCompleted(this, new IVRDPServer_getReuseSingleConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IVRDPServer_setReuseSingleConnection([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool reuseSingleConnection)
        {
            this.Invoke("IVRDPServer_setReuseSingleConnection", new object[] {
                    _this,
                    reuseSingleConnection});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIVRDPServer_setReuseSingleConnection(string _this, bool reuseSingleConnection, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IVRDPServer_setReuseSingleConnection", new object[] {
                    _this,
                    reuseSingleConnection}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIVRDPServer_setReuseSingleConnection(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IVRDPServer_setReuseSingleConnectionAsync(string _this, bool reuseSingleConnection)
        {
            this.IVRDPServer_setReuseSingleConnectionAsync(_this, reuseSingleConnection, null);
        }

        /// <remarks/>
        public void IVRDPServer_setReuseSingleConnectionAsync(string _this, bool reuseSingleConnection, object userState)
        {
            if ((this.IVRDPServer_setReuseSingleConnectionOperationCompleted == null))
            {
                this.IVRDPServer_setReuseSingleConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIVRDPServer_setReuseSingleConnectionOperationCompleted);
            }
            this.InvokeAsync("IVRDPServer_setReuseSingleConnection", new object[] {
                    _this,
                    reuseSingleConnection}, this.IVRDPServer_setReuseSingleConnectionOperationCompleted, userState);
        }

        private void OnIVRDPServer_setReuseSingleConnectionOperationCompleted(object arg)
        {
            if ((this.IVRDPServer_setReuseSingleConnectionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IVRDPServer_setReuseSingleConnectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SessionState ISession_getState([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISession_getState", new object[] {
                    _this});
            return ((SessionState)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISession_getState(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISession_getState", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public SessionState EndISession_getState(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SessionState)(results[0]));
        }

        /// <remarks/>
        public void ISession_getStateAsync(string _this)
        {
            this.ISession_getStateAsync(_this, null);
        }

        /// <remarks/>
        public void ISession_getStateAsync(string _this, object userState)
        {
            if ((this.ISession_getStateOperationCompleted == null))
            {
                this.ISession_getStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISession_getStateOperationCompleted);
            }
            this.InvokeAsync("ISession_getState", new object[] {
                    _this}, this.ISession_getStateOperationCompleted, userState);
        }

        private void OnISession_getStateOperationCompleted(object arg)
        {
            if ((this.ISession_getStateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISession_getStateCompleted(this, new ISession_getStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SessionType ISession_getType([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISession_getType", new object[] {
                    _this});
            return ((SessionType)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISession_getType(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISession_getType", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public SessionType EndISession_getType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SessionType)(results[0]));
        }

        /// <remarks/>
        public void ISession_getTypeAsync(string _this)
        {
            this.ISession_getTypeAsync(_this, null);
        }

        /// <remarks/>
        public void ISession_getTypeAsync(string _this, object userState)
        {
            if ((this.ISession_getTypeOperationCompleted == null))
            {
                this.ISession_getTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISession_getTypeOperationCompleted);
            }
            this.InvokeAsync("ISession_getType", new object[] {
                    _this}, this.ISession_getTypeOperationCompleted, userState);
        }

        private void OnISession_getTypeOperationCompleted(object arg)
        {
            if ((this.ISession_getTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISession_getTypeCompleted(this, new ISession_getTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISession_getMachine([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISession_getMachine", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISession_getMachine(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISession_getMachine", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISession_getMachine(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISession_getMachineAsync(string _this)
        {
            this.ISession_getMachineAsync(_this, null);
        }

        /// <remarks/>
        public void ISession_getMachineAsync(string _this, object userState)
        {
            if ((this.ISession_getMachineOperationCompleted == null))
            {
                this.ISession_getMachineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISession_getMachineOperationCompleted);
            }
            this.InvokeAsync("ISession_getMachine", new object[] {
                    _this}, this.ISession_getMachineOperationCompleted, userState);
        }

        private void OnISession_getMachineOperationCompleted(object arg)
        {
            if ((this.ISession_getMachineCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISession_getMachineCompleted(this, new ISession_getMachineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ISession_getConsole([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISession_getConsole", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISession_getConsole(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISession_getConsole", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndISession_getConsole(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ISession_getConsoleAsync(string _this)
        {
            this.ISession_getConsoleAsync(_this, null);
        }

        /// <remarks/>
        public void ISession_getConsoleAsync(string _this, object userState)
        {
            if ((this.ISession_getConsoleOperationCompleted == null))
            {
                this.ISession_getConsoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISession_getConsoleOperationCompleted);
            }
            this.InvokeAsync("ISession_getConsole", new object[] {
                    _this}, this.ISession_getConsoleOperationCompleted, userState);
        }

        private void OnISession_getConsoleOperationCompleted(object arg)
        {
            if ((this.ISession_getConsoleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISession_getConsoleCompleted(this, new ISession_getConsoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISession_close([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("ISession_close", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISession_close(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISession_close", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISession_close(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISession_closeAsync(string _this)
        {
            this.ISession_closeAsync(_this, null);
        }

        /// <remarks/>
        public void ISession_closeAsync(string _this, object userState)
        {
            if ((this.ISession_closeOperationCompleted == null))
            {
                this.ISession_closeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISession_closeOperationCompleted);
            }
            this.InvokeAsync("ISession_close", new object[] {
                    _this}, this.ISession_closeOperationCompleted, userState);
        }

        private void OnISession_closeOperationCompleted(object arg)
        {
            if ((this.ISession_closeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISession_closeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ISATAController_getEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISATAController_getEnabled", new object[] {
                    _this});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISATAController_getEnabled(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISATAController_getEnabled", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndISATAController_getEnabled(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ISATAController_getEnabledAsync(string _this)
        {
            this.ISATAController_getEnabledAsync(_this, null);
        }

        /// <remarks/>
        public void ISATAController_getEnabledAsync(string _this, object userState)
        {
            if ((this.ISATAController_getEnabledOperationCompleted == null))
            {
                this.ISATAController_getEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISATAController_getEnabledOperationCompleted);
            }
            this.InvokeAsync("ISATAController_getEnabled", new object[] {
                    _this}, this.ISATAController_getEnabledOperationCompleted, userState);
        }

        private void OnISATAController_getEnabledOperationCompleted(object arg)
        {
            if ((this.ISATAController_getEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISATAController_getEnabledCompleted(this, new ISATAController_getEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISATAController_setEnabled([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] bool enabled)
        {
            this.Invoke("ISATAController_setEnabled", new object[] {
                    _this,
                    enabled});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISATAController_setEnabled(string _this, bool enabled, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISATAController_setEnabled", new object[] {
                    _this,
                    enabled}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISATAController_setEnabled(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISATAController_setEnabledAsync(string _this, bool enabled)
        {
            this.ISATAController_setEnabledAsync(_this, enabled, null);
        }

        /// <remarks/>
        public void ISATAController_setEnabledAsync(string _this, bool enabled, object userState)
        {
            if ((this.ISATAController_setEnabledOperationCompleted == null))
            {
                this.ISATAController_setEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISATAController_setEnabledOperationCompleted);
            }
            this.InvokeAsync("ISATAController_setEnabled", new object[] {
                    _this,
                    enabled}, this.ISATAController_setEnabledOperationCompleted, userState);
        }

        private void OnISATAController_setEnabledOperationCompleted(object arg)
        {
            if ((this.ISATAController_setEnabledCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISATAController_setEnabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint ISATAController_getPortCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("ISATAController_getPortCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISATAController_getPortCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISATAController_getPortCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndISATAController_getPortCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void ISATAController_getPortCountAsync(string _this)
        {
            this.ISATAController_getPortCountAsync(_this, null);
        }

        /// <remarks/>
        public void ISATAController_getPortCountAsync(string _this, object userState)
        {
            if ((this.ISATAController_getPortCountOperationCompleted == null))
            {
                this.ISATAController_getPortCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISATAController_getPortCountOperationCompleted);
            }
            this.InvokeAsync("ISATAController_getPortCount", new object[] {
                    _this}, this.ISATAController_getPortCountOperationCompleted, userState);
        }

        private void OnISATAController_getPortCountOperationCompleted(object arg)
        {
            if ((this.ISATAController_getPortCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISATAController_getPortCountCompleted(this, new ISATAController_getPortCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISATAController_setPortCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint portCount)
        {
            this.Invoke("ISATAController_setPortCount", new object[] {
                    _this,
                    portCount});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISATAController_setPortCount(string _this, uint portCount, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISATAController_setPortCount", new object[] {
                    _this,
                    portCount}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISATAController_setPortCount(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISATAController_setPortCountAsync(string _this, uint portCount)
        {
            this.ISATAController_setPortCountAsync(_this, portCount, null);
        }

        /// <remarks/>
        public void ISATAController_setPortCountAsync(string _this, uint portCount, object userState)
        {
            if ((this.ISATAController_setPortCountOperationCompleted == null))
            {
                this.ISATAController_setPortCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISATAController_setPortCountOperationCompleted);
            }
            this.InvokeAsync("ISATAController_setPortCount", new object[] {
                    _this,
                    portCount}, this.ISATAController_setPortCountOperationCompleted, userState);
        }

        private void OnISATAController_setPortCountOperationCompleted(object arg)
        {
            if ((this.ISATAController_setPortCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISATAController_setPortCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ISATAController_GetIDEEmulationPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int devicePosition)
        {
            object[] results = this.Invoke("ISATAController_GetIDEEmulationPort", new object[] {
                    _this,
                    devicePosition});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginISATAController_GetIDEEmulationPort(string _this, int devicePosition, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISATAController_GetIDEEmulationPort", new object[] {
                    _this,
                    devicePosition}, callback, asyncState);
        }

        /// <remarks/>
        public int EndISATAController_GetIDEEmulationPort(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void ISATAController_GetIDEEmulationPortAsync(string _this, int devicePosition)
        {
            this.ISATAController_GetIDEEmulationPortAsync(_this, devicePosition, null);
        }

        /// <remarks/>
        public void ISATAController_GetIDEEmulationPortAsync(string _this, int devicePosition, object userState)
        {
            if ((this.ISATAController_GetIDEEmulationPortOperationCompleted == null))
            {
                this.ISATAController_GetIDEEmulationPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISATAController_GetIDEEmulationPortOperationCompleted);
            }
            this.InvokeAsync("ISATAController_GetIDEEmulationPort", new object[] {
                    _this,
                    devicePosition}, this.ISATAController_GetIDEEmulationPortOperationCompleted, userState);
        }

        private void OnISATAController_GetIDEEmulationPortOperationCompleted(object arg)
        {
            if ((this.ISATAController_GetIDEEmulationPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISATAController_GetIDEEmulationPortCompleted(this, new ISATAController_GetIDEEmulationPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ISATAController_SetIDEEmulationPort([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int devicePosition, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] int portNumber)
        {
            this.Invoke("ISATAController_SetIDEEmulationPort", new object[] {
                    _this,
                    devicePosition,
                    portNumber});
        }

        /// <remarks/>
        public System.IAsyncResult BeginISATAController_SetIDEEmulationPort(string _this, int devicePosition, int portNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ISATAController_SetIDEEmulationPort", new object[] {
                    _this,
                    devicePosition,
                    portNumber}, callback, asyncState);
        }

        /// <remarks/>
        public void EndISATAController_SetIDEEmulationPort(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void ISATAController_SetIDEEmulationPortAsync(string _this, int devicePosition, int portNumber)
        {
            this.ISATAController_SetIDEEmulationPortAsync(_this, devicePosition, portNumber, null);
        }

        /// <remarks/>
        public void ISATAController_SetIDEEmulationPortAsync(string _this, int devicePosition, int portNumber, object userState)
        {
            if ((this.ISATAController_SetIDEEmulationPortOperationCompleted == null))
            {
                this.ISATAController_SetIDEEmulationPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnISATAController_SetIDEEmulationPortOperationCompleted);
            }
            this.InvokeAsync("ISATAController_SetIDEEmulationPort", new object[] {
                    _this,
                    devicePosition,
                    portNumber}, this.ISATAController_SetIDEEmulationPortOperationCompleted, userState);
        }

        private void OnISATAController_SetIDEEmulationPortOperationCompleted(object arg)
        {
            if ((this.ISATAController_SetIDEEmulationPortCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ISATAController_SetIDEEmulationPortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IManagedObjectRef_getInterfaceName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IManagedObjectRef_getInterfaceName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIManagedObjectRef_getInterfaceName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IManagedObjectRef_getInterfaceName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIManagedObjectRef_getInterfaceName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IManagedObjectRef_getInterfaceNameAsync(string _this)
        {
            this.IManagedObjectRef_getInterfaceNameAsync(_this, null);
        }

        /// <remarks/>
        public void IManagedObjectRef_getInterfaceNameAsync(string _this, object userState)
        {
            if ((this.IManagedObjectRef_getInterfaceNameOperationCompleted == null))
            {
                this.IManagedObjectRef_getInterfaceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIManagedObjectRef_getInterfaceNameOperationCompleted);
            }
            this.InvokeAsync("IManagedObjectRef_getInterfaceName", new object[] {
                    _this}, this.IManagedObjectRef_getInterfaceNameOperationCompleted, userState);
        }

        private void OnIManagedObjectRef_getInterfaceNameOperationCompleted(object arg)
        {
            if ((this.IManagedObjectRef_getInterfaceNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IManagedObjectRef_getInterfaceNameCompleted(this, new IManagedObjectRef_getInterfaceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IManagedObjectRef_release([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            this.Invoke("IManagedObjectRef_release", new object[] {
                    _this});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIManagedObjectRef_release(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IManagedObjectRef_release", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIManagedObjectRef_release(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IManagedObjectRef_releaseAsync(string _this)
        {
            this.IManagedObjectRef_releaseAsync(_this, null);
        }

        /// <remarks/>
        public void IManagedObjectRef_releaseAsync(string _this, object userState)
        {
            if ((this.IManagedObjectRef_releaseOperationCompleted == null))
            {
                this.IManagedObjectRef_releaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIManagedObjectRef_releaseOperationCompleted);
            }
            this.InvokeAsync("IManagedObjectRef_release", new object[] {
                    _this}, this.IManagedObjectRef_releaseOperationCompleted, userState);
        }

        private void OnIManagedObjectRef_releaseOperationCompleted(object arg)
        {
            if ((this.IManagedObjectRef_releaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IManagedObjectRef_releaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IWebsessionManager_logon([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.None)] string username, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.None)] string password)
        {
            object[] results = this.Invoke("IWebsessionManager_logon", new object[] {
                    username,
                    password});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIWebsessionManager_logon(string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IWebsessionManager_logon", new object[] {
                    username,
                    password}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIWebsessionManager_logon(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IWebsessionManager_logonAsync(string username, string password)
        {
            this.IWebsessionManager_logonAsync(username, password, null);
        }

        /// <remarks/>
        public void IWebsessionManager_logonAsync(string username, string password, object userState)
        {
            if ((this.IWebsessionManager_logonOperationCompleted == null))
            {
                this.IWebsessionManager_logonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIWebsessionManager_logonOperationCompleted);
            }
            this.InvokeAsync("IWebsessionManager_logon", new object[] {
                    username,
                    password}, this.IWebsessionManager_logonOperationCompleted, userState);
        }

        private void OnIWebsessionManager_logonOperationCompleted(object arg)
        {
            if ((this.IWebsessionManager_logonCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IWebsessionManager_logonCompleted(this, new IWebsessionManager_logonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IWebsessionManager_getSessionObject([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string refIVirtualBox)
        {
            object[] results = this.Invoke("IWebsessionManager_getSessionObject", new object[] {
                    refIVirtualBox});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIWebsessionManager_getSessionObject(string refIVirtualBox, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IWebsessionManager_getSessionObject", new object[] {
                    refIVirtualBox}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIWebsessionManager_getSessionObject(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IWebsessionManager_getSessionObjectAsync(string refIVirtualBox)
        {
            this.IWebsessionManager_getSessionObjectAsync(refIVirtualBox, null);
        }

        /// <remarks/>
        public void IWebsessionManager_getSessionObjectAsync(string refIVirtualBox, object userState)
        {
            if ((this.IWebsessionManager_getSessionObjectOperationCompleted == null))
            {
                this.IWebsessionManager_getSessionObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIWebsessionManager_getSessionObjectOperationCompleted);
            }
            this.InvokeAsync("IWebsessionManager_getSessionObject", new object[] {
                    refIVirtualBox}, this.IWebsessionManager_getSessionObjectOperationCompleted, userState);
        }

        private void OnIWebsessionManager_getSessionObjectOperationCompleted(object arg)
        {
            if ((this.IWebsessionManager_getSessionObjectCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IWebsessionManager_getSessionObjectCompleted(this, new IWebsessionManager_getSessionObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IWebsessionManager_logoff([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string refIVirtualBox)
        {
            this.Invoke("IWebsessionManager_logoff", new object[] {
                    refIVirtualBox});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIWebsessionManager_logoff(string refIVirtualBox, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IWebsessionManager_logoff", new object[] {
                    refIVirtualBox}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIWebsessionManager_logoff(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IWebsessionManager_logoffAsync(string refIVirtualBox)
        {
            this.IWebsessionManager_logoffAsync(refIVirtualBox, null);
        }

        /// <remarks/>
        public void IWebsessionManager_logoffAsync(string refIVirtualBox, object userState)
        {
            if ((this.IWebsessionManager_logoffOperationCompleted == null))
            {
                this.IWebsessionManager_logoffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIWebsessionManager_logoffOperationCompleted);
            }
            this.InvokeAsync("IWebsessionManager_logoff", new object[] {
                    refIVirtualBox}, this.IWebsessionManager_logoffOperationCompleted, userState);
        }

        private void OnIWebsessionManager_logoffOperationCompleted(object arg)
        {
            if ((this.IWebsessionManager_logoffCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IWebsessionManager_logoffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPerformanceMetric_getMetricName([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceMetric_getMetricName", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceMetric_getMetricName(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceMetric_getMetricName", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIPerformanceMetric_getMetricName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IPerformanceMetric_getMetricNameAsync(string _this)
        {
            this.IPerformanceMetric_getMetricNameAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceMetric_getMetricNameAsync(string _this, object userState)
        {
            if ((this.IPerformanceMetric_getMetricNameOperationCompleted == null))
            {
                this.IPerformanceMetric_getMetricNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceMetric_getMetricNameOperationCompleted);
            }
            this.InvokeAsync("IPerformanceMetric_getMetricName", new object[] {
                    _this}, this.IPerformanceMetric_getMetricNameOperationCompleted, userState);
        }

        private void OnIPerformanceMetric_getMetricNameOperationCompleted(object arg)
        {
            if ((this.IPerformanceMetric_getMetricNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceMetric_getMetricNameCompleted(this, new IPerformanceMetric_getMetricNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPerformanceMetric_getDescription([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceMetric_getDescription", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceMetric_getDescription(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceMetric_getDescription", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIPerformanceMetric_getDescription(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IPerformanceMetric_getDescriptionAsync(string _this)
        {
            this.IPerformanceMetric_getDescriptionAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceMetric_getDescriptionAsync(string _this, object userState)
        {
            if ((this.IPerformanceMetric_getDescriptionOperationCompleted == null))
            {
                this.IPerformanceMetric_getDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceMetric_getDescriptionOperationCompleted);
            }
            this.InvokeAsync("IPerformanceMetric_getDescription", new object[] {
                    _this}, this.IPerformanceMetric_getDescriptionOperationCompleted, userState);
        }

        private void OnIPerformanceMetric_getDescriptionOperationCompleted(object arg)
        {
            if ((this.IPerformanceMetric_getDescriptionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceMetric_getDescriptionCompleted(this, new IPerformanceMetric_getDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IPerformanceMetric_getPeriod([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceMetric_getPeriod", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceMetric_getPeriod(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceMetric_getPeriod", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIPerformanceMetric_getPeriod(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IPerformanceMetric_getPeriodAsync(string _this)
        {
            this.IPerformanceMetric_getPeriodAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceMetric_getPeriodAsync(string _this, object userState)
        {
            if ((this.IPerformanceMetric_getPeriodOperationCompleted == null))
            {
                this.IPerformanceMetric_getPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceMetric_getPeriodOperationCompleted);
            }
            this.InvokeAsync("IPerformanceMetric_getPeriod", new object[] {
                    _this}, this.IPerformanceMetric_getPeriodOperationCompleted, userState);
        }

        private void OnIPerformanceMetric_getPeriodOperationCompleted(object arg)
        {
            if ((this.IPerformanceMetric_getPeriodCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceMetric_getPeriodCompleted(this, new IPerformanceMetric_getPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint IPerformanceMetric_getCount([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceMetric_getCount", new object[] {
                    _this});
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceMetric_getCount(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceMetric_getCount", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public uint EndIPerformanceMetric_getCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }

        /// <remarks/>
        public void IPerformanceMetric_getCountAsync(string _this)
        {
            this.IPerformanceMetric_getCountAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceMetric_getCountAsync(string _this, object userState)
        {
            if ((this.IPerformanceMetric_getCountOperationCompleted == null))
            {
                this.IPerformanceMetric_getCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceMetric_getCountOperationCompleted);
            }
            this.InvokeAsync("IPerformanceMetric_getCount", new object[] {
                    _this}, this.IPerformanceMetric_getCountOperationCompleted, userState);
        }

        private void OnIPerformanceMetric_getCountOperationCompleted(object arg)
        {
            if ((this.IPerformanceMetric_getCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceMetric_getCountCompleted(this, new IPerformanceMetric_getCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string IPerformanceMetric_getUnit([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceMetric_getUnit", new object[] {
                    _this});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceMetric_getUnit(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceMetric_getUnit", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIPerformanceMetric_getUnit(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IPerformanceMetric_getUnitAsync(string _this)
        {
            this.IPerformanceMetric_getUnitAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceMetric_getUnitAsync(string _this, object userState)
        {
            if ((this.IPerformanceMetric_getUnitOperationCompleted == null))
            {
                this.IPerformanceMetric_getUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceMetric_getUnitOperationCompleted);
            }
            this.InvokeAsync("IPerformanceMetric_getUnit", new object[] {
                    _this}, this.IPerformanceMetric_getUnitOperationCompleted, userState);
        }

        private void OnIPerformanceMetric_getUnitOperationCompleted(object arg)
        {
            if ((this.IPerformanceMetric_getUnitCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceMetric_getUnitCompleted(this, new IPerformanceMetric_getUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int IPerformanceMetric_getMinimumValue([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceMetric_getMinimumValue", new object[] {
                    _this});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceMetric_getMinimumValue(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceMetric_getMinimumValue", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public int EndIPerformanceMetric_getMinimumValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void IPerformanceMetric_getMinimumValueAsync(string _this)
        {
            this.IPerformanceMetric_getMinimumValueAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceMetric_getMinimumValueAsync(string _this, object userState)
        {
            if ((this.IPerformanceMetric_getMinimumValueOperationCompleted == null))
            {
                this.IPerformanceMetric_getMinimumValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceMetric_getMinimumValueOperationCompleted);
            }
            this.InvokeAsync("IPerformanceMetric_getMinimumValue", new object[] {
                    _this}, this.IPerformanceMetric_getMinimumValueOperationCompleted, userState);
        }

        private void OnIPerformanceMetric_getMinimumValueOperationCompleted(object arg)
        {
            if ((this.IPerformanceMetric_getMinimumValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceMetric_getMinimumValueCompleted(this, new IPerformanceMetric_getMinimumValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int IPerformanceMetric_getMaximumValue([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceMetric_getMaximumValue", new object[] {
                    _this});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceMetric_getMaximumValue(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceMetric_getMaximumValue", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public int EndIPerformanceMetric_getMaximumValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void IPerformanceMetric_getMaximumValueAsync(string _this)
        {
            this.IPerformanceMetric_getMaximumValueAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceMetric_getMaximumValueAsync(string _this, object userState)
        {
            if ((this.IPerformanceMetric_getMaximumValueOperationCompleted == null))
            {
                this.IPerformanceMetric_getMaximumValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceMetric_getMaximumValueOperationCompleted);
            }
            this.InvokeAsync("IPerformanceMetric_getMaximumValue", new object[] {
                    _this}, this.IPerformanceMetric_getMaximumValueOperationCompleted, userState);
        }

        private void OnIPerformanceMetric_getMaximumValueOperationCompleted(object arg)
        {
            if ((this.IPerformanceMetric_getMaximumValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceMetric_getMaximumValueCompleted(this, new IPerformanceMetric_getMaximumValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] IPerformanceCollector_getMetricNames([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this)
        {
            object[] results = this.Invoke("IPerformanceCollector_getMetricNames", new object[] {
                    _this});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceCollector_getMetricNames(string _this, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceCollector_getMetricNames", new object[] {
                    _this}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIPerformanceCollector_getMetricNames(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IPerformanceCollector_getMetricNamesAsync(string _this)
        {
            this.IPerformanceCollector_getMetricNamesAsync(_this, null);
        }

        /// <remarks/>
        public void IPerformanceCollector_getMetricNamesAsync(string _this, object userState)
        {
            if ((this.IPerformanceCollector_getMetricNamesOperationCompleted == null))
            {
                this.IPerformanceCollector_getMetricNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceCollector_getMetricNamesOperationCompleted);
            }
            this.InvokeAsync("IPerformanceCollector_getMetricNames", new object[] {
                    _this}, this.IPerformanceCollector_getMetricNamesOperationCompleted, userState);
        }

        private void OnIPerformanceCollector_getMetricNamesOperationCompleted(object arg)
        {
            if ((this.IPerformanceCollector_getMetricNamesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceCollector_getMetricNamesCompleted(this, new IPerformanceCollector_getMetricNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] IPerformanceCollector_getMetrics([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute("metricNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] metricNames, [System.Xml.Serialization.XmlElementAttribute("objects", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] objects)
        {
            object[] results = this.Invoke("IPerformanceCollector_getMetrics", new object[] {
                    _this,
                    metricNames,
                    objects});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceCollector_getMetrics(string _this, string[] metricNames, string[] objects, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceCollector_getMetrics", new object[] {
                    _this,
                    metricNames,
                    objects}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIPerformanceCollector_getMetrics(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IPerformanceCollector_getMetricsAsync(string _this, string[] metricNames, string[] objects)
        {
            this.IPerformanceCollector_getMetricsAsync(_this, metricNames, objects, null);
        }

        /// <remarks/>
        public void IPerformanceCollector_getMetricsAsync(string _this, string[] metricNames, string[] objects, object userState)
        {
            if ((this.IPerformanceCollector_getMetricsOperationCompleted == null))
            {
                this.IPerformanceCollector_getMetricsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceCollector_getMetricsOperationCompleted);
            }
            this.InvokeAsync("IPerformanceCollector_getMetrics", new object[] {
                    _this,
                    metricNames,
                    objects}, this.IPerformanceCollector_getMetricsOperationCompleted, userState);
        }

        private void OnIPerformanceCollector_getMetricsOperationCompleted(object arg)
        {
            if ((this.IPerformanceCollector_getMetricsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceCollector_getMetricsCompleted(this, new IPerformanceCollector_getMetricsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IPerformanceCollector_setupMetrics([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute("metricNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] metricNames, [System.Xml.Serialization.XmlElementAttribute("objects", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] objects, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint period, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] uint count)
        {
            this.Invoke("IPerformanceCollector_setupMetrics", new object[] {
                    _this,
                    metricNames,
                    objects,
                    period,
                    count});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceCollector_setupMetrics(string _this, string[] metricNames, string[] objects, uint period, uint count, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceCollector_setupMetrics", new object[] {
                    _this,
                    metricNames,
                    objects,
                    period,
                    count}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIPerformanceCollector_setupMetrics(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IPerformanceCollector_setupMetricsAsync(string _this, string[] metricNames, string[] objects, uint period, uint count)
        {
            this.IPerformanceCollector_setupMetricsAsync(_this, metricNames, objects, period, count, null);
        }

        /// <remarks/>
        public void IPerformanceCollector_setupMetricsAsync(string _this, string[] metricNames, string[] objects, uint period, uint count, object userState)
        {
            if ((this.IPerformanceCollector_setupMetricsOperationCompleted == null))
            {
                this.IPerformanceCollector_setupMetricsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceCollector_setupMetricsOperationCompleted);
            }
            this.InvokeAsync("IPerformanceCollector_setupMetrics", new object[] {
                    _this,
                    metricNames,
                    objects,
                    period,
                    count}, this.IPerformanceCollector_setupMetricsOperationCompleted, userState);
        }

        private void OnIPerformanceCollector_setupMetricsOperationCompleted(object arg)
        {
            if ((this.IPerformanceCollector_setupMetricsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceCollector_setupMetricsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IPerformanceCollector_enableMetrics([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute("metricNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] metricNames, [System.Xml.Serialization.XmlElementAttribute("objects", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] objects)
        {
            this.Invoke("IPerformanceCollector_enableMetrics", new object[] {
                    _this,
                    metricNames,
                    objects});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceCollector_enableMetrics(string _this, string[] metricNames, string[] objects, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceCollector_enableMetrics", new object[] {
                    _this,
                    metricNames,
                    objects}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIPerformanceCollector_enableMetrics(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IPerformanceCollector_enableMetricsAsync(string _this, string[] metricNames, string[] objects)
        {
            this.IPerformanceCollector_enableMetricsAsync(_this, metricNames, objects, null);
        }

        /// <remarks/>
        public void IPerformanceCollector_enableMetricsAsync(string _this, string[] metricNames, string[] objects, object userState)
        {
            if ((this.IPerformanceCollector_enableMetricsOperationCompleted == null))
            {
                this.IPerformanceCollector_enableMetricsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceCollector_enableMetricsOperationCompleted);
            }
            this.InvokeAsync("IPerformanceCollector_enableMetrics", new object[] {
                    _this,
                    metricNames,
                    objects}, this.IPerformanceCollector_enableMetricsOperationCompleted, userState);
        }

        private void OnIPerformanceCollector_enableMetricsOperationCompleted(object arg)
        {
            if ((this.IPerformanceCollector_enableMetricsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceCollector_enableMetricsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IPerformanceCollector_disableMetrics([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute("metricNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] metricNames, [System.Xml.Serialization.XmlElementAttribute("objects", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] objects)
        {
            this.Invoke("IPerformanceCollector_disableMetrics", new object[] {
                    _this,
                    metricNames,
                    objects});
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceCollector_disableMetrics(string _this, string[] metricNames, string[] objects, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceCollector_disableMetrics", new object[] {
                    _this,
                    metricNames,
                    objects}, callback, asyncState);
        }

        /// <remarks/>
        public void EndIPerformanceCollector_disableMetrics(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void IPerformanceCollector_disableMetricsAsync(string _this, string[] metricNames, string[] objects)
        {
            this.IPerformanceCollector_disableMetricsAsync(_this, metricNames, objects, null);
        }

        /// <remarks/>
        public void IPerformanceCollector_disableMetricsAsync(string _this, string[] metricNames, string[] objects, object userState)
        {
            if ((this.IPerformanceCollector_disableMetricsOperationCompleted == null))
            {
                this.IPerformanceCollector_disableMetricsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceCollector_disableMetricsOperationCompleted);
            }
            this.InvokeAsync("IPerformanceCollector_disableMetrics", new object[] {
                    _this,
                    metricNames,
                    objects}, this.IPerformanceCollector_disableMetricsOperationCompleted, userState);
        }

        private void OnIPerformanceCollector_disableMetricsOperationCompleted(object arg)
        {
            if ((this.IPerformanceCollector_disableMetricsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceCollector_disableMetricsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://www.virtualbox.org/", ResponseNamespace = "http://www.virtualbox.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("returnMetricNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] IPerformanceCollector_queryMetricsData([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string _this, [System.Xml.Serialization.XmlElementAttribute("metricNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] metricNames, [System.Xml.Serialization.XmlElementAttribute("objects", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] objects, [System.Xml.Serialization.XmlElementAttribute("returnObjects", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out string[] returnObjects, [System.Xml.Serialization.XmlElementAttribute("returnDataIndices", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out uint[] returnDataIndices, [System.Xml.Serialization.XmlElementAttribute("returnDataLengths", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out uint[] returnDataLengths, [System.Xml.Serialization.XmlElementAttribute("returnval", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] out int[] returnval)
        {
            object[] results = this.Invoke("IPerformanceCollector_queryMetricsData", new object[] {
                    _this,
                    metricNames,
                    objects});
            returnObjects = ((string[])(results[1]));
            returnDataIndices = ((uint[])(results[2]));
            returnDataLengths = ((uint[])(results[3]));
            returnval = ((int[])(results[4]));
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIPerformanceCollector_queryMetricsData(string _this, string[] metricNames, string[] objects, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IPerformanceCollector_queryMetricsData", new object[] {
                    _this,
                    metricNames,
                    objects}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndIPerformanceCollector_queryMetricsData(System.IAsyncResult asyncResult, out string[] returnObjects, out uint[] returnDataIndices, out uint[] returnDataLengths, out int[] returnval)
        {
            object[] results = this.EndInvoke(asyncResult);
            returnObjects = ((string[])(results[1]));
            returnDataIndices = ((uint[])(results[2]));
            returnDataLengths = ((uint[])(results[3]));
            returnval = ((int[])(results[4]));
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void IPerformanceCollector_queryMetricsDataAsync(string _this, string[] metricNames, string[] objects)
        {
            this.IPerformanceCollector_queryMetricsDataAsync(_this, metricNames, objects, null);
        }

        /// <remarks/>
        public void IPerformanceCollector_queryMetricsDataAsync(string _this, string[] metricNames, string[] objects, object userState)
        {
            if ((this.IPerformanceCollector_queryMetricsDataOperationCompleted == null))
            {
                this.IPerformanceCollector_queryMetricsDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIPerformanceCollector_queryMetricsDataOperationCompleted);
            }
            this.InvokeAsync("IPerformanceCollector_queryMetricsData", new object[] {
                    _this,
                    metricNames,
                    objects}, this.IPerformanceCollector_queryMetricsDataOperationCompleted, userState);
        }

        private void OnIPerformanceCollector_queryMetricsDataOperationCompleted(object arg)
        {
            if ((this.IPerformanceCollector_queryMetricsDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IPerformanceCollector_queryMetricsDataCompleted(this, new IPerformanceCollector_queryMetricsDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public partial class IGuestOSType
    {

        private string idField;

        private string descriptionField;

        private uint recommendedRAMField;

        private uint recommendedVRAMField;

        private uint recommendedHDDField;

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint recommendedRAM
        {
            get
            {
                return this.recommendedRAMField;
            }
            set
            {
                this.recommendedRAMField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint recommendedVRAM
        {
            get
            {
                return this.recommendedVRAMField;
            }
            set
            {
                this.recommendedVRAMField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint recommendedHDD
        {
            get
            {
                return this.recommendedHDDField;
            }
            set
            {
                this.recommendedHDDField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public partial class IRemoteDisplayInfo
    {

        private bool activeField;

        private uint numberOfClientsField;

        private long beginTimeField;

        private long endTimeField;

        private ulong bytesSentField;

        private ulong bytesSentTotalField;

        private ulong bytesReceivedField;

        private ulong bytesReceivedTotalField;

        private string userField;

        private string domainField;

        private string clientNameField;

        private string clientIPField;

        private uint clientVersionField;

        private uint encryptionStyleField;

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool active
        {
            get
            {
                return this.activeField;
            }
            set
            {
                this.activeField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint numberOfClients
        {
            get
            {
                return this.numberOfClientsField;
            }
            set
            {
                this.numberOfClientsField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long beginTime
        {
            get
            {
                return this.beginTimeField;
            }
            set
            {
                this.beginTimeField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long endTime
        {
            get
            {
                return this.endTimeField;
            }
            set
            {
                this.endTimeField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong bytesSent
        {
            get
            {
                return this.bytesSentField;
            }
            set
            {
                this.bytesSentField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong bytesSentTotal
        {
            get
            {
                return this.bytesSentTotalField;
            }
            set
            {
                this.bytesSentTotalField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong bytesReceived
        {
            get
            {
                return this.bytesReceivedField;
            }
            set
            {
                this.bytesReceivedField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ulong bytesReceivedTotal
        {
            get
            {
                return this.bytesReceivedTotalField;
            }
            set
            {
                this.bytesReceivedTotalField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string user
        {
            get
            {
                return this.userField;
            }
            set
            {
                this.userField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string domain
        {
            get
            {
                return this.domainField;
            }
            set
            {
                this.domainField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clientName
        {
            get
            {
                return this.clientNameField;
            }
            set
            {
                this.clientNameField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string clientIP
        {
            get
            {
                return this.clientIPField;
            }
            set
            {
                this.clientIPField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint clientVersion
        {
            get
            {
                return this.clientVersionField;
            }
            set
            {
                this.clientVersionField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public uint encryptionStyle
        {
            get
            {
                return this.encryptionStyleField;
            }
            set
            {
                this.encryptionStyleField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public partial class IHardDiskAttachment
    {

        private string hardDiskField;

        private StorageBus busField;

        private int channelField;

        private int deviceField;

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hardDisk
        {
            get
            {
                return this.hardDiskField;
            }
            set
            {
                this.hardDiskField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public StorageBus bus
        {
            get
            {
                return this.busField;
            }
            set
            {
                this.busField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int channel
        {
            get
            {
                return this.channelField;
            }
            set
            {
                this.channelField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int device
        {
            get
            {
                return this.deviceField;
            }
            set
            {
                this.deviceField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum StorageBus
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        IDE,

        /// <comentarios/>
        SATA,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public partial class ISharedFolder
    {

        private string nameField;

        private string hostPathField;

        private bool accessibleField;

        private bool writableField;

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string hostPath
        {
            get
            {
                return this.hostPathField;
            }
            set
            {
                this.hostPathField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool accessible
        {
            get
            {
                return this.accessibleField;
            }
            set
            {
                this.accessibleField = value;
            }
        }

        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool writable
        {
            get
            {
                return this.writableField;
            }
            set
            {
                this.writableField = value;
            }
        }
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum HardDiskStorageType
    {

        /// <comentarios/>
        VirtualDiskImage,

        /// <comentarios/>
        ISCSIHardDisk,

        /// <comentarios/>
        VMDKImage,

        /// <comentarios/>
        CustomHardDisk,

        /// <comentarios/>
        VHDImage,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum ResourceUsage
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        Permanent,

        /// <comentarios/>
        Temporary,

        /// <comentarios/>
        All,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum BIOSBootMenuMode
    {

        /// <comentarios/>
        Disabled,

        /// <comentarios/>
        MenuOnly,

        /// <comentarios/>
        MessageAndMenu,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum IDEControllerType
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        PIIX3,

        /// <comentarios/>
        PIIX4,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum TSBool
    {

        /// <comentarios/>
        False,

        /// <comentarios/>
        True,

        /// <comentarios/>
        Default,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum SessionState
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        Closed,

        /// <comentarios/>
        Open,

        /// <comentarios/>
        Spawning,

        /// <comentarios/>
        Closing,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum MachineState
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        PoweredOff,

        /// <comentarios/>
        Saved,

        /// <comentarios/>
        Aborted,

        /// <comentarios/>
        Running,

        /// <comentarios/>
        Paused,

        /// <comentarios/>
        Stuck,

        /// <comentarios/>
        Starting,

        /// <comentarios/>
        Stopping,

        /// <comentarios/>
        Saving,

        /// <comentarios/>
        Restoring,

        /// <comentarios/>
        Discarding,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum ClipboardMode
    {

        /// <comentarios/>
        Disabled,

        /// <comentarios/>
        HostToGuest,

        /// <comentarios/>
        GuestToHost,

        /// <comentarios/>
        Bidirectional,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum DeviceType
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        Floppy,

        /// <comentarios/>
        DVD,

        /// <comentarios/>
        HardDisk,

        /// <comentarios/>
        Network,

        /// <comentarios/>
        USB,

        /// <comentarios/>
        SharedFolder,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum DeviceActivity
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        Idle,

        /// <comentarios/>
        Reading,

        /// <comentarios/>
        Writing,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum HardDiskType
    {

        /// <comentarios/>
        Normal,

        /// <comentarios/>
        Immutable,

        /// <comentarios/>
        Writethrough,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum DriveState
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        NotMounted,

        /// <comentarios/>
        ImageMounted,

        /// <comentarios/>
        HostDriveCaptured,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum NetworkAdapterType
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        Am79C970A,

        /// <comentarios/>
        Am79C973,

        /// <comentarios/>
        I82540EM,

        /// <comentarios/>
        I82543GC,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum NetworkAttachmentType
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        NAT,

        /// <comentarios/>
        HostInterface,

        /// <comentarios/>
        Internal,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum PortMode
    {

        /// <comentarios/>
        Disconnected,

        /// <comentarios/>
        HostPipe,

        /// <comentarios/>
        HostDevice,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum USBDeviceState
    {

        /// <comentarios/>
        NotSupported,

        /// <comentarios/>
        Unavailable,

        /// <comentarios/>
        Busy,

        /// <comentarios/>
        Available,

        /// <comentarios/>
        Held,

        /// <comentarios/>
        Captured,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum USBDeviceFilterAction
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        Ignore,

        /// <comentarios/>
        Hold,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum AudioControllerType
    {

        /// <comentarios/>
        AC97,

        /// <comentarios/>
        SB16,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum AudioDriverType
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        WinMM,

        /// <comentarios/>
        OSS,

        /// <comentarios/>
        ALSA,

        /// <comentarios/>
        DirectSound,

        /// <comentarios/>
        CoreAudio,

        /// <comentarios/>
        MMPM,

        /// <comentarios/>
        Pulse,

        /// <comentarios/>
        SolAudio,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum VRDPAuthType
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        External,

        /// <comentarios/>
        Guest,
    }

    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.virtualbox.org/")]
    public enum SessionType
    {

        /// <comentarios/>
        Null,

        /// <comentarios/>
        Direct,

        /// <comentarios/>
        Remote,

        /// <comentarios/>
        Existing,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getVersionCompletedEventHandler(object sender, IVirtualBox_getVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getRevisionCompletedEventHandler(object sender, IVirtualBox_getRevisionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getPackageTypeCompletedEventHandler(object sender, IVirtualBox_getPackageTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getPackageTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getPackageTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getHomeFolderCompletedEventHandler(object sender, IVirtualBox_getHomeFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getHomeFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getHomeFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getSettingsFilePathCompletedEventHandler(object sender, IVirtualBox_getSettingsFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getSettingsFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getSettingsFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getSettingsFileVersionCompletedEventHandler(object sender, IVirtualBox_getSettingsFileVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getSettingsFileVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getSettingsFileVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getSettingsFormatVersionCompletedEventHandler(object sender, IVirtualBox_getSettingsFormatVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getSettingsFormatVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getSettingsFormatVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getHostCompletedEventHandler(object sender, IVirtualBox_getHostCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getSystemPropertiesCompletedEventHandler(object sender, IVirtualBox_getSystemPropertiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getSystemPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getSystemPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getMachinesCompletedEventHandler(object sender, IVirtualBox_getMachinesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getMachinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getMachinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getMachines2CompletedEventHandler(object sender, IVirtualBox_getMachines2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getMachines2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getMachines2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getHardDisksCompletedEventHandler(object sender, IVirtualBox_getHardDisksCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getHardDisksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getHardDisksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getDVDImagesCompletedEventHandler(object sender, IVirtualBox_getDVDImagesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getDVDImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getDVDImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getFloppyImagesCompletedEventHandler(object sender, IVirtualBox_getFloppyImagesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getFloppyImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getFloppyImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getProgressOperationsCompletedEventHandler(object sender, IVirtualBox_getProgressOperationsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getProgressOperationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getProgressOperationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getGuestOSTypesCompletedEventHandler(object sender, IVirtualBox_getGuestOSTypesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getGuestOSTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getGuestOSTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IGuestOSType[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IGuestOSType[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getSharedFoldersCompletedEventHandler(object sender, IVirtualBox_getSharedFoldersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getSharedFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getSharedFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ISharedFolder[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ISharedFolder[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getPerformanceCollectorCompletedEventHandler(object sender, IVirtualBox_getPerformanceCollectorCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getPerformanceCollectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getPerformanceCollectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_createMachineCompletedEventHandler(object sender, IVirtualBox_createMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_createMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_createMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_createLegacyMachineCompletedEventHandler(object sender, IVirtualBox_createLegacyMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_createLegacyMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_createLegacyMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openMachineCompletedEventHandler(object sender, IVirtualBox_openMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_openMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_openMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_registerMachineCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getMachineCompletedEventHandler(object sender, IVirtualBox_getMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_findMachineCompletedEventHandler(object sender, IVirtualBox_findMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_findMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_findMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_unregisterMachineCompletedEventHandler(object sender, IVirtualBox_unregisterMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_unregisterMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_unregisterMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_createHardDiskCompletedEventHandler(object sender, IVirtualBox_createHardDiskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_createHardDiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_createHardDiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openHardDiskCompletedEventHandler(object sender, IVirtualBox_openHardDiskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_openHardDiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_openHardDiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openVirtualDiskImageCompletedEventHandler(object sender, IVirtualBox_openVirtualDiskImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_openVirtualDiskImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_openVirtualDiskImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_registerHardDiskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getHardDiskCompletedEventHandler(object sender, IVirtualBox_getHardDiskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getHardDiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getHardDiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_findHardDiskCompletedEventHandler(object sender, IVirtualBox_findHardDiskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_findHardDiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_findHardDiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_findVirtualDiskImageCompletedEventHandler(object sender, IVirtualBox_findVirtualDiskImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_findVirtualDiskImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_findVirtualDiskImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_unregisterHardDiskCompletedEventHandler(object sender, IVirtualBox_unregisterHardDiskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_unregisterHardDiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_unregisterHardDiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openDVDImageCompletedEventHandler(object sender, IVirtualBox_openDVDImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_openDVDImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_openDVDImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_registerDVDImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getDVDImageCompletedEventHandler(object sender, IVirtualBox_getDVDImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getDVDImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getDVDImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_findDVDImageCompletedEventHandler(object sender, IVirtualBox_findDVDImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_findDVDImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_findDVDImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getDVDImageUsageCompletedEventHandler(object sender, IVirtualBox_getDVDImageUsageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getDVDImageUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getDVDImageUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_unregisterDVDImageCompletedEventHandler(object sender, IVirtualBox_unregisterDVDImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_unregisterDVDImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_unregisterDVDImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openFloppyImageCompletedEventHandler(object sender, IVirtualBox_openFloppyImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_openFloppyImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_openFloppyImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_registerFloppyImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getFloppyImageCompletedEventHandler(object sender, IVirtualBox_getFloppyImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getFloppyImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getFloppyImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_findFloppyImageCompletedEventHandler(object sender, IVirtualBox_findFloppyImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_findFloppyImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_findFloppyImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getFloppyImageUsageCompletedEventHandler(object sender, IVirtualBox_getFloppyImageUsageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getFloppyImageUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getFloppyImageUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_unregisterFloppyImageCompletedEventHandler(object sender, IVirtualBox_unregisterFloppyImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_unregisterFloppyImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_unregisterFloppyImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getGuestOSTypeCompletedEventHandler(object sender, IVirtualBox_getGuestOSTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getGuestOSTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getGuestOSTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IGuestOSType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IGuestOSType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_createSharedFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_removeSharedFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getNextExtraDataKeyCompletedEventHandler(object sender, IVirtualBox_getNextExtraDataKeyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getNextExtraDataKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getNextExtraDataKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        /// <remarks/>
        public string nextValue
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_getExtraDataCompletedEventHandler(object sender, IVirtualBox_getExtraDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_getExtraDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_getExtraDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_setExtraDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openRemoteSessionCompletedEventHandler(object sender, IVirtualBox_openRemoteSessionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_openRemoteSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_openRemoteSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_openExistingSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_waitForPropertyChangeCompletedEventHandler(object sender, IVirtualBox_waitForPropertyChangeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_waitForPropertyChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_waitForPropertyChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        /// <remarks/>
        public string values
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_saveSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualBox_saveSettingsWithBackupCompletedEventHandler(object sender, IVirtualBox_saveSettingsWithBackupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualBox_saveSettingsWithBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualBox_saveSettingsWithBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getLogoFadeInCompletedEventHandler(object sender, IBIOSSettings_getLogoFadeInCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getLogoFadeInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getLogoFadeInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setLogoFadeInCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getLogoFadeOutCompletedEventHandler(object sender, IBIOSSettings_getLogoFadeOutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getLogoFadeOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getLogoFadeOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setLogoFadeOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getLogoDisplayTimeCompletedEventHandler(object sender, IBIOSSettings_getLogoDisplayTimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getLogoDisplayTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getLogoDisplayTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setLogoDisplayTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getLogoImagePathCompletedEventHandler(object sender, IBIOSSettings_getLogoImagePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getLogoImagePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getLogoImagePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setLogoImagePathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getBootMenuModeCompletedEventHandler(object sender, IBIOSSettings_getBootMenuModeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getBootMenuModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getBootMenuModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public BIOSBootMenuMode Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((BIOSBootMenuMode)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setBootMenuModeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getACPIEnabledCompletedEventHandler(object sender, IBIOSSettings_getACPIEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getACPIEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getACPIEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setACPIEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getIOAPICEnabledCompletedEventHandler(object sender, IBIOSSettings_getIOAPICEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getIOAPICEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getIOAPICEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setIOAPICEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getTimeOffsetCompletedEventHandler(object sender, IBIOSSettings_getTimeOffsetCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getTimeOffsetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getTimeOffsetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setTimeOffsetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getPXEDebugEnabledCompletedEventHandler(object sender, IBIOSSettings_getPXEDebugEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getPXEDebugEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getPXEDebugEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setPXEDebugEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_getIDEControllerTypeCompletedEventHandler(object sender, IBIOSSettings_getIDEControllerTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IBIOSSettings_getIDEControllerTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IBIOSSettings_getIDEControllerTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IDEControllerType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IDEControllerType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IBIOSSettings_setIDEControllerTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getParentCompletedEventHandler(object sender, IMachine_getParentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getAccessibleCompletedEventHandler(object sender, IMachine_getAccessibleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getAccessibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getAccessibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getNameCompletedEventHandler(object sender, IMachine_getNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getDescriptionCompletedEventHandler(object sender, IMachine_getDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getIdCompletedEventHandler(object sender, IMachine_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getOSTypeIdCompletedEventHandler(object sender, IMachine_getOSTypeIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getOSTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getOSTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setOSTypeIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getMemorySizeCompletedEventHandler(object sender, IMachine_getMemorySizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getMemorySizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getMemorySizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setMemorySizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getMemoryBalloonSizeCompletedEventHandler(object sender, IMachine_getMemoryBalloonSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getMemoryBalloonSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getMemoryBalloonSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setMemoryBalloonSizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getStatisticsUpdateIntervalCompletedEventHandler(object sender, IMachine_getStatisticsUpdateIntervalCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getStatisticsUpdateIntervalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getStatisticsUpdateIntervalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setStatisticsUpdateIntervalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getVRAMSizeCompletedEventHandler(object sender, IMachine_getVRAMSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getVRAMSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getVRAMSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setVRAMSizeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getMonitorCountCompletedEventHandler(object sender, IMachine_getMonitorCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getMonitorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getMonitorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setMonitorCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getBIOSSettingsCompletedEventHandler(object sender, IMachine_getBIOSSettingsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getBIOSSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getBIOSSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getHWVirtExEnabledCompletedEventHandler(object sender, IMachine_getHWVirtExEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getHWVirtExEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getHWVirtExEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public TSBool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((TSBool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setHWVirtExEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getHWVirtExNestedPagingEnabledCompletedEventHandler(object sender, IMachine_getHWVirtExNestedPagingEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getHWVirtExNestedPagingEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getHWVirtExNestedPagingEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setHWVirtExNestedPagingEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getPAEEnabledCompletedEventHandler(object sender, IMachine_getPAEEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getPAEEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getPAEEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setPAEEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSnapshotFolderCompletedEventHandler(object sender, IMachine_getSnapshotFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSnapshotFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSnapshotFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setSnapshotFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getVRDPServerCompletedEventHandler(object sender, IMachine_getVRDPServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getVRDPServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getVRDPServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getHardDiskAttachmentsCompletedEventHandler(object sender, IMachine_getHardDiskAttachmentsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getHardDiskAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getHardDiskAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IHardDiskAttachment[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IHardDiskAttachment[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getDVDDriveCompletedEventHandler(object sender, IMachine_getDVDDriveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getDVDDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getDVDDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getFloppyDriveCompletedEventHandler(object sender, IMachine_getFloppyDriveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getFloppyDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getFloppyDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getUSBControllerCompletedEventHandler(object sender, IMachine_getUSBControllerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getUSBControllerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getUSBControllerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getAudioAdapterCompletedEventHandler(object sender, IMachine_getAudioAdapterCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getAudioAdapterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getAudioAdapterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSATAControllerCompletedEventHandler(object sender, IMachine_getSATAControllerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSATAControllerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSATAControllerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSettingsFilePathCompletedEventHandler(object sender, IMachine_getSettingsFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSettingsFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSettingsFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSettingsFileVersionCompletedEventHandler(object sender, IMachine_getSettingsFileVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSettingsFileVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSettingsFileVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSettingsModifiedCompletedEventHandler(object sender, IMachine_getSettingsModifiedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSettingsModifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSettingsModifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSessionStateCompletedEventHandler(object sender, IMachine_getSessionStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSessionStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSessionStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SessionState Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SessionState)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSessionTypeCompletedEventHandler(object sender, IMachine_getSessionTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSessionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSessionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSessionPidCompletedEventHandler(object sender, IMachine_getSessionPidCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSessionPidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSessionPidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getStateCompletedEventHandler(object sender, IMachine_getStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MachineState Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MachineState)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getLastStateChangeCompletedEventHandler(object sender, IMachine_getLastStateChangeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getLastStateChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getLastStateChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getStateFilePathCompletedEventHandler(object sender, IMachine_getStateFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getStateFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getStateFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getLogFolderCompletedEventHandler(object sender, IMachine_getLogFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getLogFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getLogFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getCurrentSnapshotCompletedEventHandler(object sender, IMachine_getCurrentSnapshotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getCurrentSnapshotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getCurrentSnapshotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSnapshotCountCompletedEventHandler(object sender, IMachine_getSnapshotCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSnapshotCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSnapshotCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getCurrentStateModifiedCompletedEventHandler(object sender, IMachine_getCurrentStateModifiedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getCurrentStateModifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getCurrentStateModifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSharedFoldersCompletedEventHandler(object sender, IMachine_getSharedFoldersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSharedFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSharedFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ISharedFolder[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ISharedFolder[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getClipboardModeCompletedEventHandler(object sender, IMachine_getClipboardModeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getClipboardModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getClipboardModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ClipboardMode Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ClipboardMode)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setClipboardModeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setBootOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getBootOrderCompletedEventHandler(object sender, IMachine_getBootOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getBootOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getBootOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DeviceType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DeviceType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_attachHardDiskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getHardDiskCompletedEventHandler(object sender, IMachine_getHardDiskCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getHardDiskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getHardDiskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_detachHardDiskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getNetworkAdapterCompletedEventHandler(object sender, IMachine_getNetworkAdapterCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getNetworkAdapterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getNetworkAdapterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSerialPortCompletedEventHandler(object sender, IMachine_getSerialPortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSerialPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSerialPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getParallelPortCompletedEventHandler(object sender, IMachine_getParallelPortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getParallelPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getParallelPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getNextExtraDataKeyCompletedEventHandler(object sender, IMachine_getNextExtraDataKeyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getNextExtraDataKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getNextExtraDataKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        /// <remarks/>
        public string nextValue
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getExtraDataCompletedEventHandler(object sender, IMachine_getExtraDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getExtraDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getExtraDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setExtraDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_saveSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_saveSettingsWithBackupCompletedEventHandler(object sender, IMachine_saveSettingsWithBackupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_saveSettingsWithBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_saveSettingsWithBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_discardSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_deleteSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getSnapshotCompletedEventHandler(object sender, IMachine_getSnapshotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getSnapshotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getSnapshotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_findSnapshotCompletedEventHandler(object sender, IMachine_findSnapshotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_findSnapshotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_findSnapshotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setCurrentSnapshotCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_createSharedFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_removeSharedFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_canShowConsoleWindowCompletedEventHandler(object sender, IMachine_canShowConsoleWindowCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_canShowConsoleWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_canShowConsoleWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_showConsoleWindowCompletedEventHandler(object sender, IMachine_showConsoleWindowCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_showConsoleWindowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_showConsoleWindowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ulong Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getGuestPropertyCompletedEventHandler(object sender, IMachine_getGuestPropertyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getGuestPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getGuestPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        /// <remarks/>
        public ulong timestamp
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[1]));
            }
        }

        /// <remarks/>
        public string flags
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getGuestPropertyValueCompletedEventHandler(object sender, IMachine_getGuestPropertyValueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getGuestPropertyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getGuestPropertyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_getGuestPropertyTimestampCompletedEventHandler(object sender, IMachine_getGuestPropertyTimestampCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_getGuestPropertyTimestampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_getGuestPropertyTimestampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ulong Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setGuestPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_setGuestPropertyValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMachine_enumerateGuestPropertiesCompletedEventHandler(object sender, IMachine_enumerateGuestPropertiesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMachine_enumerateGuestPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMachine_enumerateGuestPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }

        /// <remarks/>
        public string[] value
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }

        /// <remarks/>
        public ulong[] timestamp
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong[])(this.results[2]));
            }
        }

        /// <remarks/>
        public string[] flags
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getMachineCompletedEventHandler(object sender, IConsole_getMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getStateCompletedEventHandler(object sender, IConsole_getStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public MachineState Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((MachineState)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getKeyboardCompletedEventHandler(object sender, IConsole_getKeyboardCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getKeyboardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getKeyboardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getMouseCompletedEventHandler(object sender, IConsole_getMouseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getMouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getMouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getUSBDevicesCompletedEventHandler(object sender, IConsole_getUSBDevicesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getUSBDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getUSBDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getRemoteUSBDevicesCompletedEventHandler(object sender, IConsole_getRemoteUSBDevicesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getRemoteUSBDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getRemoteUSBDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getSharedFoldersCompletedEventHandler(object sender, IConsole_getSharedFoldersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getSharedFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getSharedFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ISharedFolder[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ISharedFolder[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getRemoteDisplayInfoCompletedEventHandler(object sender, IConsole_getRemoteDisplayInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getRemoteDisplayInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getRemoteDisplayInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public IRemoteDisplayInfo Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((IRemoteDisplayInfo)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_powerUpCompletedEventHandler(object sender, IConsole_powerUpCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_powerUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_powerUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_powerDownCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_resetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_pauseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_resumeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_powerButtonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_sleepButtonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getPowerButtonHandledCompletedEventHandler(object sender, IConsole_getPowerButtonHandledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getPowerButtonHandledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getPowerButtonHandledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_saveStateCompletedEventHandler(object sender, IConsole_saveStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_saveStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_saveStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_adoptSavedStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_discardSavedStateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_getDeviceActivityCompletedEventHandler(object sender, IConsole_getDeviceActivityCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_getDeviceActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_getDeviceActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DeviceActivity Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DeviceActivity)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_attachUSBDeviceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_detachUSBDeviceCompletedEventHandler(object sender, IConsole_detachUSBDeviceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_detachUSBDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_detachUSBDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_createSharedFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_removeSharedFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_takeSnapshotCompletedEventHandler(object sender, IConsole_takeSnapshotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_takeSnapshotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_takeSnapshotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_discardSnapshotCompletedEventHandler(object sender, IConsole_discardSnapshotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_discardSnapshotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_discardSnapshotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_discardCurrentStateCompletedEventHandler(object sender, IConsole_discardCurrentStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_discardCurrentStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_discardCurrentStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IConsole_discardCurrentSnapshotAndStateCompletedEventHandler(object sender, IConsole_discardCurrentSnapshotAndStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IConsole_discardCurrentSnapshotAndStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IConsole_discardCurrentSnapshotAndStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostDVDDrive_getNameCompletedEventHandler(object sender, IHostDVDDrive_getNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostDVDDrive_getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostDVDDrive_getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostDVDDrive_getDescriptionCompletedEventHandler(object sender, IHostDVDDrive_getDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostDVDDrive_getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostDVDDrive_getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostDVDDrive_getUdiCompletedEventHandler(object sender, IHostDVDDrive_getUdiCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostDVDDrive_getUdiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostDVDDrive_getUdiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostFloppyDrive_getNameCompletedEventHandler(object sender, IHostFloppyDrive_getNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostFloppyDrive_getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostFloppyDrive_getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostFloppyDrive_getDescriptionCompletedEventHandler(object sender, IHostFloppyDrive_getDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostFloppyDrive_getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostFloppyDrive_getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostFloppyDrive_getUdiCompletedEventHandler(object sender, IHostFloppyDrive_getUdiCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostFloppyDrive_getUdiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostFloppyDrive_getUdiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostNetworkInterface_getNameCompletedEventHandler(object sender, IHostNetworkInterface_getNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostNetworkInterface_getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostNetworkInterface_getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostNetworkInterface_getIdCompletedEventHandler(object sender, IHostNetworkInterface_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostNetworkInterface_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostNetworkInterface_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getDVDDrivesCompletedEventHandler(object sender, IHost_getDVDDrivesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getDVDDrivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getDVDDrivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getFloppyDrivesCompletedEventHandler(object sender, IHost_getFloppyDrivesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getFloppyDrivesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getFloppyDrivesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getUSBDevicesCompletedEventHandler(object sender, IHost_getUSBDevicesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getUSBDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getUSBDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getUSBDeviceFiltersCompletedEventHandler(object sender, IHost_getUSBDeviceFiltersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getUSBDeviceFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getUSBDeviceFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getNetworkInterfacesCompletedEventHandler(object sender, IHost_getNetworkInterfacesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getNetworkInterfacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getNetworkInterfacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getProcessorCountCompletedEventHandler(object sender, IHost_getProcessorCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getProcessorCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getProcessorCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getProcessorOnlineCountCompletedEventHandler(object sender, IHost_getProcessorOnlineCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getProcessorOnlineCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getProcessorOnlineCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getMemorySizeCompletedEventHandler(object sender, IHost_getMemorySizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getMemorySizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getMemorySizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getMemoryAvailableCompletedEventHandler(object sender, IHost_getMemoryAvailableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getMemoryAvailableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getMemoryAvailableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getOperatingSystemCompletedEventHandler(object sender, IHost_getOperatingSystemCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getOperatingSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getOperatingSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getOSVersionCompletedEventHandler(object sender, IHost_getOSVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getOSVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getOSVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getUTCTimeCompletedEventHandler(object sender, IHost_getUTCTimeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getUTCTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getUTCTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getProcessorSpeedCompletedEventHandler(object sender, IHost_getProcessorSpeedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getProcessorSpeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getProcessorSpeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_getProcessorDescriptionCompletedEventHandler(object sender, IHost_getProcessorDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_getProcessorDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_getProcessorDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_createUSBDeviceFilterCompletedEventHandler(object sender, IHost_createUSBDeviceFilterCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_createUSBDeviceFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_createUSBDeviceFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_insertUSBDeviceFilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHost_removeUSBDeviceFilterCompletedEventHandler(object sender, IHost_removeUSBDeviceFilterCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHost_removeUSBDeviceFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHost_removeUSBDeviceFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getMinGuestRAMCompletedEventHandler(object sender, ISystemProperties_getMinGuestRAMCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getMinGuestRAMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getMinGuestRAMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getMaxGuestRAMCompletedEventHandler(object sender, ISystemProperties_getMaxGuestRAMCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getMaxGuestRAMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getMaxGuestRAMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getMinGuestVRAMCompletedEventHandler(object sender, ISystemProperties_getMinGuestVRAMCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getMinGuestVRAMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getMinGuestVRAMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getMaxGuestVRAMCompletedEventHandler(object sender, ISystemProperties_getMaxGuestVRAMCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getMaxGuestVRAMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getMaxGuestVRAMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getMaxVDISizeCompletedEventHandler(object sender, ISystemProperties_getMaxVDISizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getMaxVDISizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getMaxVDISizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ulong Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getNetworkAdapterCountCompletedEventHandler(object sender, ISystemProperties_getNetworkAdapterCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getNetworkAdapterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getNetworkAdapterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getSerialPortCountCompletedEventHandler(object sender, ISystemProperties_getSerialPortCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getSerialPortCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getSerialPortCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getParallelPortCountCompletedEventHandler(object sender, ISystemProperties_getParallelPortCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getParallelPortCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getParallelPortCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getMaxBootPositionCompletedEventHandler(object sender, ISystemProperties_getMaxBootPositionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getMaxBootPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getMaxBootPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getDefaultVDIFolderCompletedEventHandler(object sender, ISystemProperties_getDefaultVDIFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getDefaultVDIFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getDefaultVDIFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_setDefaultVDIFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getDefaultMachineFolderCompletedEventHandler(object sender, ISystemProperties_getDefaultMachineFolderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getDefaultMachineFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getDefaultMachineFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_setDefaultMachineFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getRemoteDisplayAuthLibraryCompletedEventHandler(object sender, ISystemProperties_getRemoteDisplayAuthLibraryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getRemoteDisplayAuthLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getRemoteDisplayAuthLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_setRemoteDisplayAuthLibraryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getWebServiceAuthLibraryCompletedEventHandler(object sender, ISystemProperties_getWebServiceAuthLibraryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getWebServiceAuthLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getWebServiceAuthLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_setWebServiceAuthLibraryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getHWVirtExEnabledCompletedEventHandler(object sender, ISystemProperties_getHWVirtExEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getHWVirtExEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getHWVirtExEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_setHWVirtExEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_getLogHistoryCountCompletedEventHandler(object sender, ISystemProperties_getLogHistoryCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISystemProperties_getLogHistoryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISystemProperties_getLogHistoryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISystemProperties_setLogHistoryCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getIdCompletedEventHandler(object sender, IProgress_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getDescriptionCompletedEventHandler(object sender, IProgress_getDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getCancelableCompletedEventHandler(object sender, IProgress_getCancelableCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getCancelableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getCancelableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getPercentCompletedEventHandler(object sender, IProgress_getPercentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getPercentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getPercentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getCompletedCompletedEventHandler(object sender, IProgress_getCompletedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getCompletedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getCompletedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getCanceledCompletedEventHandler(object sender, IProgress_getCanceledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getCanceledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getCanceledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getResultCodeCompletedEventHandler(object sender, IProgress_getResultCodeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getResultCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getResultCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getOperationCountCompletedEventHandler(object sender, IProgress_getOperationCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getOperationCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getOperationCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getOperationCompletedEventHandler(object sender, IProgress_getOperationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getOperationDescriptionCompletedEventHandler(object sender, IProgress_getOperationDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getOperationDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getOperationDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_getOperationPercentCompletedEventHandler(object sender, IProgress_getOperationPercentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IProgress_getOperationPercentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IProgress_getOperationPercentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_waitForCompletionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_waitForOperationCompletionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IProgress_cancelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getIdCompletedEventHandler(object sender, ISnapshot_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getNameCompletedEventHandler(object sender, ISnapshot_getNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_setNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getDescriptionCompletedEventHandler(object sender, ISnapshot_getDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_setDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getTimeStampCompletedEventHandler(object sender, ISnapshot_getTimeStampCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getTimeStampCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getTimeStampCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getOnlineCompletedEventHandler(object sender, ISnapshot_getOnlineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getOnlineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getOnlineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getMachineCompletedEventHandler(object sender, ISnapshot_getMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getParentCompletedEventHandler(object sender, ISnapshot_getParentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISnapshot_getChildrenCompletedEventHandler(object sender, ISnapshot_getChildrenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISnapshot_getChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISnapshot_getChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getIdCompletedEventHandler(object sender, IHardDisk_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getDescriptionCompletedEventHandler(object sender, IHardDisk_getDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_setDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getStorageTypeCompletedEventHandler(object sender, IHardDisk_getStorageTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getStorageTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getStorageTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public HardDiskStorageType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((HardDiskStorageType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getLocationCompletedEventHandler(object sender, IHardDisk_getLocationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getTypeCompletedEventHandler(object sender, IHardDisk_getTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public HardDiskType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((HardDiskType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_setTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getParentCompletedEventHandler(object sender, IHardDisk_getParentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getChildrenCompletedEventHandler(object sender, IHardDisk_getChildrenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getRootCompletedEventHandler(object sender, IHardDisk_getRootCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getRootCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getRootCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getAccessibleCompletedEventHandler(object sender, IHardDisk_getAccessibleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getAccessibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getAccessibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getAllAccessibleCompletedEventHandler(object sender, IHardDisk_getAllAccessibleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getAllAccessibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getAllAccessibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getLastAccessErrorCompletedEventHandler(object sender, IHardDisk_getLastAccessErrorCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getLastAccessErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getLastAccessErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getSizeCompletedEventHandler(object sender, IHardDisk_getSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ulong Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getActualSizeCompletedEventHandler(object sender, IHardDisk_getActualSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getActualSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getActualSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ulong Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getMachineIdCompletedEventHandler(object sender, IHardDisk_getMachineIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getMachineIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getMachineIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_getSnapshotIdCompletedEventHandler(object sender, IHardDisk_getSnapshotIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_getSnapshotIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_getSnapshotIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHardDisk_cloneToImageCompletedEventHandler(object sender, IHardDisk_cloneToImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHardDisk_cloneToImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHardDisk_cloneToImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }

        /// <remarks/>
        public string returnval
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualDiskImage_getFilePathCompletedEventHandler(object sender, IVirtualDiskImage_getFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualDiskImage_getFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualDiskImage_getFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualDiskImage_setFilePathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualDiskImage_getCreatedCompletedEventHandler(object sender, IVirtualDiskImage_getCreatedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualDiskImage_getCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualDiskImage_getCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualDiskImage_createDynamicImageCompletedEventHandler(object sender, IVirtualDiskImage_createDynamicImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualDiskImage_createDynamicImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualDiskImage_createDynamicImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualDiskImage_createFixedImageCompletedEventHandler(object sender, IVirtualDiskImage_createFixedImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVirtualDiskImage_createFixedImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVirtualDiskImage_createFixedImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVirtualDiskImage_deleteImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_getServerCompletedEventHandler(object sender, IISCSIHardDisk_getServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IISCSIHardDisk_getServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IISCSIHardDisk_getServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_setServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_getPortCompletedEventHandler(object sender, IISCSIHardDisk_getPortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IISCSIHardDisk_getPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IISCSIHardDisk_getPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_setPortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_getTargetCompletedEventHandler(object sender, IISCSIHardDisk_getTargetCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IISCSIHardDisk_getTargetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IISCSIHardDisk_getTargetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_setTargetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_getLunCompletedEventHandler(object sender, IISCSIHardDisk_getLunCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IISCSIHardDisk_getLunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IISCSIHardDisk_getLunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ulong Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_setLunCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_getUserNameCompletedEventHandler(object sender, IISCSIHardDisk_getUserNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IISCSIHardDisk_getUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IISCSIHardDisk_getUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_setUserNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_getPasswordCompletedEventHandler(object sender, IISCSIHardDisk_getPasswordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IISCSIHardDisk_getPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IISCSIHardDisk_getPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IISCSIHardDisk_setPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVMDKImage_getFilePathCompletedEventHandler(object sender, IVMDKImage_getFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVMDKImage_getFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVMDKImage_getFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVMDKImage_setFilePathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVMDKImage_getCreatedCompletedEventHandler(object sender, IVMDKImage_getCreatedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVMDKImage_getCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVMDKImage_getCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVMDKImage_createDynamicImageCompletedEventHandler(object sender, IVMDKImage_createDynamicImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVMDKImage_createDynamicImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVMDKImage_createDynamicImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVMDKImage_createFixedImageCompletedEventHandler(object sender, IVMDKImage_createFixedImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVMDKImage_createFixedImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVMDKImage_createFixedImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVMDKImage_deleteImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ICustomHardDisk_getLocationCompletedEventHandler(object sender, ICustomHardDisk_getLocationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ICustomHardDisk_getLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ICustomHardDisk_getLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ICustomHardDisk_setLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ICustomHardDisk_getFormatCompletedEventHandler(object sender, ICustomHardDisk_getFormatCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ICustomHardDisk_getFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ICustomHardDisk_getFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ICustomHardDisk_getCreatedCompletedEventHandler(object sender, ICustomHardDisk_getCreatedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ICustomHardDisk_getCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ICustomHardDisk_getCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ICustomHardDisk_createDynamicImageCompletedEventHandler(object sender, ICustomHardDisk_createDynamicImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ICustomHardDisk_createDynamicImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ICustomHardDisk_createDynamicImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ICustomHardDisk_createFixedImageCompletedEventHandler(object sender, ICustomHardDisk_createFixedImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ICustomHardDisk_createFixedImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ICustomHardDisk_createFixedImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ICustomHardDisk_deleteImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVHDImage_getFilePathCompletedEventHandler(object sender, IVHDImage_getFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVHDImage_getFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVHDImage_getFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVHDImage_setFilePathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVHDImage_getCreatedCompletedEventHandler(object sender, IVHDImage_getCreatedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVHDImage_getCreatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVHDImage_getCreatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVHDImage_createDynamicImageCompletedEventHandler(object sender, IVHDImage_createDynamicImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVHDImage_createDynamicImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVHDImage_createDynamicImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVHDImage_createFixedImageCompletedEventHandler(object sender, IVHDImage_createFixedImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVHDImage_createFixedImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVHDImage_createFixedImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVHDImage_deleteImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDImage_getIdCompletedEventHandler(object sender, IDVDImage_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDImage_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDImage_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDImage_getFilePathCompletedEventHandler(object sender, IDVDImage_getFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDImage_getFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDImage_getFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDImage_getAccessibleCompletedEventHandler(object sender, IDVDImage_getAccessibleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDImage_getAccessibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDImage_getAccessibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDImage_getSizeCompletedEventHandler(object sender, IDVDImage_getSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDImage_getSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDImage_getSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ulong Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ulong)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_getStateCompletedEventHandler(object sender, IDVDDrive_getStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDDrive_getStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDDrive_getStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DriveState Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DriveState)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_getPassthroughCompletedEventHandler(object sender, IDVDDrive_getPassthroughCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDDrive_getPassthroughCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDDrive_getPassthroughCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_setPassthroughCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_mountImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_captureHostDriveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_unmountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_getImageCompletedEventHandler(object sender, IDVDDrive_getImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDDrive_getImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDDrive_getImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IDVDDrive_getHostDriveCompletedEventHandler(object sender, IDVDDrive_getHostDriveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IDVDDrive_getHostDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IDVDDrive_getHostDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyImage_getIdCompletedEventHandler(object sender, IFloppyImage_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyImage_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyImage_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyImage_getFilePathCompletedEventHandler(object sender, IFloppyImage_getFilePathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyImage_getFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyImage_getFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyImage_getAccessibleCompletedEventHandler(object sender, IFloppyImage_getAccessibleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyImage_getAccessibleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyImage_getAccessibleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyImage_getSizeCompletedEventHandler(object sender, IFloppyImage_getSizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyImage_getSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyImage_getSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_getEnabledCompletedEventHandler(object sender, IFloppyDrive_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyDrive_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyDrive_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_getStateCompletedEventHandler(object sender, IFloppyDrive_getStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyDrive_getStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyDrive_getStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public DriveState Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((DriveState)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_mountImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_captureHostDriveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_unmountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_getImageCompletedEventHandler(object sender, IFloppyDrive_getImageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyDrive_getImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyDrive_getImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IFloppyDrive_getHostDriveCompletedEventHandler(object sender, IFloppyDrive_getHostDriveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IFloppyDrive_getHostDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IFloppyDrive_getHostDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IKeyboard_putScancodeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IKeyboard_putScancodesCompletedEventHandler(object sender, IKeyboard_putScancodesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IKeyboard_putScancodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IKeyboard_putScancodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IKeyboard_putCADCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMouse_getAbsoluteSupportedCompletedEventHandler(object sender, IMouse_getAbsoluteSupportedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IMouse_getAbsoluteSupportedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IMouse_getAbsoluteSupportedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMouse_putMouseEventCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IMouse_putMouseEventAbsoluteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getAdapterTypeCompletedEventHandler(object sender, INetworkAdapter_getAdapterTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getAdapterTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getAdapterTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public NetworkAdapterType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((NetworkAdapterType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setAdapterTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getSlotCompletedEventHandler(object sender, INetworkAdapter_getSlotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getSlotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getSlotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getEnabledCompletedEventHandler(object sender, INetworkAdapter_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getMACAddressCompletedEventHandler(object sender, INetworkAdapter_getMACAddressCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getMACAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getMACAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setMACAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getAttachmentTypeCompletedEventHandler(object sender, INetworkAdapter_getAttachmentTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getAttachmentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getAttachmentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public NetworkAttachmentType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((NetworkAttachmentType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getHostInterfaceCompletedEventHandler(object sender, INetworkAdapter_getHostInterfaceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getHostInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getHostInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setHostInterfaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getInternalNetworkCompletedEventHandler(object sender, INetworkAdapter_getInternalNetworkCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getInternalNetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getInternalNetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setInternalNetworkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getNATNetworkCompletedEventHandler(object sender, INetworkAdapter_getNATNetworkCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getNATNetworkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getNATNetworkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setNATNetworkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getCableConnectedCompletedEventHandler(object sender, INetworkAdapter_getCableConnectedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getCableConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getCableConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setCableConnectedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getLineSpeedCompletedEventHandler(object sender, INetworkAdapter_getLineSpeedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getLineSpeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getLineSpeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setLineSpeedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getTraceEnabledCompletedEventHandler(object sender, INetworkAdapter_getTraceEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getTraceEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getTraceEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setTraceEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_getTraceFileCompletedEventHandler(object sender, INetworkAdapter_getTraceFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INetworkAdapter_getTraceFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal INetworkAdapter_getTraceFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_setTraceFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_attachToNATCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_attachToHostInterfaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_attachToInternalNetworkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void INetworkAdapter_detachCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_getSlotCompletedEventHandler(object sender, ISerialPort_getSlotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISerialPort_getSlotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISerialPort_getSlotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_getEnabledCompletedEventHandler(object sender, ISerialPort_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISerialPort_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISerialPort_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_getIOBaseCompletedEventHandler(object sender, ISerialPort_getIOBaseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISerialPort_getIOBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISerialPort_getIOBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_setIOBaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_getIRQCompletedEventHandler(object sender, ISerialPort_getIRQCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISerialPort_getIRQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISerialPort_getIRQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_setIRQCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_getHostModeCompletedEventHandler(object sender, ISerialPort_getHostModeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISerialPort_getHostModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISerialPort_getHostModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public PortMode Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((PortMode)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_setHostModeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_getServerCompletedEventHandler(object sender, ISerialPort_getServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISerialPort_getServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISerialPort_getServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_setServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_getPathCompletedEventHandler(object sender, ISerialPort_getPathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISerialPort_getPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISerialPort_getPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISerialPort_setPathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_getSlotCompletedEventHandler(object sender, IParallelPort_getSlotCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IParallelPort_getSlotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IParallelPort_getSlotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_getEnabledCompletedEventHandler(object sender, IParallelPort_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IParallelPort_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IParallelPort_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_getIOBaseCompletedEventHandler(object sender, IParallelPort_getIOBaseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IParallelPort_getIOBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IParallelPort_getIOBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_setIOBaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_getIRQCompletedEventHandler(object sender, IParallelPort_getIRQCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IParallelPort_getIRQCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IParallelPort_getIRQCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_setIRQCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_getPathCompletedEventHandler(object sender, IParallelPort_getPathCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IParallelPort_getPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IParallelPort_getPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IParallelPort_setPathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_getEnabledCompletedEventHandler(object sender, IUSBController_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBController_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBController_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_getEnabledEhciCompletedEventHandler(object sender, IUSBController_getEnabledEhciCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBController_getEnabledEhciCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBController_getEnabledEhciCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_setEnabledEhciCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_getUSBStandardCompletedEventHandler(object sender, IUSBController_getUSBStandardCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBController_getUSBStandardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBController_getUSBStandardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_getDeviceFiltersCompletedEventHandler(object sender, IUSBController_getDeviceFiltersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBController_getDeviceFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBController_getDeviceFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_createDeviceFilterCompletedEventHandler(object sender, IUSBController_createDeviceFilterCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBController_createDeviceFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBController_createDeviceFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_insertDeviceFilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBController_removeDeviceFilterCompletedEventHandler(object sender, IUSBController_removeDeviceFilterCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBController_removeDeviceFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBController_removeDeviceFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getIdCompletedEventHandler(object sender, IUSBDevice_getIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getVendorIdCompletedEventHandler(object sender, IUSBDevice_getVendorIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getProductIdCompletedEventHandler(object sender, IUSBDevice_getProductIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getRevisionCompletedEventHandler(object sender, IUSBDevice_getRevisionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getManufacturerCompletedEventHandler(object sender, IUSBDevice_getManufacturerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getManufacturerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getManufacturerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getProductCompletedEventHandler(object sender, IUSBDevice_getProductCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getSerialNumberCompletedEventHandler(object sender, IUSBDevice_getSerialNumberCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getSerialNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getSerialNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getAddressCompletedEventHandler(object sender, IUSBDevice_getAddressCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getPortCompletedEventHandler(object sender, IUSBDevice_getPortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getVersionCompletedEventHandler(object sender, IUSBDevice_getVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getPortVersionCompletedEventHandler(object sender, IUSBDevice_getPortVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getPortVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getPortVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ushort Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ushort)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDevice_getRemoteCompletedEventHandler(object sender, IUSBDevice_getRemoteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDevice_getRemoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDevice_getRemoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getNameCompletedEventHandler(object sender, IUSBDeviceFilter_getNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getActiveCompletedEventHandler(object sender, IUSBDeviceFilter_getActiveCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setActiveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getVendorIdCompletedEventHandler(object sender, IUSBDeviceFilter_getVendorIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setVendorIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getProductIdCompletedEventHandler(object sender, IUSBDeviceFilter_getProductIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setProductIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getRevisionCompletedEventHandler(object sender, IUSBDeviceFilter_getRevisionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setRevisionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getManufacturerCompletedEventHandler(object sender, IUSBDeviceFilter_getManufacturerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getManufacturerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getManufacturerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setManufacturerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getProductCompletedEventHandler(object sender, IUSBDeviceFilter_getProductCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getSerialNumberCompletedEventHandler(object sender, IUSBDeviceFilter_getSerialNumberCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getSerialNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getSerialNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setSerialNumberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getPortCompletedEventHandler(object sender, IUSBDeviceFilter_getPortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setPortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getRemoteCompletedEventHandler(object sender, IUSBDeviceFilter_getRemoteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getRemoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getRemoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setRemoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_getMaskedInterfacesCompletedEventHandler(object sender, IUSBDeviceFilter_getMaskedInterfacesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IUSBDeviceFilter_getMaskedInterfacesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IUSBDeviceFilter_getMaskedInterfacesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IUSBDeviceFilter_setMaskedInterfacesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostUSBDevice_getStateCompletedEventHandler(object sender, IHostUSBDevice_getStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostUSBDevice_getStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostUSBDevice_getStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public USBDeviceState Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((USBDeviceState)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostUSBDeviceFilter_getActionCompletedEventHandler(object sender, IHostUSBDeviceFilter_getActionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IHostUSBDeviceFilter_getActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IHostUSBDeviceFilter_getActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public USBDeviceFilterAction Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((USBDeviceFilterAction)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IHostUSBDeviceFilter_setActionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IAudioAdapter_getEnabledCompletedEventHandler(object sender, IAudioAdapter_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IAudioAdapter_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IAudioAdapter_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IAudioAdapter_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IAudioAdapter_getAudioControllerCompletedEventHandler(object sender, IAudioAdapter_getAudioControllerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IAudioAdapter_getAudioControllerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IAudioAdapter_getAudioControllerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AudioControllerType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AudioControllerType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IAudioAdapter_setAudioControllerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IAudioAdapter_getAudioDriverCompletedEventHandler(object sender, IAudioAdapter_getAudioDriverCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IAudioAdapter_getAudioDriverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IAudioAdapter_getAudioDriverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AudioDriverType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AudioDriverType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IAudioAdapter_setAudioDriverCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_getEnabledCompletedEventHandler(object sender, IVRDPServer_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVRDPServer_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVRDPServer_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_getPortCompletedEventHandler(object sender, IVRDPServer_getPortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVRDPServer_getPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVRDPServer_getPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_setPortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_getNetAddressCompletedEventHandler(object sender, IVRDPServer_getNetAddressCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVRDPServer_getNetAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVRDPServer_getNetAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_setNetAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_getAuthTypeCompletedEventHandler(object sender, IVRDPServer_getAuthTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVRDPServer_getAuthTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVRDPServer_getAuthTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public VRDPAuthType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((VRDPAuthType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_setAuthTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_getAuthTimeoutCompletedEventHandler(object sender, IVRDPServer_getAuthTimeoutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVRDPServer_getAuthTimeoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVRDPServer_getAuthTimeoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_setAuthTimeoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_getAllowMultiConnectionCompletedEventHandler(object sender, IVRDPServer_getAllowMultiConnectionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVRDPServer_getAllowMultiConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVRDPServer_getAllowMultiConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_setAllowMultiConnectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_getReuseSingleConnectionCompletedEventHandler(object sender, IVRDPServer_getReuseSingleConnectionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IVRDPServer_getReuseSingleConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IVRDPServer_getReuseSingleConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IVRDPServer_setReuseSingleConnectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISession_getStateCompletedEventHandler(object sender, ISession_getStateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISession_getStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISession_getStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SessionState Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SessionState)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISession_getTypeCompletedEventHandler(object sender, ISession_getTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISession_getTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISession_getTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SessionType Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SessionType)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISession_getMachineCompletedEventHandler(object sender, ISession_getMachineCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISession_getMachineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISession_getMachineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISession_getConsoleCompletedEventHandler(object sender, ISession_getConsoleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISession_getConsoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISession_getConsoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISession_closeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISATAController_getEnabledCompletedEventHandler(object sender, ISATAController_getEnabledCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISATAController_getEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISATAController_getEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISATAController_setEnabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISATAController_getPortCountCompletedEventHandler(object sender, ISATAController_getPortCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISATAController_getPortCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISATAController_getPortCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISATAController_setPortCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISATAController_GetIDEEmulationPortCompletedEventHandler(object sender, ISATAController_GetIDEEmulationPortCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ISATAController_GetIDEEmulationPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ISATAController_GetIDEEmulationPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ISATAController_SetIDEEmulationPortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IManagedObjectRef_getInterfaceNameCompletedEventHandler(object sender, IManagedObjectRef_getInterfaceNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IManagedObjectRef_getInterfaceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IManagedObjectRef_getInterfaceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IManagedObjectRef_releaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IWebsessionManager_logonCompletedEventHandler(object sender, IWebsessionManager_logonCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IWebsessionManager_logonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IWebsessionManager_logonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IWebsessionManager_getSessionObjectCompletedEventHandler(object sender, IWebsessionManager_getSessionObjectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IWebsessionManager_getSessionObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IWebsessionManager_getSessionObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IWebsessionManager_logoffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceMetric_getMetricNameCompletedEventHandler(object sender, IPerformanceMetric_getMetricNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceMetric_getMetricNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceMetric_getMetricNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceMetric_getDescriptionCompletedEventHandler(object sender, IPerformanceMetric_getDescriptionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceMetric_getDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceMetric_getDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceMetric_getPeriodCompletedEventHandler(object sender, IPerformanceMetric_getPeriodCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceMetric_getPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceMetric_getPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceMetric_getCountCompletedEventHandler(object sender, IPerformanceMetric_getCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceMetric_getCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceMetric_getCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public uint Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceMetric_getUnitCompletedEventHandler(object sender, IPerformanceMetric_getUnitCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceMetric_getUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceMetric_getUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceMetric_getMinimumValueCompletedEventHandler(object sender, IPerformanceMetric_getMinimumValueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceMetric_getMinimumValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceMetric_getMinimumValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceMetric_getMaximumValueCompletedEventHandler(object sender, IPerformanceMetric_getMaximumValueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceMetric_getMaximumValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceMetric_getMaximumValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceCollector_getMetricNamesCompletedEventHandler(object sender, IPerformanceCollector_getMetricNamesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceCollector_getMetricNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceCollector_getMetricNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceCollector_getMetricsCompletedEventHandler(object sender, IPerformanceCollector_getMetricsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceCollector_getMetricsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceCollector_getMetricsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceCollector_setupMetricsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceCollector_enableMetricsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceCollector_disableMetricsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IPerformanceCollector_queryMetricsDataCompletedEventHandler(object sender, IPerformanceCollector_queryMetricsDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IPerformanceCollector_queryMetricsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IPerformanceCollector_queryMetricsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }

        /// <remarks/>
        public string[] returnObjects
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }

        /// <remarks/>
        public uint[] returnDataIndices
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint[])(this.results[2]));
            }
        }

        /// <remarks/>
        public uint[] returnDataLengths
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((uint[])(this.results[3]));
            }
        }

        /// <remarks/>
        public int[] returnval
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[4]));
            }
        }
    }
}